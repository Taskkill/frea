a && b = ((#&&) (a, b))
a || b = ((#||) (a, b))

a == b  = ((#=) (a, b))
a < b  = ((#<) (a, b))
a > b  = ((#>) (a, b))

a + b  = ((#+) (a, b))
a +. b  = ((#+.) (a, b))

a - b  = ((#-) (a, b))
a -. b  = ((#-.) (a, b))

a * b  = ((#*) (a, b))
a *. b  = ((#*.) (a, b))

a `div` b = ((#div) (a, b))
a / b  = ((#/) (a, b))

a ++ b  = ((#++) (a, b))
a .: b  = ((#:) (a, b))

head a  = ((#head) a)
tail a  = ((#tail) a)
nil? a  = ((#nil?) a)

show a = ((#show) a)

undefined = undefined

a !! b  = if (b == 0) then (head a) else ((tail a) !! (b - 1))

fst a  = ((#fst) a)
snd a  = ((#snd) a)

data Boolean
  = True
  | False

data Either a b
  = Left a
  | Right b

data Maybe a
  = Nothing
  | Just a

data List a
  = Nil
  | a : (List a)

-- data Aoo x y z = Bo (x y) z

data Boo x y z = Bo (x y z) -- | Bu y z

-- data Malformed x = Malformed (Either x)

-- data Coo a = Co a
