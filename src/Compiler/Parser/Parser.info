-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Compiler/Parser/Parser.y
-----------------------------------------------------------------------------

state 8 contains 17 shift/reduce conflicts.
state 33 contains 4 shift/reduce conflicts.
state 43 contains 1 shift/reduce conflicts.
state 44 contains 1 shift/reduce conflicts.
state 48 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 54 contains 1 shift/reduce conflicts.
state 55 contains 1 shift/reduce conflicts.
state 68 contains 14 shift/reduce conflicts.
state 77 contains 14 shift/reduce conflicts.
state 99 contains 1 shift/reduce conflicts.
state 100 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 114 contains 1 reduce/reduce conflicts.
state 199 contains 4 shift/reduce conflicts.

terminal match is unused
terminal with is unused
terminal type is unused
terminal '_' is unused
terminal the is unused
terminal claim is unused
terminal define is unused
terminal elim is unused
terminal assume is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserMain -> Program                       (0)
	%start_parserType -> Type                          (1)
	Program -> Exp                                     (2)
	Program -> Module                                  (3)
	Module -> module UpIdent where Layout__Declaration__   (4)
	Declaration -> Decl                                (5)
	Declaration -> Data                                (6)
	Data -> data UpIdent Params Constructors           (7)
	Constructors ->                                    (8)
	Constructors -> '=' Constr NoneOrMany__ConstrOther__   (9)
	ConName -> OpCon                                   (10)
	ConName -> '`' Con '`'                             (11)
	Constr -> UpIdent NoneOrMany__TyAppLeft__          (12)
	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__   (13)
	ConstrOther -> '|' Constr                          (14)
	Params -> NoneOrMany__Var__                        (15)
	LowIdent -> Var                                    (16)
	LowIdent -> '(' Op ')'                             (17)
	UpIdent -> Con                                     (18)
	UpIdent -> '(' opcon ')'                           (19)
	UpIdent -> unit                                    (20)
	Var -> varid                                       (21)
	Con -> conid                                       (22)
	Op -> op                                           (23)
	OpCon -> opcon                                     (24)
	Oper -> op                                         (25)
	Oper -> opcon                                      (26)
	Exp -> AppLeft                                     (27)
	Exp -> Application                                 (28)
	Exp -> '(' Exp ')'                                 (29)
	Application -> AppLeft OneOrMany__AppRight__       (30)
	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__   (31)
	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__   (32)
	Application -> AppLeft Oper OneOrMany__AppRight__   (33)
	AppLeft -> LowIdent                                (34)
	AppLeft -> Con                                     (35)
	AppLeft -> '(' opcon ')'                           (36)
	AppLeft -> symid                                   (37)
	AppLeft -> Lit                                     (38)
	AppLeft -> lambda Params '->' Exp                  (39)
	AppLeft -> '(' AppLeft ')'                         (40)
	AppLeft -> fix Exp                                 (41)
	AppLeft -> if Exp then Exp else Exp                (42)
	AppLeft -> let Layout__Binding__ in Exp            (43)
	AppLeft -> letrec LowIdent Params '=' Exp in Exp   (44)
	AppLeft -> '(' Exp CommaSeparated__Exp__ ')'       (45)
	AppLeft -> '[' NoneOrManySeparated__Exp__ ']'      (46)
	AppLeft -> '(' Application ')'                     (47)
	AppLeft -> '(' Exp '::' Type ')'                   (48)
	AppRight -> AppLeft                                (49)
	Binding -> LowIdent Params '=' Exp                 (50)
	Binding -> Var Op Params '=' Exp                   (51)
	Binding -> Var '`' Var '`' Params '=' Exp          (52)
	Binding -> rec LowIdent Params '=' Exp             (53)
	Binding -> rec Var Op Params '=' Exp               (54)
	Binding -> rec Var '`' Var '`' Params '=' Exp      (55)
	GlobalBinding -> LowIdent Params '=' Exp           (56)
	GlobalBinding -> Var Op Params '=' Exp             (57)
	GlobalBinding -> Var '`' Var '`' Params '=' Exp    (58)
	Decl -> GlobalBinding                              (59)
	Decl -> Annotation ';' GlobalBinding               (60)
	Lit -> Integer                                     (61)
	Lit -> Double                                      (62)
	Lit -> char                                        (63)
	Lit -> string                                      (64)
	Integer -> integer                                 (65)
	Double -> double                                   (66)
	Annotation -> LowIdent '::' Type                   (67)
	Type -> TyAppLeft                                  (68)
	Type -> TyApp                                      (69)
	Type -> '(' Type ')'                               (70)
	TyArr -> Type '->' Type                            (71)
	TyTuple -> '(' Type CommaSeparated__Type__ ')'     (72)
	TyApp -> TyAppLeft OneOrMany__TyAppLeft__          (73)
	TyAppLeft -> LowIdent                              (74)
	TyAppLeft -> UpIdent                               (75)
	TyAppLeft -> TyArr                                 (76)
	TyAppLeft -> TyTuple                               (77)
	TyAppLeft -> '(' TyApp ')'                         (78)
	TyAppLeft -> '(' TyAppLeft ')'                     (79)
	CommaSeparated__Exp__ -> ',' Exp                   (80)
	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__   (81)
	CommaSeparated__Type__ -> ',' Type                 (82)
	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__   (83)
	Layout__Binding__ -> '{' LayoutInside__Binding__   (84)
	Layout__Declaration__ -> '{' LayoutInside__Declaration__   (85)
	NoneOrMany__ConstrOther__ ->                       (86)
	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__   (87)
	NoneOrMany__TyAppLeft__ ->                         (88)
	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (89)
	NoneOrMany__Var__ ->                               (90)
	NoneOrMany__Var__ -> Var NoneOrMany__Var__         (91)
	NoneOrManySeparated__Exp__ ->                      (92)
	NoneOrManySeparated__Exp__ -> Exp                  (93)
	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__   (94)
	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (95)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (96)
	LayoutInside__Binding__ -> Binding '}'             (97)
	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__   (98)
	LayoutInside__Declaration__ -> Declaration '}'     (99)
	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__   (100)
	NoneOrMany__AppRight__ ->                          (101)
	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (102)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	match          { TokMatch }
	with           { TokWith }
	data           { TokData }
	if             { TokIf }
	then           { TokThen }
	else           { TokElse }
	let            { TokLet }
	in             { TokIn }
	type           { TokType }
	'_'            { TokHole }
	the            { TokThe }
	claim          { TokClaim }
	define         { TokDefine }
	lambda         { TokLambda }
	fix            { TokFix }
	letrec         { TokLetrec }
	'->'           { TokOperator "->" }
	'='            { TokOperator "=" }
	'|'            { TokOperator "|" }
	'::'           { TokHasType }
	varid          { TokVarLower $$ }
	conid          { TokVarUpper $$ }
	op             { TokOperator $$ }
	opcon          { TokOpConstr $$ }
	symid          { TokNativeSym $$ }
	elim           { TokEliminator $$ }
	'('            { TokLeftParen }
	')'            { TokRightParen }
	'['            { TokLeftBracket }
	']'            { TokRightBracket }
	','            { TokComma }
	'`'            { TokBackTick }
	'{'            { TokLeftBrace }
	'}'            { TokRightBrace }
	';'            { TokSemicolon }
	unit           { TokVarUpper "()" }
	integer        { TokInt $$ }
	char           { TokChar $$ }
	double         { TokDouble $$ }
	string         { TokString $$ }
	assume         { TokAssume }
	rec            { TokRec }
	module         { TokModule }
	where          { TokWhere }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserMain rule  0
	%start_parserType rule  1
	Program         rules 2, 3
	Module          rule  4
	Declaration     rules 5, 6
	Data            rule  7
	Constructors    rules 8, 9
	ConName         rules 10, 11
	Constr          rules 12, 13
	ConstrOther     rule  14
	Params          rule  15
	LowIdent        rules 16, 17
	UpIdent         rules 18, 19, 20
	Var             rule  21
	Con             rule  22
	Op              rule  23
	OpCon           rule  24
	Oper            rules 25, 26
	Exp             rules 27, 28, 29
	Application     rules 30, 31, 32, 33
	AppLeft         rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
	AppRight        rule  49
	Binding         rules 50, 51, 52, 53, 54, 55
	GlobalBinding   rules 56, 57, 58
	Decl            rules 59, 60
	Lit             rules 61, 62, 63, 64
	Integer         rule  65
	Double          rule  66
	Annotation      rule  67
	Type            rules 68, 69, 70
	TyArr           rule  71
	TyTuple         rule  72
	TyApp           rule  73
	TyAppLeft       rules 74, 75, 76, 77, 78, 79
	CommaSeparated__Exp__ rules 80, 81
	CommaSeparated__Type__ rules 82, 83
	Layout__Binding__ rule  84
	Layout__Declaration__ rule  85
	NoneOrMany__ConstrOther__ rules 86, 87
	NoneOrMany__TyAppLeft__ rules 88, 89
	NoneOrMany__Var__ rules 90, 91
	NoneOrManySeparated__Exp__ rules 92, 93, 94
	OneOrMany__AppRight__ rule  95
	OneOrMany__TyAppLeft__ rule  96
	LayoutInside__Binding__ rules 97, 98
	LayoutInside__Declaration__ rules 99, 100
	NoneOrMany__AppRight__ rules 101, 102

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parserMain -> . Program                      (rule 0)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25
	module         shift, and enter state 38

	Program        goto state 36
	Module         goto state 37
	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 1

	%start_parserType -> . Type                         (rule 1)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 29
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 2

	Program -> . Exp                                    (rule 2)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 3

	AppLeft -> LowIdent .                               (rule 34)

	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	let            reduce using rule 34
	in             reduce using rule 34
	lambda         reduce using rule 34
	fix            reduce using rule 34
	letrec         reduce using rule 34
	'::'           reduce using rule 34
	varid          reduce using rule 34
	conid          reduce using rule 34
	op             reduce using rule 34
	opcon          reduce using rule 34
	symid          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	'`'            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	integer        reduce using rule 34
	char           reduce using rule 34
	double         reduce using rule 34
	string         reduce using rule 34
	%eof           reduce using rule 34


State 4

	LowIdent -> Var .                                   (rule 16)

	if             reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	let            reduce using rule 16
	in             reduce using rule 16
	lambda         reduce using rule 16
	fix            reduce using rule 16
	letrec         reduce using rule 16
	'->'           reduce using rule 16
	'='            reduce using rule 16
	'|'            reduce using rule 16
	'::'           reduce using rule 16
	varid          reduce using rule 16
	conid          reduce using rule 16
	op             reduce using rule 16
	opcon          reduce using rule 16
	symid          reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	','            reduce using rule 16
	'`'            reduce using rule 16
	'}'            reduce using rule 16
	';'            reduce using rule 16
	unit           reduce using rule 16
	integer        reduce using rule 16
	char           reduce using rule 16
	double         reduce using rule 16
	string         reduce using rule 16
	%eof           reduce using rule 16


State 5

	AppLeft -> Con .                                    (rule 35)

	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	let            reduce using rule 35
	in             reduce using rule 35
	lambda         reduce using rule 35
	fix            reduce using rule 35
	letrec         reduce using rule 35
	'::'           reduce using rule 35
	varid          reduce using rule 35
	conid          reduce using rule 35
	op             reduce using rule 35
	opcon          reduce using rule 35
	symid          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	'`'            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	integer        reduce using rule 35
	char           reduce using rule 35
	double         reduce using rule 35
	string         reduce using rule 35
	%eof           reduce using rule 35


State 6

	Program -> Exp .                                    (rule 2)

	%eof           reduce using rule 2


State 7

	Exp -> Application .                                (rule 28)

	if             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	let            reduce using rule 28
	in             reduce using rule 28
	lambda         reduce using rule 28
	fix            reduce using rule 28
	letrec         reduce using rule 28
	'::'           reduce using rule 28
	varid          reduce using rule 28
	conid          reduce using rule 28
	op             reduce using rule 28
	opcon          reduce using rule 28
	symid          reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	','            reduce using rule 28
	'`'            reduce using rule 28
	'}'            reduce using rule 28
	';'            reduce using rule 28
	integer        reduce using rule 28
	char           reduce using rule 28
	double         reduce using rule 28
	string         reduce using rule 28
	%eof           reduce using rule 28


State 8

	Exp -> AppLeft .                                    (rule 27)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 30)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 31)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 32)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 33)

	if             shift, and enter state 12
			(reduce using rule 27)

	then           reduce using rule 27
	else           reduce using rule 27
	let            shift, and enter state 13
			(reduce using rule 27)

	in             reduce using rule 27
	lambda         shift, and enter state 14
			(reduce using rule 27)

	fix            shift, and enter state 15
			(reduce using rule 27)

	letrec         shift, and enter state 16
			(reduce using rule 27)

	'::'           reduce using rule 27
	varid          shift, and enter state 17
			(reduce using rule 27)

	conid          shift, and enter state 18
			(reduce using rule 27)

	op             shift, and enter state 70
			(reduce using rule 27)

	opcon          shift, and enter state 71
			(reduce using rule 27)

	symid          shift, and enter state 19
			(reduce using rule 27)

	'('            shift, and enter state 72
			(reduce using rule 27)

	')'            reduce using rule 27
	'['            shift, and enter state 21
			(reduce using rule 27)

	']'            reduce using rule 27
	','            reduce using rule 27
	'`'            shift, and enter state 73
			(reduce using rule 27)

	'}'            reduce using rule 27
	';'            reduce using rule 27
	integer        shift, and enter state 22
			(reduce using rule 27)

	char           shift, and enter state 23
			(reduce using rule 27)

	double         shift, and enter state 24
			(reduce using rule 27)

	string         shift, and enter state 25
			(reduce using rule 27)

	%eof           reduce using rule 27

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 66
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 69

State 9

	AppLeft -> Lit .                                    (rule 38)

	if             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	let            reduce using rule 38
	in             reduce using rule 38
	lambda         reduce using rule 38
	fix            reduce using rule 38
	letrec         reduce using rule 38
	'::'           reduce using rule 38
	varid          reduce using rule 38
	conid          reduce using rule 38
	op             reduce using rule 38
	opcon          reduce using rule 38
	symid          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	'`'            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38
	integer        reduce using rule 38
	char           reduce using rule 38
	double         reduce using rule 38
	string         reduce using rule 38
	%eof           reduce using rule 38


State 10

	Lit -> Integer .                                    (rule 61)

	if             reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	let            reduce using rule 61
	in             reduce using rule 61
	lambda         reduce using rule 61
	fix            reduce using rule 61
	letrec         reduce using rule 61
	'::'           reduce using rule 61
	varid          reduce using rule 61
	conid          reduce using rule 61
	op             reduce using rule 61
	opcon          reduce using rule 61
	symid          reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	','            reduce using rule 61
	'`'            reduce using rule 61
	'}'            reduce using rule 61
	';'            reduce using rule 61
	integer        reduce using rule 61
	char           reduce using rule 61
	double         reduce using rule 61
	string         reduce using rule 61
	%eof           reduce using rule 61


State 11

	Lit -> Double .                                     (rule 62)

	if             reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	let            reduce using rule 62
	in             reduce using rule 62
	lambda         reduce using rule 62
	fix            reduce using rule 62
	letrec         reduce using rule 62
	'::'           reduce using rule 62
	varid          reduce using rule 62
	conid          reduce using rule 62
	op             reduce using rule 62
	opcon          reduce using rule 62
	symid          reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	','            reduce using rule 62
	'`'            reduce using rule 62
	'}'            reduce using rule 62
	';'            reduce using rule 62
	integer        reduce using rule 62
	char           reduce using rule 62
	double         reduce using rule 62
	string         reduce using rule 62
	%eof           reduce using rule 62


State 12

	AppLeft -> if . Exp then Exp else Exp               (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 65
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 13

	AppLeft -> let . Layout__Binding__ in Exp           (rule 43)

	'{'            shift, and enter state 64

	Layout__Binding__goto state 63

State 14

	AppLeft -> lambda . Params '->' Exp                 (rule 39)

	'->'           reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 60
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 15

	AppLeft -> fix . Exp                                (rule 41)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 59
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 16

	AppLeft -> letrec . LowIdent Params '=' Exp in Exp    (rule 44)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 57
	Var            goto state 4

State 17

	Var -> varid .                                      (rule 21)

	if             reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	let            reduce using rule 21
	in             reduce using rule 21
	lambda         reduce using rule 21
	fix            reduce using rule 21
	letrec         reduce using rule 21
	'->'           reduce using rule 21
	'='            reduce using rule 21
	'|'            reduce using rule 21
	'::'           reduce using rule 21
	varid          reduce using rule 21
	conid          reduce using rule 21
	op             reduce using rule 21
	opcon          reduce using rule 21
	symid          reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	','            reduce using rule 21
	'`'            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21
	unit           reduce using rule 21
	integer        reduce using rule 21
	char           reduce using rule 21
	double         reduce using rule 21
	string         reduce using rule 21
	%eof           reduce using rule 21


State 18

	Con -> conid .                                      (rule 22)

	if             reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	let            reduce using rule 22
	in             reduce using rule 22
	lambda         reduce using rule 22
	fix            reduce using rule 22
	letrec         reduce using rule 22
	'->'           reduce using rule 22
	'='            reduce using rule 22
	'|'            reduce using rule 22
	'::'           reduce using rule 22
	varid          reduce using rule 22
	conid          reduce using rule 22
	op             reduce using rule 22
	opcon          reduce using rule 22
	symid          reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	','            reduce using rule 22
	'`'            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22
	unit           reduce using rule 22
	integer        reduce using rule 22
	char           reduce using rule 22
	double         reduce using rule 22
	string         reduce using rule 22
	where          reduce using rule 22
	%eof           reduce using rule 22


State 19

	AppLeft -> symid .                                  (rule 37)

	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	let            reduce using rule 37
	in             reduce using rule 37
	lambda         reduce using rule 37
	fix            reduce using rule 37
	letrec         reduce using rule 37
	'::'           reduce using rule 37
	varid          reduce using rule 37
	conid          reduce using rule 37
	op             reduce using rule 37
	opcon          reduce using rule 37
	symid          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37
	'`'            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37
	integer        reduce using rule 37
	char           reduce using rule 37
	double         reduce using rule 37
	string         reduce using rule 37
	%eof           reduce using rule 37


State 20

	LowIdent -> '(' . Op ')'                            (rule 17)
	Exp -> '(' . Exp ')'                                (rule 29)
	AppLeft -> '(' . opcon ')'                          (rule 36)
	AppLeft -> '(' . AppLeft ')'                        (rule 40)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' . Application ')'                    (rule 47)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 48)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 56
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 41
	Exp            goto state 53
	Application    goto state 54
	AppLeft        goto state 55
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 21

	AppLeft -> '[' . NoneOrManySeparated__Exp__ ']'     (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 92
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 51
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 52

State 22

	Integer -> integer .                                (rule 65)

	if             reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	let            reduce using rule 65
	in             reduce using rule 65
	lambda         reduce using rule 65
	fix            reduce using rule 65
	letrec         reduce using rule 65
	'::'           reduce using rule 65
	varid          reduce using rule 65
	conid          reduce using rule 65
	op             reduce using rule 65
	opcon          reduce using rule 65
	symid          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	','            reduce using rule 65
	'`'            reduce using rule 65
	'}'            reduce using rule 65
	';'            reduce using rule 65
	integer        reduce using rule 65
	char           reduce using rule 65
	double         reduce using rule 65
	string         reduce using rule 65
	%eof           reduce using rule 65


State 23

	Lit -> char .                                       (rule 63)

	if             reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	let            reduce using rule 63
	in             reduce using rule 63
	lambda         reduce using rule 63
	fix            reduce using rule 63
	letrec         reduce using rule 63
	'::'           reduce using rule 63
	varid          reduce using rule 63
	conid          reduce using rule 63
	op             reduce using rule 63
	opcon          reduce using rule 63
	symid          reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	','            reduce using rule 63
	'`'            reduce using rule 63
	'}'            reduce using rule 63
	';'            reduce using rule 63
	integer        reduce using rule 63
	char           reduce using rule 63
	double         reduce using rule 63
	string         reduce using rule 63
	%eof           reduce using rule 63


State 24

	Double -> double .                                  (rule 66)

	if             reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	let            reduce using rule 66
	in             reduce using rule 66
	lambda         reduce using rule 66
	fix            reduce using rule 66
	letrec         reduce using rule 66
	'::'           reduce using rule 66
	varid          reduce using rule 66
	conid          reduce using rule 66
	op             reduce using rule 66
	opcon          reduce using rule 66
	symid          reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	','            reduce using rule 66
	'`'            reduce using rule 66
	'}'            reduce using rule 66
	';'            reduce using rule 66
	integer        reduce using rule 66
	char           reduce using rule 66
	double         reduce using rule 66
	string         reduce using rule 66
	%eof           reduce using rule 66


State 25

	Lit -> string .                                     (rule 64)

	if             reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	let            reduce using rule 64
	in             reduce using rule 64
	lambda         reduce using rule 64
	fix            reduce using rule 64
	letrec         reduce using rule 64
	'::'           reduce using rule 64
	varid          reduce using rule 64
	conid          reduce using rule 64
	op             reduce using rule 64
	opcon          reduce using rule 64
	symid          reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	','            reduce using rule 64
	'`'            reduce using rule 64
	'}'            reduce using rule 64
	';'            reduce using rule 64
	integer        reduce using rule 64
	char           reduce using rule 64
	double         reduce using rule 64
	string         reduce using rule 64
	%eof           reduce using rule 64


State 26

	TyAppLeft -> LowIdent .                             (rule 74)

	'->'           reduce using rule 74
	'|'            reduce using rule 74
	varid          reduce using rule 74
	conid          reduce using rule 74
	opcon          reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	','            reduce using rule 74
	'`'            reduce using rule 74
	'}'            reduce using rule 74
	';'            reduce using rule 74
	unit           reduce using rule 74
	%eof           reduce using rule 74


State 27

	TyAppLeft -> UpIdent .                              (rule 75)

	'->'           reduce using rule 75
	'|'            reduce using rule 75
	varid          reduce using rule 75
	conid          reduce using rule 75
	opcon          reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	','            reduce using rule 75
	'`'            reduce using rule 75
	'}'            reduce using rule 75
	';'            reduce using rule 75
	unit           reduce using rule 75
	%eof           reduce using rule 75


State 28

	UpIdent -> Con .                                    (rule 18)

	'->'           reduce using rule 18
	'='            reduce using rule 18
	'|'            reduce using rule 18
	varid          reduce using rule 18
	conid          reduce using rule 18
	opcon          reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18
	'`'            reduce using rule 18
	'}'            reduce using rule 18
	';'            reduce using rule 18
	unit           reduce using rule 18
	where          reduce using rule 18
	%eof           reduce using rule 18


State 29

	%start_parserType -> Type .                         (rule 1)
	TyArr -> Type . '->' Type                           (rule 71)

	'->'           shift, and enter state 50
	%eof           accept


State 30

	TyAppLeft -> TyArr .                                (rule 76)

	'->'           reduce using rule 76
	'|'            reduce using rule 76
	varid          reduce using rule 76
	conid          reduce using rule 76
	opcon          reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	','            reduce using rule 76
	'`'            reduce using rule 76
	'}'            reduce using rule 76
	';'            reduce using rule 76
	unit           reduce using rule 76
	%eof           reduce using rule 76


State 31

	TyAppLeft -> TyTuple .                              (rule 77)

	'->'           reduce using rule 77
	'|'            reduce using rule 77
	varid          reduce using rule 77
	conid          reduce using rule 77
	opcon          reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	','            reduce using rule 77
	'`'            reduce using rule 77
	'}'            reduce using rule 77
	';'            reduce using rule 77
	unit           reduce using rule 77
	%eof           reduce using rule 77


State 32

	Type -> TyApp .                                     (rule 69)

	'->'           reduce using rule 69
	'|'            reduce using rule 69
	varid          reduce using rule 69
	conid          reduce using rule 69
	opcon          reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	','            reduce using rule 69
	'`'            reduce using rule 69
	'}'            reduce using rule 69
	';'            reduce using rule 69
	unit           reduce using rule 69
	%eof           reduce using rule 69


State 33

	Type -> TyAppLeft .                                 (rule 68)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 73)

	'->'           reduce using rule 68
	'|'            reduce using rule 68
	varid          shift, and enter state 17
			(reduce using rule 68)

	conid          shift, and enter state 18
			(reduce using rule 68)

	opcon          reduce using rule 68
	'('            shift, and enter state 34
			(reduce using rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	'`'            reduce using rule 68
	'}'            reduce using rule 68
	';'            reduce using rule 68
	unit           shift, and enter state 35
			(reduce using rule 68)

	%eof           reduce using rule 68

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 34

	LowIdent -> '(' . Op ')'                            (rule 17)
	UpIdent -> '(' . opcon ')'                          (rule 19)
	Type -> '(' . Type ')'                              (rule 70)
	TyTuple -> '(' . Type CommaSeparated__Type__ ')'    (rule 72)
	TyAppLeft -> '(' . TyApp ')'                        (rule 78)
	TyAppLeft -> '(' . TyAppLeft ')'                    (rule 79)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 46
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Op             goto state 41
	Type           goto state 42
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 43
	TyAppLeft      goto state 44

State 35

	UpIdent -> unit .                                   (rule 20)

	'->'           reduce using rule 20
	'='            reduce using rule 20
	'|'            reduce using rule 20
	varid          reduce using rule 20
	conid          reduce using rule 20
	opcon          reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	'`'            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20
	unit           reduce using rule 20
	where          reduce using rule 20
	%eof           reduce using rule 20


State 36

	%start_parserMain -> Program .                      (rule 0)

	%eof           accept


State 37

	Program -> Module .                                 (rule 3)

	%eof           reduce using rule 3


State 38

	Module -> module . UpIdent where Layout__Declaration__    (rule 4)

	conid          shift, and enter state 18
	'('            shift, and enter state 40
	unit           shift, and enter state 35

	UpIdent        goto state 39
	Con            goto state 28

State 39

	Module -> module UpIdent . where Layout__Declaration__    (rule 4)

	where          shift, and enter state 109


State 40

	UpIdent -> '(' . opcon ')'                          (rule 19)

	opcon          shift, and enter state 46


State 41

	LowIdent -> '(' Op . ')'                            (rule 17)

	')'            shift, and enter state 108


State 42

	Type -> '(' Type . ')'                              (rule 70)
	TyArr -> Type . '->' Type                           (rule 71)
	TyTuple -> '(' Type . CommaSeparated__Type__ ')'    (rule 72)

	'->'           shift, and enter state 50
	')'            shift, and enter state 106
	','            shift, and enter state 107

	CommaSeparated__Type__goto state 105

State 43

	Type -> TyApp .                                     (rule 69)
	TyAppLeft -> '(' TyApp . ')'                        (rule 78)

	'->'           reduce using rule 69
	')'            shift, and enter state 104
			(reduce using rule 69)

	','            reduce using rule 69


State 44

	Type -> TyAppLeft .                                 (rule 68)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 73)
	TyAppLeft -> '(' TyAppLeft . ')'                    (rule 79)

	'->'           reduce using rule 68
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	')'            shift, and enter state 103
			(reduce using rule 68)

	','            reduce using rule 68
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 45

	Op -> op .                                          (rule 23)

	'='            reduce using rule 23
	varid          reduce using rule 23
	')'            reduce using rule 23


State 46

	UpIdent -> '(' opcon . ')'                          (rule 19)

	')'            shift, and enter state 102


State 47

	TyArr -> Type . '->' Type                           (rule 71)

	'->'           shift, and enter state 50


State 48

	Type -> TyAppLeft .                                 (rule 68)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 73)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 96)

	'->'           reduce using rule 88
			(reduce using rule 68)

	'|'            reduce using rule 88
	varid          shift, and enter state 17
			(reduce using rule 88)

	conid          shift, and enter state 18
			(reduce using rule 88)

	opcon          reduce using rule 88
	'('            shift, and enter state 34
			(reduce using rule 88)

	')'            reduce using rule 88
	','            reduce using rule 88
	'`'            reduce using rule 88
	'}'            reduce using rule 88
	';'            reduce using rule 88
	unit           shift, and enter state 35
			(reduce using rule 88)

	%eof           reduce using rule 88

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 101
	OneOrMany__TyAppLeft__goto state 49

State 49

	TyApp -> TyAppLeft OneOrMany__TyAppLeft__ .         (rule 73)

	'->'           reduce using rule 73
	'|'            reduce using rule 73
	varid          reduce using rule 73
	conid          reduce using rule 73
	opcon          reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	'`'            reduce using rule 73
	'}'            reduce using rule 73
	';'            reduce using rule 73
	unit           reduce using rule 73
	%eof           reduce using rule 73


State 50

	TyArr -> Type '->' . Type                           (rule 71)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 99
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 51

	NoneOrManySeparated__Exp__ -> Exp .                 (rule 93)
	NoneOrManySeparated__Exp__ -> Exp . ',' NoneOrManySeparated__Exp__    (rule 94)

	']'            reduce using rule 93
	','            shift, and enter state 98


State 52

	AppLeft -> '[' NoneOrManySeparated__Exp__ . ']'     (rule 46)

	']'            shift, and enter state 97


State 53

	Exp -> '(' Exp . ')'                                (rule 29)
	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 48)

	'::'           shift, and enter state 94
	')'            shift, and enter state 95
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 93

State 54

	Exp -> Application .                                (rule 28)
	AppLeft -> '(' Application . ')'                    (rule 47)

	'::'           reduce using rule 28
	')'            shift, and enter state 92
			(reduce using rule 28)

	','            reduce using rule 28


State 55

	Exp -> AppLeft .                                    (rule 27)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 30)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 31)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 32)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 33)
	AppLeft -> '(' AppLeft . ')'                        (rule 40)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	'::'           reduce using rule 27
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 70
	opcon          shift, and enter state 71
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	')'            shift, and enter state 91
			(reduce using rule 27)

	'['            shift, and enter state 21
	','            reduce using rule 27
	'`'            shift, and enter state 73
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 66
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 69

State 56

	AppLeft -> '(' opcon . ')'                          (rule 36)

	')'            shift, and enter state 90


State 57

	AppLeft -> letrec LowIdent . Params '=' Exp in Exp    (rule 44)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 89
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 58

	LowIdent -> '(' . Op ')'                            (rule 17)

	op             shift, and enter state 45

	Op             goto state 41

State 59

	AppLeft -> fix Exp .                                (rule 41)

	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	let            reduce using rule 41
	in             reduce using rule 41
	lambda         reduce using rule 41
	fix            reduce using rule 41
	letrec         reduce using rule 41
	'::'           reduce using rule 41
	varid          reduce using rule 41
	conid          reduce using rule 41
	op             reduce using rule 41
	opcon          reduce using rule 41
	symid          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	'`'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	integer        reduce using rule 41
	char           reduce using rule 41
	double         reduce using rule 41
	string         reduce using rule 41
	%eof           reduce using rule 41


State 60

	AppLeft -> lambda Params . '->' Exp                 (rule 39)

	'->'           shift, and enter state 88


State 61

	NoneOrMany__Var__ -> Var . NoneOrMany__Var__        (rule 91)

	'->'           reduce using rule 90
	'='            reduce using rule 90
	varid          shift, and enter state 17
	'}'            reduce using rule 90
	';'            reduce using rule 90

	Var            goto state 61
	NoneOrMany__Var__goto state 87

State 62

	Params -> NoneOrMany__Var__ .                       (rule 15)

	'->'           reduce using rule 15
	'='            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15


State 63

	AppLeft -> let Layout__Binding__ . in Exp           (rule 43)

	in             shift, and enter state 86


State 64

	Layout__Binding__ -> '{' . LayoutInside__Binding__    (rule 84)

	varid          shift, and enter state 17
	'('            shift, and enter state 58
	rec            shift, and enter state 85

	LowIdent       goto state 81
	Var            goto state 82
	Binding        goto state 83
	LayoutInside__Binding__goto state 84

State 65

	AppLeft -> if Exp . then Exp else Exp               (rule 42)

	then           shift, and enter state 80


State 66

	Application -> AppLeft Oper . OneOrMany__AppRight__    (rule 33)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 79

State 67

	AppRight -> AppLeft .                               (rule 49)

	if             reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	let            reduce using rule 49
	in             reduce using rule 49
	lambda         reduce using rule 49
	fix            reduce using rule 49
	letrec         reduce using rule 49
	'::'           reduce using rule 49
	varid          reduce using rule 49
	conid          reduce using rule 49
	op             reduce using rule 49
	opcon          reduce using rule 49
	symid          reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	'`'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49
	integer        reduce using rule 49
	char           reduce using rule 49
	double         reduce using rule 49
	string         reduce using rule 49
	%eof           reduce using rule 49


State 68

	OneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 95)

	if             shift, and enter state 12
			(reduce using rule 101)

	then           reduce using rule 101
	else           reduce using rule 101
	let            shift, and enter state 13
			(reduce using rule 101)

	in             reduce using rule 101
	lambda         shift, and enter state 14
			(reduce using rule 101)

	fix            shift, and enter state 15
			(reduce using rule 101)

	letrec         shift, and enter state 16
			(reduce using rule 101)

	'::'           reduce using rule 101
	varid          shift, and enter state 17
			(reduce using rule 101)

	conid          shift, and enter state 18
			(reduce using rule 101)

	op             reduce using rule 101
	opcon          reduce using rule 101
	symid          shift, and enter state 19
			(reduce using rule 101)

	'('            shift, and enter state 72
			(reduce using rule 101)

	')'            reduce using rule 101
	'['            shift, and enter state 21
			(reduce using rule 101)

	']'            reduce using rule 101
	','            reduce using rule 101
	'`'            reduce using rule 101
	'}'            reduce using rule 101
	';'            reduce using rule 101
	integer        shift, and enter state 22
			(reduce using rule 101)

	char           shift, and enter state 23
			(reduce using rule 101)

	double         shift, and enter state 24
			(reduce using rule 101)

	string         shift, and enter state 25
			(reduce using rule 101)

	%eof           reduce using rule 101

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 77
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 78

State 69

	Application -> AppLeft OneOrMany__AppRight__ .      (rule 30)

	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	let            reduce using rule 30
	in             reduce using rule 30
	lambda         reduce using rule 30
	fix            reduce using rule 30
	letrec         reduce using rule 30
	'::'           reduce using rule 30
	varid          reduce using rule 30
	conid          reduce using rule 30
	op             reduce using rule 30
	opcon          reduce using rule 30
	symid          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	'`'            reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30
	integer        reduce using rule 30
	char           reduce using rule 30
	double         reduce using rule 30
	string         reduce using rule 30
	%eof           reduce using rule 30


State 70

	Oper -> op .                                        (rule 25)

	if             reduce using rule 25
	let            reduce using rule 25
	lambda         reduce using rule 25
	fix            reduce using rule 25
	letrec         reduce using rule 25
	varid          reduce using rule 25
	conid          reduce using rule 25
	symid          reduce using rule 25
	'('            reduce using rule 25
	'['            reduce using rule 25
	integer        reduce using rule 25
	char           reduce using rule 25
	double         reduce using rule 25
	string         reduce using rule 25


State 71

	Oper -> opcon .                                     (rule 26)

	if             reduce using rule 26
	let            reduce using rule 26
	lambda         reduce using rule 26
	fix            reduce using rule 26
	letrec         reduce using rule 26
	varid          reduce using rule 26
	conid          reduce using rule 26
	symid          reduce using rule 26
	'('            reduce using rule 26
	'['            reduce using rule 26
	integer        reduce using rule 26
	char           reduce using rule 26
	double         reduce using rule 26
	string         reduce using rule 26


State 72

	LowIdent -> '(' . Op ')'                            (rule 17)
	AppLeft -> '(' . opcon ')'                          (rule 36)
	AppLeft -> '(' . AppLeft ')'                        (rule 40)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' . Application ')'                    (rule 47)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 48)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 56
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 41
	Exp            goto state 76
	Application    goto state 54
	AppLeft        goto state 55
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 73

	Application -> AppLeft '`' . Var '`' OneOrMany__AppRight__    (rule 31)
	Application -> AppLeft '`' . Con '`' OneOrMany__AppRight__    (rule 32)

	varid          shift, and enter state 17
	conid          shift, and enter state 18

	Var            goto state 74
	Con            goto state 75

State 74

	Application -> AppLeft '`' Var . '`' OneOrMany__AppRight__    (rule 31)

	'`'            shift, and enter state 132


State 75

	Application -> AppLeft '`' Con . '`' OneOrMany__AppRight__    (rule 32)

	'`'            shift, and enter state 131


State 76

	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 48)

	'::'           shift, and enter state 94
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 93

State 77

	NoneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 102)

	if             shift, and enter state 12
			(reduce using rule 101)

	then           reduce using rule 101
	else           reduce using rule 101
	let            shift, and enter state 13
			(reduce using rule 101)

	in             reduce using rule 101
	lambda         shift, and enter state 14
			(reduce using rule 101)

	fix            shift, and enter state 15
			(reduce using rule 101)

	letrec         shift, and enter state 16
			(reduce using rule 101)

	'::'           reduce using rule 101
	varid          shift, and enter state 17
			(reduce using rule 101)

	conid          shift, and enter state 18
			(reduce using rule 101)

	op             reduce using rule 101
	opcon          reduce using rule 101
	symid          shift, and enter state 19
			(reduce using rule 101)

	'('            shift, and enter state 72
			(reduce using rule 101)

	')'            reduce using rule 101
	'['            shift, and enter state 21
			(reduce using rule 101)

	']'            reduce using rule 101
	','            reduce using rule 101
	'`'            reduce using rule 101
	'}'            reduce using rule 101
	';'            reduce using rule 101
	integer        shift, and enter state 22
			(reduce using rule 101)

	char           shift, and enter state 23
			(reduce using rule 101)

	double         shift, and enter state 24
			(reduce using rule 101)

	string         shift, and enter state 25
			(reduce using rule 101)

	%eof           reduce using rule 101

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 77
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 130

State 78

	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 95)

	if             reduce using rule 95
	then           reduce using rule 95
	else           reduce using rule 95
	let            reduce using rule 95
	in             reduce using rule 95
	lambda         reduce using rule 95
	fix            reduce using rule 95
	letrec         reduce using rule 95
	'::'           reduce using rule 95
	varid          reduce using rule 95
	conid          reduce using rule 95
	op             reduce using rule 95
	opcon          reduce using rule 95
	symid          reduce using rule 95
	'('            reduce using rule 95
	')'            reduce using rule 95
	'['            reduce using rule 95
	']'            reduce using rule 95
	','            reduce using rule 95
	'`'            reduce using rule 95
	'}'            reduce using rule 95
	';'            reduce using rule 95
	integer        reduce using rule 95
	char           reduce using rule 95
	double         reduce using rule 95
	string         reduce using rule 95
	%eof           reduce using rule 95


State 79

	Application -> AppLeft Oper OneOrMany__AppRight__ .    (rule 33)

	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	let            reduce using rule 33
	in             reduce using rule 33
	lambda         reduce using rule 33
	fix            reduce using rule 33
	letrec         reduce using rule 33
	'::'           reduce using rule 33
	varid          reduce using rule 33
	conid          reduce using rule 33
	op             reduce using rule 33
	opcon          reduce using rule 33
	symid          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	','            reduce using rule 33
	'`'            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	integer        reduce using rule 33
	char           reduce using rule 33
	double         reduce using rule 33
	string         reduce using rule 33
	%eof           reduce using rule 33


State 80

	AppLeft -> if Exp then . Exp else Exp               (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 129
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 81

	Binding -> LowIdent . Params '=' Exp                (rule 50)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 128
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 82

	LowIdent -> Var .                                   (rule 16)
	Binding -> Var . Op Params '=' Exp                  (rule 51)
	Binding -> Var . '`' Var '`' Params '=' Exp         (rule 52)

	'='            reduce using rule 16
	varid          reduce using rule 16
	op             shift, and enter state 45
	'`'            shift, and enter state 127

	Op             goto state 126

State 83

	LayoutInside__Binding__ -> Binding . '}'            (rule 97)
	LayoutInside__Binding__ -> Binding . ';' LayoutInside__Binding__    (rule 98)

	'}'            shift, and enter state 124
	';'            shift, and enter state 125


State 84

	Layout__Binding__ -> '{' LayoutInside__Binding__ .    (rule 84)

	in             reduce using rule 84


State 85

	Binding -> rec . LowIdent Params '=' Exp            (rule 53)
	Binding -> rec . Var Op Params '=' Exp              (rule 54)
	Binding -> rec . Var '`' Var '`' Params '=' Exp     (rule 55)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 122
	Var            goto state 123

State 86

	AppLeft -> let Layout__Binding__ in . Exp           (rule 43)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 121
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 87

	NoneOrMany__Var__ -> Var NoneOrMany__Var__ .        (rule 91)

	'->'           reduce using rule 91
	'='            reduce using rule 91
	'}'            reduce using rule 91
	';'            reduce using rule 91


State 88

	AppLeft -> lambda Params '->' . Exp                 (rule 39)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 120
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 89

	AppLeft -> letrec LowIdent Params . '=' Exp in Exp    (rule 44)

	'='            shift, and enter state 119


State 90

	AppLeft -> '(' opcon ')' .                          (rule 36)

	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	let            reduce using rule 36
	in             reduce using rule 36
	lambda         reduce using rule 36
	fix            reduce using rule 36
	letrec         reduce using rule 36
	'::'           reduce using rule 36
	varid          reduce using rule 36
	conid          reduce using rule 36
	op             reduce using rule 36
	opcon          reduce using rule 36
	symid          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	','            reduce using rule 36
	'`'            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	integer        reduce using rule 36
	char           reduce using rule 36
	double         reduce using rule 36
	string         reduce using rule 36
	%eof           reduce using rule 36


State 91

	AppLeft -> '(' AppLeft ')' .                        (rule 40)

	if             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	let            reduce using rule 40
	in             reduce using rule 40
	lambda         reduce using rule 40
	fix            reduce using rule 40
	letrec         reduce using rule 40
	'::'           reduce using rule 40
	varid          reduce using rule 40
	conid          reduce using rule 40
	op             reduce using rule 40
	opcon          reduce using rule 40
	symid          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	'`'            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40
	integer        reduce using rule 40
	char           reduce using rule 40
	double         reduce using rule 40
	string         reduce using rule 40
	%eof           reduce using rule 40


State 92

	AppLeft -> '(' Application ')' .                    (rule 47)

	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	let            reduce using rule 47
	in             reduce using rule 47
	lambda         reduce using rule 47
	fix            reduce using rule 47
	letrec         reduce using rule 47
	'::'           reduce using rule 47
	varid          reduce using rule 47
	conid          reduce using rule 47
	op             reduce using rule 47
	opcon          reduce using rule 47
	symid          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	'`'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	integer        reduce using rule 47
	char           reduce using rule 47
	double         reduce using rule 47
	string         reduce using rule 47
	%eof           reduce using rule 47


State 93

	AppLeft -> '(' Exp CommaSeparated__Exp__ . ')'      (rule 45)

	')'            shift, and enter state 118


State 94

	AppLeft -> '(' Exp '::' . Type ')'                  (rule 48)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 117
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 95

	Exp -> '(' Exp ')' .                                (rule 29)

	if             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	let            reduce using rule 29
	in             reduce using rule 29
	lambda         reduce using rule 29
	fix            reduce using rule 29
	letrec         reduce using rule 29
	'::'           reduce using rule 29
	varid          reduce using rule 29
	conid          reduce using rule 29
	op             reduce using rule 29
	opcon          reduce using rule 29
	symid          reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	','            reduce using rule 29
	'`'            reduce using rule 29
	'}'            reduce using rule 29
	';'            reduce using rule 29
	integer        reduce using rule 29
	char           reduce using rule 29
	double         reduce using rule 29
	string         reduce using rule 29
	%eof           reduce using rule 29


State 96

	CommaSeparated__Exp__ -> ',' . Exp                  (rule 80)
	CommaSeparated__Exp__ -> ',' . Exp CommaSeparated__Exp__    (rule 81)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 116
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 97

	AppLeft -> '[' NoneOrManySeparated__Exp__ ']' .     (rule 46)

	if             reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	let            reduce using rule 46
	in             reduce using rule 46
	lambda         reduce using rule 46
	fix            reduce using rule 46
	letrec         reduce using rule 46
	'::'           reduce using rule 46
	varid          reduce using rule 46
	conid          reduce using rule 46
	op             reduce using rule 46
	opcon          reduce using rule 46
	symid          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	'`'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	integer        reduce using rule 46
	char           reduce using rule 46
	double         reduce using rule 46
	string         reduce using rule 46
	%eof           reduce using rule 46


State 98

	NoneOrManySeparated__Exp__ -> Exp ',' . NoneOrManySeparated__Exp__    (rule 94)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 92
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 51
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 115

State 99

	TyArr -> Type . '->' Type                           (rule 71)
	TyArr -> Type '->' Type .                           (rule 71)

	'->'           shift, and enter state 50
			(reduce using rule 71)

	'|'            reduce using rule 71
	varid          reduce using rule 71
	conid          reduce using rule 71
	opcon          reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	'`'            reduce using rule 71
	'}'            reduce using rule 71
	';'            reduce using rule 71
	unit           reduce using rule 71
	%eof           reduce using rule 71


State 100

	Type -> TyAppLeft .                                 (rule 68)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 73)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 89)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 96)

	'->'           reduce using rule 88
			(reduce using rule 68)

	'|'            reduce using rule 88
	varid          shift, and enter state 17
			(reduce using rule 88)

	conid          shift, and enter state 18
			(reduce using rule 88)

	opcon          reduce using rule 88
	'('            shift, and enter state 34
			(reduce using rule 88)

	')'            reduce using rule 88
	','            reduce using rule 88
	'`'            reduce using rule 88
	'}'            reduce using rule 88
	';'            reduce using rule 88
	unit           shift, and enter state 35
			(reduce using rule 88)

	%eof           reduce using rule 88

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 114
	OneOrMany__TyAppLeft__goto state 49

State 101

	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 96)

	'->'           reduce using rule 96
	'|'            reduce using rule 96
	varid          reduce using rule 96
	conid          reduce using rule 96
	opcon          reduce using rule 96
	'('            reduce using rule 96
	')'            reduce using rule 96
	','            reduce using rule 96
	'`'            reduce using rule 96
	'}'            reduce using rule 96
	';'            reduce using rule 96
	unit           reduce using rule 96
	%eof           reduce using rule 96


State 102

	UpIdent -> '(' opcon ')' .                          (rule 19)

	'->'           reduce using rule 19
	'='            reduce using rule 19
	'|'            reduce using rule 19
	varid          reduce using rule 19
	conid          reduce using rule 19
	opcon          reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	'`'            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19
	unit           reduce using rule 19
	where          reduce using rule 19
	%eof           reduce using rule 19


State 103

	TyAppLeft -> '(' TyAppLeft ')' .                    (rule 79)

	'->'           reduce using rule 79
	'|'            reduce using rule 79
	varid          reduce using rule 79
	conid          reduce using rule 79
	opcon          reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	'`'            reduce using rule 79
	'}'            reduce using rule 79
	';'            reduce using rule 79
	unit           reduce using rule 79
	%eof           reduce using rule 79


State 104

	TyAppLeft -> '(' TyApp ')' .                        (rule 78)

	'->'           reduce using rule 78
	'|'            reduce using rule 78
	varid          reduce using rule 78
	conid          reduce using rule 78
	opcon          reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	','            reduce using rule 78
	'`'            reduce using rule 78
	'}'            reduce using rule 78
	';'            reduce using rule 78
	unit           reduce using rule 78
	%eof           reduce using rule 78


State 105

	TyTuple -> '(' Type CommaSeparated__Type__ . ')'    (rule 72)

	')'            shift, and enter state 113


State 106

	Type -> '(' Type ')' .                              (rule 70)

	'->'           reduce using rule 70
	'|'            reduce using rule 70
	varid          reduce using rule 70
	conid          reduce using rule 70
	opcon          reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	'`'            reduce using rule 70
	'}'            reduce using rule 70
	';'            reduce using rule 70
	unit           reduce using rule 70
	%eof           reduce using rule 70


State 107

	CommaSeparated__Type__ -> ',' . Type                (rule 82)
	CommaSeparated__Type__ -> ',' . Type CommaSeparated__Type__    (rule 83)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 112
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 108

	LowIdent -> '(' Op ')' .                            (rule 17)

	if             reduce using rule 17
	then           reduce using rule 17
	else           reduce using rule 17
	let            reduce using rule 17
	in             reduce using rule 17
	lambda         reduce using rule 17
	fix            reduce using rule 17
	letrec         reduce using rule 17
	'->'           reduce using rule 17
	'='            reduce using rule 17
	'|'            reduce using rule 17
	'::'           reduce using rule 17
	varid          reduce using rule 17
	conid          reduce using rule 17
	op             reduce using rule 17
	opcon          reduce using rule 17
	symid          reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'['            reduce using rule 17
	']'            reduce using rule 17
	','            reduce using rule 17
	'`'            reduce using rule 17
	'}'            reduce using rule 17
	';'            reduce using rule 17
	unit           reduce using rule 17
	integer        reduce using rule 17
	char           reduce using rule 17
	double         reduce using rule 17
	string         reduce using rule 17
	%eof           reduce using rule 17


State 109

	Module -> module UpIdent where . Layout__Declaration__    (rule 4)

	'{'            shift, and enter state 111

	Layout__Declaration__goto state 110

State 110

	Module -> module UpIdent where Layout__Declaration__ .    (rule 4)

	%eof           reduce using rule 4


State 111

	Layout__Declaration__ -> '{' . LayoutInside__Declaration__    (rule 85)

	data           shift, and enter state 155
	varid          shift, and enter state 17
	'('            shift, and enter state 58

	Declaration    goto state 147
	Data           goto state 148
	LowIdent       goto state 149
	Var            goto state 150
	GlobalBinding  goto state 151
	Decl           goto state 152
	Annotation     goto state 153
	LayoutInside__Declaration__goto state 154

State 112

	TyArr -> Type . '->' Type                           (rule 71)
	CommaSeparated__Type__ -> ',' Type .                (rule 82)
	CommaSeparated__Type__ -> ',' Type . CommaSeparated__Type__    (rule 83)

	'->'           shift, and enter state 50
	')'            reduce using rule 82
	','            shift, and enter state 107

	CommaSeparated__Type__goto state 146

State 113

	TyTuple -> '(' Type CommaSeparated__Type__ ')' .    (rule 72)

	'->'           reduce using rule 72
	'|'            reduce using rule 72
	varid          reduce using rule 72
	conid          reduce using rule 72
	opcon          reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	'`'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72
	unit           reduce using rule 72
	%eof           reduce using rule 72


State 114

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 89)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 96)

	'->'           reduce using rule 96
			(reduce using rule 89)

	'|'            reduce using rule 89
	varid          reduce using rule 89
	conid          reduce using rule 89
	opcon          reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	','            reduce using rule 89
	'`'            reduce using rule 89
	'}'            reduce using rule 89
	';'            reduce using rule 89
	unit           reduce using rule 89
	%eof           reduce using rule 89


State 115

	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__ .    (rule 94)

	']'            reduce using rule 94


State 116

	CommaSeparated__Exp__ -> ',' Exp .                  (rule 80)
	CommaSeparated__Exp__ -> ',' Exp . CommaSeparated__Exp__    (rule 81)

	')'            reduce using rule 80
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 145

State 117

	AppLeft -> '(' Exp '::' Type . ')'                  (rule 48)
	TyArr -> Type . '->' Type                           (rule 71)

	'->'           shift, and enter state 50
	')'            shift, and enter state 144


State 118

	AppLeft -> '(' Exp CommaSeparated__Exp__ ')' .      (rule 45)

	if             reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	let            reduce using rule 45
	in             reduce using rule 45
	lambda         reduce using rule 45
	fix            reduce using rule 45
	letrec         reduce using rule 45
	'::'           reduce using rule 45
	varid          reduce using rule 45
	conid          reduce using rule 45
	op             reduce using rule 45
	opcon          reduce using rule 45
	symid          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'`'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	integer        reduce using rule 45
	char           reduce using rule 45
	double         reduce using rule 45
	string         reduce using rule 45
	%eof           reduce using rule 45


State 119

	AppLeft -> letrec LowIdent Params '=' . Exp in Exp    (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 143
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 120

	AppLeft -> lambda Params '->' Exp .                 (rule 39)

	if             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	let            reduce using rule 39
	in             reduce using rule 39
	lambda         reduce using rule 39
	fix            reduce using rule 39
	letrec         reduce using rule 39
	'::'           reduce using rule 39
	varid          reduce using rule 39
	conid          reduce using rule 39
	op             reduce using rule 39
	opcon          reduce using rule 39
	symid          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	'`'            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39
	integer        reduce using rule 39
	char           reduce using rule 39
	double         reduce using rule 39
	string         reduce using rule 39
	%eof           reduce using rule 39


State 121

	AppLeft -> let Layout__Binding__ in Exp .           (rule 43)

	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	let            reduce using rule 43
	in             reduce using rule 43
	lambda         reduce using rule 43
	fix            reduce using rule 43
	letrec         reduce using rule 43
	'::'           reduce using rule 43
	varid          reduce using rule 43
	conid          reduce using rule 43
	op             reduce using rule 43
	opcon          reduce using rule 43
	symid          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'`'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	integer        reduce using rule 43
	char           reduce using rule 43
	double         reduce using rule 43
	string         reduce using rule 43
	%eof           reduce using rule 43


State 122

	Binding -> rec LowIdent . Params '=' Exp            (rule 53)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 142
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 123

	LowIdent -> Var .                                   (rule 16)
	Binding -> rec Var . Op Params '=' Exp              (rule 54)
	Binding -> rec Var . '`' Var '`' Params '=' Exp     (rule 55)

	'='            reduce using rule 16
	varid          reduce using rule 16
	op             shift, and enter state 45
	'`'            shift, and enter state 141

	Op             goto state 140

State 124

	LayoutInside__Binding__ -> Binding '}' .            (rule 97)

	in             reduce using rule 97


State 125

	LayoutInside__Binding__ -> Binding ';' . LayoutInside__Binding__    (rule 98)

	varid          shift, and enter state 17
	'('            shift, and enter state 58
	rec            shift, and enter state 85

	LowIdent       goto state 81
	Var            goto state 82
	Binding        goto state 83
	LayoutInside__Binding__goto state 139

State 126

	Binding -> Var Op . Params '=' Exp                  (rule 51)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 138
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 127

	Binding -> Var '`' . Var '`' Params '=' Exp         (rule 52)

	varid          shift, and enter state 17

	Var            goto state 137

State 128

	Binding -> LowIdent Params . '=' Exp                (rule 50)

	'='            shift, and enter state 136


State 129

	AppLeft -> if Exp then Exp . else Exp               (rule 42)

	else           shift, and enter state 135


State 130

	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 102)

	if             reduce using rule 102
	then           reduce using rule 102
	else           reduce using rule 102
	let            reduce using rule 102
	in             reduce using rule 102
	lambda         reduce using rule 102
	fix            reduce using rule 102
	letrec         reduce using rule 102
	'::'           reduce using rule 102
	varid          reduce using rule 102
	conid          reduce using rule 102
	op             reduce using rule 102
	opcon          reduce using rule 102
	symid          reduce using rule 102
	'('            reduce using rule 102
	')'            reduce using rule 102
	'['            reduce using rule 102
	']'            reduce using rule 102
	','            reduce using rule 102
	'`'            reduce using rule 102
	'}'            reduce using rule 102
	';'            reduce using rule 102
	integer        reduce using rule 102
	char           reduce using rule 102
	double         reduce using rule 102
	string         reduce using rule 102
	%eof           reduce using rule 102


State 131

	Application -> AppLeft '`' Con '`' . OneOrMany__AppRight__    (rule 32)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 134

State 132

	Application -> AppLeft '`' Var '`' . OneOrMany__AppRight__    (rule 31)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 133

State 133

	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__ .    (rule 31)

	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	let            reduce using rule 31
	in             reduce using rule 31
	lambda         reduce using rule 31
	fix            reduce using rule 31
	letrec         reduce using rule 31
	'::'           reduce using rule 31
	varid          reduce using rule 31
	conid          reduce using rule 31
	op             reduce using rule 31
	opcon          reduce using rule 31
	symid          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	','            reduce using rule 31
	'`'            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	integer        reduce using rule 31
	char           reduce using rule 31
	double         reduce using rule 31
	string         reduce using rule 31
	%eof           reduce using rule 31


State 134

	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__ .    (rule 32)

	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	let            reduce using rule 32
	in             reduce using rule 32
	lambda         reduce using rule 32
	fix            reduce using rule 32
	letrec         reduce using rule 32
	'::'           reduce using rule 32
	varid          reduce using rule 32
	conid          reduce using rule 32
	op             reduce using rule 32
	opcon          reduce using rule 32
	symid          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	','            reduce using rule 32
	'`'            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	integer        reduce using rule 32
	char           reduce using rule 32
	double         reduce using rule 32
	string         reduce using rule 32
	%eof           reduce using rule 32


State 135

	AppLeft -> if Exp then Exp else . Exp               (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 171
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 136

	Binding -> LowIdent Params '=' . Exp                (rule 50)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 170
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 137

	Binding -> Var '`' Var . '`' Params '=' Exp         (rule 52)

	'`'            shift, and enter state 169


State 138

	Binding -> Var Op Params . '=' Exp                  (rule 51)

	'='            shift, and enter state 168


State 139

	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__ .    (rule 98)

	in             reduce using rule 98


State 140

	Binding -> rec Var Op . Params '=' Exp              (rule 54)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 167
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 141

	Binding -> rec Var '`' . Var '`' Params '=' Exp     (rule 55)

	varid          shift, and enter state 17

	Var            goto state 166

State 142

	Binding -> rec LowIdent Params . '=' Exp            (rule 53)

	'='            shift, and enter state 165


State 143

	AppLeft -> letrec LowIdent Params '=' Exp . in Exp    (rule 44)

	in             shift, and enter state 164


State 144

	AppLeft -> '(' Exp '::' Type ')' .                  (rule 48)

	if             reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	let            reduce using rule 48
	in             reduce using rule 48
	lambda         reduce using rule 48
	fix            reduce using rule 48
	letrec         reduce using rule 48
	'::'           reduce using rule 48
	varid          reduce using rule 48
	conid          reduce using rule 48
	op             reduce using rule 48
	opcon          reduce using rule 48
	symid          reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	'`'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	integer        reduce using rule 48
	char           reduce using rule 48
	double         reduce using rule 48
	string         reduce using rule 48
	%eof           reduce using rule 48


State 145

	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__ .    (rule 81)

	')'            reduce using rule 81


State 146

	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__ .    (rule 83)

	')'            reduce using rule 83


State 147

	LayoutInside__Declaration__ -> Declaration . '}'    (rule 99)
	LayoutInside__Declaration__ -> Declaration . ';' LayoutInside__Declaration__    (rule 100)

	'}'            shift, and enter state 162
	';'            shift, and enter state 163


State 148

	Declaration -> Data .                               (rule 6)

	'}'            reduce using rule 6
	';'            reduce using rule 6


State 149

	GlobalBinding -> LowIdent . Params '=' Exp          (rule 56)
	Annotation -> LowIdent . '::' Type                  (rule 67)

	'='            reduce using rule 90
	'::'           shift, and enter state 161
	varid          shift, and enter state 17

	Params         goto state 160
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 150

	LowIdent -> Var .                                   (rule 16)
	GlobalBinding -> Var . Op Params '=' Exp            (rule 57)
	GlobalBinding -> Var . '`' Var '`' Params '=' Exp    (rule 58)

	'='            reduce using rule 16
	'::'           reduce using rule 16
	varid          reduce using rule 16
	op             shift, and enter state 45
	'`'            shift, and enter state 159

	Op             goto state 158

State 151

	Decl -> GlobalBinding .                             (rule 59)

	'}'            reduce using rule 59
	';'            reduce using rule 59


State 152

	Declaration -> Decl .                               (rule 5)

	'}'            reduce using rule 5
	';'            reduce using rule 5


State 153

	Decl -> Annotation . ';' GlobalBinding              (rule 60)

	';'            shift, and enter state 157


State 154

	Layout__Declaration__ -> '{' LayoutInside__Declaration__ .    (rule 85)

	%eof           reduce using rule 85


State 155

	Data -> data . UpIdent Params Constructors          (rule 7)

	conid          shift, and enter state 18
	'('            shift, and enter state 40
	unit           shift, and enter state 35

	UpIdent        goto state 156
	Con            goto state 28

State 156

	Data -> data UpIdent . Params Constructors          (rule 7)

	'='            reduce using rule 90
	varid          shift, and enter state 17
	'}'            reduce using rule 90
	';'            reduce using rule 90

	Params         goto state 185
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 157

	Decl -> Annotation ';' . GlobalBinding              (rule 60)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 183
	Var            goto state 150
	GlobalBinding  goto state 184

State 158

	GlobalBinding -> Var Op . Params '=' Exp            (rule 57)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 182
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 159

	GlobalBinding -> Var '`' . Var '`' Params '=' Exp    (rule 58)

	varid          shift, and enter state 17

	Var            goto state 181

State 160

	GlobalBinding -> LowIdent Params . '=' Exp          (rule 56)

	'='            shift, and enter state 180


State 161

	Annotation -> LowIdent '::' . Type                  (rule 67)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 179
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 162

	LayoutInside__Declaration__ -> Declaration '}' .    (rule 99)

	%eof           reduce using rule 99


State 163

	LayoutInside__Declaration__ -> Declaration ';' . LayoutInside__Declaration__    (rule 100)

	data           shift, and enter state 155
	varid          shift, and enter state 17
	'('            shift, and enter state 58

	Declaration    goto state 147
	Data           goto state 148
	LowIdent       goto state 149
	Var            goto state 150
	GlobalBinding  goto state 151
	Decl           goto state 152
	Annotation     goto state 153
	LayoutInside__Declaration__goto state 178

State 164

	AppLeft -> letrec LowIdent Params '=' Exp in . Exp    (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 177
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 165

	Binding -> rec LowIdent Params '=' . Exp            (rule 53)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 176
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 166

	Binding -> rec Var '`' Var . '`' Params '=' Exp     (rule 55)

	'`'            shift, and enter state 175


State 167

	Binding -> rec Var Op Params . '=' Exp              (rule 54)

	'='            shift, and enter state 174


State 168

	Binding -> Var Op Params '=' . Exp                  (rule 51)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 173
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 169

	Binding -> Var '`' Var '`' . Params '=' Exp         (rule 52)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 172
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 170

	Binding -> LowIdent Params '=' Exp .                (rule 50)

	'}'            reduce using rule 50
	';'            reduce using rule 50


State 171

	AppLeft -> if Exp then Exp else Exp .               (rule 42)

	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	let            reduce using rule 42
	in             reduce using rule 42
	lambda         reduce using rule 42
	fix            reduce using rule 42
	letrec         reduce using rule 42
	'::'           reduce using rule 42
	varid          reduce using rule 42
	conid          reduce using rule 42
	op             reduce using rule 42
	opcon          reduce using rule 42
	symid          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'`'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	integer        reduce using rule 42
	char           reduce using rule 42
	double         reduce using rule 42
	string         reduce using rule 42
	%eof           reduce using rule 42


State 172

	Binding -> Var '`' Var '`' Params . '=' Exp         (rule 52)

	'='            shift, and enter state 193


State 173

	Binding -> Var Op Params '=' Exp .                  (rule 51)

	'}'            reduce using rule 51
	';'            reduce using rule 51


State 174

	Binding -> rec Var Op Params '=' . Exp              (rule 54)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 192
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 175

	Binding -> rec Var '`' Var '`' . Params '=' Exp     (rule 55)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 191
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 176

	Binding -> rec LowIdent Params '=' Exp .            (rule 53)

	'}'            reduce using rule 53
	';'            reduce using rule 53


State 177

	AppLeft -> letrec LowIdent Params '=' Exp in Exp .    (rule 44)

	if             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	let            reduce using rule 44
	in             reduce using rule 44
	lambda         reduce using rule 44
	fix            reduce using rule 44
	letrec         reduce using rule 44
	'::'           reduce using rule 44
	varid          reduce using rule 44
	conid          reduce using rule 44
	op             reduce using rule 44
	opcon          reduce using rule 44
	symid          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	'`'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	integer        reduce using rule 44
	char           reduce using rule 44
	double         reduce using rule 44
	string         reduce using rule 44
	%eof           reduce using rule 44


State 178

	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__ .    (rule 100)

	%eof           reduce using rule 100


State 179

	Annotation -> LowIdent '::' Type .                  (rule 67)
	TyArr -> Type . '->' Type                           (rule 71)

	'->'           shift, and enter state 50
	';'            reduce using rule 67


State 180

	GlobalBinding -> LowIdent Params '=' . Exp          (rule 56)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 190
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 181

	GlobalBinding -> Var '`' Var . '`' Params '=' Exp    (rule 58)

	'`'            shift, and enter state 189


State 182

	GlobalBinding -> Var Op Params . '=' Exp            (rule 57)

	'='            shift, and enter state 188


State 183

	GlobalBinding -> LowIdent . Params '=' Exp          (rule 56)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 160
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 184

	Decl -> Annotation ';' GlobalBinding .              (rule 60)

	'}'            reduce using rule 60
	';'            reduce using rule 60


State 185

	Data -> data UpIdent Params . Constructors          (rule 7)

	'='            shift, and enter state 187
	'}'            reduce using rule 8
	';'            reduce using rule 8

	Constructors   goto state 186

State 186

	Data -> data UpIdent Params Constructors .          (rule 7)

	'}'            reduce using rule 7
	';'            reduce using rule 7


State 187

	Constructors -> '=' . Constr NoneOrMany__ConstrOther__    (rule 9)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 198
	LowIdent       goto state 26
	UpIdent        goto state 199
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 200

State 188

	GlobalBinding -> Var Op Params '=' . Exp            (rule 57)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 197
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 189

	GlobalBinding -> Var '`' Var '`' . Params '=' Exp    (rule 58)

	'='            reduce using rule 90
	varid          shift, and enter state 17

	Params         goto state 196
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 190

	GlobalBinding -> LowIdent Params '=' Exp .          (rule 56)

	'}'            reduce using rule 56
	';'            reduce using rule 56


State 191

	Binding -> rec Var '`' Var '`' Params . '=' Exp     (rule 55)

	'='            shift, and enter state 195


State 192

	Binding -> rec Var Op Params '=' Exp .              (rule 54)

	'}'            reduce using rule 54
	';'            reduce using rule 54


State 193

	Binding -> Var '`' Var '`' Params '=' . Exp         (rule 52)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 194
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 194

	Binding -> Var '`' Var '`' Params '=' Exp .         (rule 52)

	'}'            reduce using rule 52
	';'            reduce using rule 52


State 195

	Binding -> rec Var '`' Var '`' Params '=' . Exp     (rule 55)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 211
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 196

	GlobalBinding -> Var '`' Var '`' Params . '=' Exp    (rule 58)

	'='            shift, and enter state 210


State 197

	GlobalBinding -> Var Op Params '=' Exp .            (rule 57)

	'}'            reduce using rule 57
	';'            reduce using rule 57


State 198

	Constructors -> '=' Constr . NoneOrMany__ConstrOther__    (rule 9)

	'|'            shift, and enter state 209
	'}'            reduce using rule 86
	';'            reduce using rule 86

	ConstrOther    goto state 207
	NoneOrMany__ConstrOther__goto state 208

State 199

	Constr -> UpIdent . NoneOrMany__TyAppLeft__         (rule 12)
	TyAppLeft -> UpIdent .                              (rule 75)

	'->'           reduce using rule 75
	'|'            reduce using rule 88
	varid          shift, and enter state 17
			(reduce using rule 75)

	conid          shift, and enter state 18
			(reduce using rule 75)

	opcon          reduce using rule 75
	'('            shift, and enter state 34
			(reduce using rule 75)

	'`'            reduce using rule 75
	'}'            reduce using rule 88
	';'            reduce using rule 88
	unit           shift, and enter state 35
			(reduce using rule 75)


	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 205
	NoneOrMany__TyAppLeft__goto state 206

State 200

	Constr -> TyAppLeft . ConName OneOrMany__TyAppLeft__    (rule 13)
	Type -> TyAppLeft .                                 (rule 68)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 73)

	'->'           reduce using rule 68
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	opcon          shift, and enter state 203
	'('            shift, and enter state 34
	'`'            shift, and enter state 204
	unit           shift, and enter state 35

	ConName        goto state 201
	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	OpCon          goto state 202
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 201

	Constr -> TyAppLeft ConName . OneOrMany__TyAppLeft__    (rule 13)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 217

State 202

	ConName -> OpCon .                                  (rule 10)

	varid          reduce using rule 10
	conid          reduce using rule 10
	'('            reduce using rule 10
	unit           reduce using rule 10


State 203

	OpCon -> opcon .                                    (rule 24)

	varid          reduce using rule 24
	conid          reduce using rule 24
	'('            reduce using rule 24
	unit           reduce using rule 24


State 204

	ConName -> '`' . Con '`'                            (rule 11)

	conid          shift, and enter state 18

	Con            goto state 216

State 205

	Type -> TyAppLeft .                                 (rule 68)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 73)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 89)

	'->'           reduce using rule 68
	'|'            reduce using rule 88
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	'}'            reduce using rule 88
	';'            reduce using rule 88
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 215
	OneOrMany__TyAppLeft__goto state 49

State 206

	Constr -> UpIdent NoneOrMany__TyAppLeft__ .         (rule 12)

	'|'            reduce using rule 12
	'}'            reduce using rule 12
	';'            reduce using rule 12


State 207

	NoneOrMany__ConstrOther__ -> ConstrOther . NoneOrMany__ConstrOther__    (rule 87)

	'|'            shift, and enter state 209
	'}'            reduce using rule 86
	';'            reduce using rule 86

	ConstrOther    goto state 207
	NoneOrMany__ConstrOther__goto state 214

State 208

	Constructors -> '=' Constr NoneOrMany__ConstrOther__ .    (rule 9)

	'}'            reduce using rule 9
	';'            reduce using rule 9


State 209

	ConstrOther -> '|' . Constr                         (rule 14)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 213
	LowIdent       goto state 26
	UpIdent        goto state 199
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 200

State 210

	GlobalBinding -> Var '`' Var '`' Params '=' . Exp    (rule 58)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 212
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 211

	Binding -> rec Var '`' Var '`' Params '=' Exp .     (rule 55)

	'}'            reduce using rule 55
	';'            reduce using rule 55


State 212

	GlobalBinding -> Var '`' Var '`' Params '=' Exp .    (rule 58)

	'}'            reduce using rule 58
	';'            reduce using rule 58


State 213

	ConstrOther -> '|' Constr .                         (rule 14)

	'|'            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14


State 214

	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__ .    (rule 87)

	'}'            reduce using rule 87
	';'            reduce using rule 87


State 215

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 89)

	'|'            reduce using rule 89
	'}'            reduce using rule 89
	';'            reduce using rule 89


State 216

	ConName -> '`' Con . '`'                            (rule 11)

	'`'            shift, and enter state 218


State 217

	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__ .    (rule 13)

	'|'            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13


State 218

	ConName -> '`' Con '`' .                            (rule 11)

	varid          reduce using rule 11
	conid          reduce using rule 11
	'('            reduce using rule 11
	unit           reduce using rule 11


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 103
Number of terminals: 44
Number of non-terminals: 47
Number of states: 219
