-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Compiler/Parser/Parser.y
-----------------------------------------------------------------------------

state 8 contains 17 shift/reduce conflicts.
state 33 contains 4 shift/reduce conflicts.
state 43 contains 1 shift/reduce conflicts.
state 44 contains 1 shift/reduce conflicts.
state 48 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 54 contains 1 shift/reduce conflicts.
state 55 contains 1 shift/reduce conflicts.
state 68 contains 14 shift/reduce conflicts.
state 77 contains 14 shift/reduce conflicts.
state 99 contains 1 shift/reduce conflicts.
state 100 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 114 contains 1 reduce/reduce conflicts.
state 209 contains 4 shift/reduce conflicts.

terminal match is unused
terminal with is unused
terminal '_' is unused
terminal the is unused
terminal claim is unused
terminal define is unused
terminal elim is unused
terminal assume is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserMain -> Program                       (0)
	%start_parserType -> Type                          (1)
	Program -> Exp                                     (2)
	Program -> Module                                  (3)
	Module -> module UpIdent where Layout__Declaration__   (4)
	Declaration -> Fun                                 (5)
	Declaration -> Data                                (6)
	Declaration -> TypeAlias                           (7)
	Declaration -> TypeOp                              (8)
	Data -> data UpIdent Params Constructors           (9)
	Constructors ->                                    (10)
	Constructors -> '=' Constr NoneOrMany__ConstrOther__   (11)
	ConName -> OpCon                                   (12)
	ConName -> '`' Con '`'                             (13)
	Constr -> UpIdent NoneOrMany__TyAppLeft__          (14)
	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__   (15)
	ConstrOther -> '|' Constr                          (16)
	TypeAlias -> type Con '=' Type                     (17)
	TypeOp -> type Con OneOrMany__Var__ '=' Type       (18)
	Params -> NoneOrMany__Var__                        (19)
	LowIdent -> Var                                    (20)
	LowIdent -> '(' Op ')'                             (21)
	UpIdent -> Con                                     (22)
	UpIdent -> '(' opcon ')'                           (23)
	UpIdent -> unit                                    (24)
	Var -> varid                                       (25)
	Con -> conid                                       (26)
	Op -> op                                           (27)
	OpCon -> opcon                                     (28)
	Oper -> op                                         (29)
	Oper -> opcon                                      (30)
	Exp -> AppLeft                                     (31)
	Exp -> Application                                 (32)
	Exp -> '(' Exp ')'                                 (33)
	Application -> AppLeft OneOrMany__AppRight__       (34)
	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__   (35)
	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__   (36)
	Application -> AppLeft Oper OneOrMany__AppRight__   (37)
	AppLeft -> LowIdent                                (38)
	AppLeft -> Con                                     (39)
	AppLeft -> '(' opcon ')'                           (40)
	AppLeft -> symid                                   (41)
	AppLeft -> Lit                                     (42)
	AppLeft -> lambda Params '->' Exp                  (43)
	AppLeft -> '(' AppLeft ')'                         (44)
	AppLeft -> fix Exp                                 (45)
	AppLeft -> if Exp then Exp else Exp                (46)
	AppLeft -> let Layout__Binding__ in Exp            (47)
	AppLeft -> letrec LowIdent Params '=' Exp in Exp   (48)
	AppLeft -> '(' Exp CommaSeparated__Exp__ ')'       (49)
	AppLeft -> '[' NoneOrManySeparated__Exp__ ']'      (50)
	AppLeft -> '(' Application ')'                     (51)
	AppLeft -> '(' Exp '::' Type ')'                   (52)
	AppRight -> AppLeft                                (53)
	Binding -> LowIdent Params '=' Exp                 (54)
	Binding -> Var Op Params '=' Exp                   (55)
	Binding -> Var '`' Var '`' Params '=' Exp          (56)
	Binding -> rec LowIdent Params '=' Exp             (57)
	Binding -> rec Var Op Params '=' Exp               (58)
	Binding -> rec Var '`' Var '`' Params '=' Exp      (59)
	GlobalBinding -> LowIdent Params '=' Exp           (60)
	GlobalBinding -> Var Op Params '=' Exp             (61)
	GlobalBinding -> Var '`' Var '`' Params '=' Exp    (62)
	Fun -> GlobalBinding                               (63)
	Fun -> Annotation ';' GlobalBinding                (64)
	Lit -> Integer                                     (65)
	Lit -> Double                                      (66)
	Lit -> char                                        (67)
	Lit -> string                                      (68)
	Integer -> integer                                 (69)
	Double -> double                                   (70)
	Annotation -> LowIdent '::' Type                   (71)
	Type -> TyAppLeft                                  (72)
	Type -> TyApp                                      (73)
	Type -> '(' Type ')'                               (74)
	TyArr -> Type '->' Type                            (75)
	TyTuple -> '(' Type CommaSeparated__Type__ ')'     (76)
	TyApp -> TyAppLeft OneOrMany__TyAppLeft__          (77)
	TyAppLeft -> LowIdent                              (78)
	TyAppLeft -> UpIdent                               (79)
	TyAppLeft -> TyArr                                 (80)
	TyAppLeft -> TyTuple                               (81)
	TyAppLeft -> '(' TyApp ')'                         (82)
	TyAppLeft -> '(' TyAppLeft ')'                     (83)
	CommaSeparated__Exp__ -> ',' Exp                   (84)
	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__   (85)
	CommaSeparated__Type__ -> ',' Type                 (86)
	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__   (87)
	Layout__Binding__ -> '{' LayoutInside__Binding__   (88)
	Layout__Declaration__ -> '{' LayoutInside__Declaration__   (89)
	NoneOrMany__ConstrOther__ ->                       (90)
	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__   (91)
	NoneOrMany__TyAppLeft__ ->                         (92)
	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (93)
	NoneOrMany__Var__ ->                               (94)
	NoneOrMany__Var__ -> Var NoneOrMany__Var__         (95)
	NoneOrManySeparated__Exp__ ->                      (96)
	NoneOrManySeparated__Exp__ -> Exp                  (97)
	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__   (98)
	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (99)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (100)
	OneOrMany__Var__ -> Var NoneOrMany__Var__          (101)
	LayoutInside__Binding__ -> Binding '}'             (102)
	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__   (103)
	LayoutInside__Declaration__ -> Declaration '}'     (104)
	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__   (105)
	NoneOrMany__AppRight__ ->                          (106)
	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (107)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	match          { TokMatch }
	with           { TokWith }
	data           { TokData }
	if             { TokIf }
	then           { TokThen }
	else           { TokElse }
	let            { TokLet }
	in             { TokIn }
	type           { TokType }
	'_'            { TokHole }
	the            { TokThe }
	claim          { TokClaim }
	define         { TokDefine }
	lambda         { TokLambda }
	fix            { TokFix }
	letrec         { TokLetrec }
	'->'           { TokOperator "->" }
	'='            { TokOperator "=" }
	'|'            { TokOperator "|" }
	'::'           { TokHasType }
	varid          { TokVarLower $$ }
	conid          { TokVarUpper $$ }
	op             { TokOperator $$ }
	opcon          { TokOpConstr $$ }
	symid          { TokNativeSym $$ }
	elim           { TokEliminator $$ }
	'('            { TokLeftParen }
	')'            { TokRightParen }
	'['            { TokLeftBracket }
	']'            { TokRightBracket }
	','            { TokComma }
	'`'            { TokBackTick }
	'{'            { TokLeftBrace }
	'}'            { TokRightBrace }
	';'            { TokSemicolon }
	unit           { TokVarUpper "()" }
	integer        { TokInt $$ }
	char           { TokChar $$ }
	double         { TokDouble $$ }
	string         { TokString $$ }
	assume         { TokAssume }
	rec            { TokRec }
	module         { TokModule }
	where          { TokWhere }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserMain rule  0
	%start_parserType rule  1
	Program         rules 2, 3
	Module          rule  4
	Declaration     rules 5, 6, 7, 8
	Data            rule  9
	Constructors    rules 10, 11
	ConName         rules 12, 13
	Constr          rules 14, 15
	ConstrOther     rule  16
	TypeAlias       rule  17
	TypeOp          rule  18
	Params          rule  19
	LowIdent        rules 20, 21
	UpIdent         rules 22, 23, 24
	Var             rule  25
	Con             rule  26
	Op              rule  27
	OpCon           rule  28
	Oper            rules 29, 30
	Exp             rules 31, 32, 33
	Application     rules 34, 35, 36, 37
	AppLeft         rules 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
	AppRight        rule  53
	Binding         rules 54, 55, 56, 57, 58, 59
	GlobalBinding   rules 60, 61, 62
	Fun             rules 63, 64
	Lit             rules 65, 66, 67, 68
	Integer         rule  69
	Double          rule  70
	Annotation      rule  71
	Type            rules 72, 73, 74
	TyArr           rule  75
	TyTuple         rule  76
	TyApp           rule  77
	TyAppLeft       rules 78, 79, 80, 81, 82, 83
	CommaSeparated__Exp__ rules 84, 85
	CommaSeparated__Type__ rules 86, 87
	Layout__Binding__ rule  88
	Layout__Declaration__ rule  89
	NoneOrMany__ConstrOther__ rules 90, 91
	NoneOrMany__TyAppLeft__ rules 92, 93
	NoneOrMany__Var__ rules 94, 95
	NoneOrManySeparated__Exp__ rules 96, 97, 98
	OneOrMany__AppRight__ rule  99
	OneOrMany__TyAppLeft__ rule  100
	OneOrMany__Var__ rule  101
	LayoutInside__Binding__ rules 102, 103
	LayoutInside__Declaration__ rules 104, 105
	NoneOrMany__AppRight__ rules 106, 107

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parserMain -> . Program                      (rule 0)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25
	module         shift, and enter state 38

	Program        goto state 36
	Module         goto state 37
	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 1

	%start_parserType -> . Type                         (rule 1)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 29
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 2

	Program -> . Exp                                    (rule 2)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 3

	AppLeft -> LowIdent .                               (rule 38)

	if             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	let            reduce using rule 38
	in             reduce using rule 38
	lambda         reduce using rule 38
	fix            reduce using rule 38
	letrec         reduce using rule 38
	'::'           reduce using rule 38
	varid          reduce using rule 38
	conid          reduce using rule 38
	op             reduce using rule 38
	opcon          reduce using rule 38
	symid          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	'`'            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38
	integer        reduce using rule 38
	char           reduce using rule 38
	double         reduce using rule 38
	string         reduce using rule 38
	%eof           reduce using rule 38


State 4

	LowIdent -> Var .                                   (rule 20)

	if             reduce using rule 20
	then           reduce using rule 20
	else           reduce using rule 20
	let            reduce using rule 20
	in             reduce using rule 20
	lambda         reduce using rule 20
	fix            reduce using rule 20
	letrec         reduce using rule 20
	'->'           reduce using rule 20
	'='            reduce using rule 20
	'|'            reduce using rule 20
	'::'           reduce using rule 20
	varid          reduce using rule 20
	conid          reduce using rule 20
	op             reduce using rule 20
	opcon          reduce using rule 20
	symid          reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	','            reduce using rule 20
	'`'            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20
	unit           reduce using rule 20
	integer        reduce using rule 20
	char           reduce using rule 20
	double         reduce using rule 20
	string         reduce using rule 20
	%eof           reduce using rule 20


State 5

	AppLeft -> Con .                                    (rule 39)

	if             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	let            reduce using rule 39
	in             reduce using rule 39
	lambda         reduce using rule 39
	fix            reduce using rule 39
	letrec         reduce using rule 39
	'::'           reduce using rule 39
	varid          reduce using rule 39
	conid          reduce using rule 39
	op             reduce using rule 39
	opcon          reduce using rule 39
	symid          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	'`'            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39
	integer        reduce using rule 39
	char           reduce using rule 39
	double         reduce using rule 39
	string         reduce using rule 39
	%eof           reduce using rule 39


State 6

	Program -> Exp .                                    (rule 2)

	%eof           reduce using rule 2


State 7

	Exp -> Application .                                (rule 32)

	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	let            reduce using rule 32
	in             reduce using rule 32
	lambda         reduce using rule 32
	fix            reduce using rule 32
	letrec         reduce using rule 32
	'::'           reduce using rule 32
	varid          reduce using rule 32
	conid          reduce using rule 32
	op             reduce using rule 32
	opcon          reduce using rule 32
	symid          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	','            reduce using rule 32
	'`'            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	integer        reduce using rule 32
	char           reduce using rule 32
	double         reduce using rule 32
	string         reduce using rule 32
	%eof           reduce using rule 32


State 8

	Exp -> AppLeft .                                    (rule 31)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 34)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 35)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 36)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 37)

	if             shift, and enter state 12
			(reduce using rule 31)

	then           reduce using rule 31
	else           reduce using rule 31
	let            shift, and enter state 13
			(reduce using rule 31)

	in             reduce using rule 31
	lambda         shift, and enter state 14
			(reduce using rule 31)

	fix            shift, and enter state 15
			(reduce using rule 31)

	letrec         shift, and enter state 16
			(reduce using rule 31)

	'::'           reduce using rule 31
	varid          shift, and enter state 17
			(reduce using rule 31)

	conid          shift, and enter state 18
			(reduce using rule 31)

	op             shift, and enter state 70
			(reduce using rule 31)

	opcon          shift, and enter state 71
			(reduce using rule 31)

	symid          shift, and enter state 19
			(reduce using rule 31)

	'('            shift, and enter state 72
			(reduce using rule 31)

	')'            reduce using rule 31
	'['            shift, and enter state 21
			(reduce using rule 31)

	']'            reduce using rule 31
	','            reduce using rule 31
	'`'            shift, and enter state 73
			(reduce using rule 31)

	'}'            reduce using rule 31
	';'            reduce using rule 31
	integer        shift, and enter state 22
			(reduce using rule 31)

	char           shift, and enter state 23
			(reduce using rule 31)

	double         shift, and enter state 24
			(reduce using rule 31)

	string         shift, and enter state 25
			(reduce using rule 31)

	%eof           reduce using rule 31

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 66
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 69

State 9

	AppLeft -> Lit .                                    (rule 42)

	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	let            reduce using rule 42
	in             reduce using rule 42
	lambda         reduce using rule 42
	fix            reduce using rule 42
	letrec         reduce using rule 42
	'::'           reduce using rule 42
	varid          reduce using rule 42
	conid          reduce using rule 42
	op             reduce using rule 42
	opcon          reduce using rule 42
	symid          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'`'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	integer        reduce using rule 42
	char           reduce using rule 42
	double         reduce using rule 42
	string         reduce using rule 42
	%eof           reduce using rule 42


State 10

	Lit -> Integer .                                    (rule 65)

	if             reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	let            reduce using rule 65
	in             reduce using rule 65
	lambda         reduce using rule 65
	fix            reduce using rule 65
	letrec         reduce using rule 65
	'::'           reduce using rule 65
	varid          reduce using rule 65
	conid          reduce using rule 65
	op             reduce using rule 65
	opcon          reduce using rule 65
	symid          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	','            reduce using rule 65
	'`'            reduce using rule 65
	'}'            reduce using rule 65
	';'            reduce using rule 65
	integer        reduce using rule 65
	char           reduce using rule 65
	double         reduce using rule 65
	string         reduce using rule 65
	%eof           reduce using rule 65


State 11

	Lit -> Double .                                     (rule 66)

	if             reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	let            reduce using rule 66
	in             reduce using rule 66
	lambda         reduce using rule 66
	fix            reduce using rule 66
	letrec         reduce using rule 66
	'::'           reduce using rule 66
	varid          reduce using rule 66
	conid          reduce using rule 66
	op             reduce using rule 66
	opcon          reduce using rule 66
	symid          reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	','            reduce using rule 66
	'`'            reduce using rule 66
	'}'            reduce using rule 66
	';'            reduce using rule 66
	integer        reduce using rule 66
	char           reduce using rule 66
	double         reduce using rule 66
	string         reduce using rule 66
	%eof           reduce using rule 66


State 12

	AppLeft -> if . Exp then Exp else Exp               (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 65
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 13

	AppLeft -> let . Layout__Binding__ in Exp           (rule 47)

	'{'            shift, and enter state 64

	Layout__Binding__goto state 63

State 14

	AppLeft -> lambda . Params '->' Exp                 (rule 43)

	'->'           reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 60
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 15

	AppLeft -> fix . Exp                                (rule 45)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 59
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 16

	AppLeft -> letrec . LowIdent Params '=' Exp in Exp    (rule 48)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 57
	Var            goto state 4

State 17

	Var -> varid .                                      (rule 25)

	if             reduce using rule 25
	then           reduce using rule 25
	else           reduce using rule 25
	let            reduce using rule 25
	in             reduce using rule 25
	lambda         reduce using rule 25
	fix            reduce using rule 25
	letrec         reduce using rule 25
	'->'           reduce using rule 25
	'='            reduce using rule 25
	'|'            reduce using rule 25
	'::'           reduce using rule 25
	varid          reduce using rule 25
	conid          reduce using rule 25
	op             reduce using rule 25
	opcon          reduce using rule 25
	symid          reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'['            reduce using rule 25
	']'            reduce using rule 25
	','            reduce using rule 25
	'`'            reduce using rule 25
	'}'            reduce using rule 25
	';'            reduce using rule 25
	unit           reduce using rule 25
	integer        reduce using rule 25
	char           reduce using rule 25
	double         reduce using rule 25
	string         reduce using rule 25
	%eof           reduce using rule 25


State 18

	Con -> conid .                                      (rule 26)

	if             reduce using rule 26
	then           reduce using rule 26
	else           reduce using rule 26
	let            reduce using rule 26
	in             reduce using rule 26
	lambda         reduce using rule 26
	fix            reduce using rule 26
	letrec         reduce using rule 26
	'->'           reduce using rule 26
	'='            reduce using rule 26
	'|'            reduce using rule 26
	'::'           reduce using rule 26
	varid          reduce using rule 26
	conid          reduce using rule 26
	op             reduce using rule 26
	opcon          reduce using rule 26
	symid          reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'['            reduce using rule 26
	']'            reduce using rule 26
	','            reduce using rule 26
	'`'            reduce using rule 26
	'}'            reduce using rule 26
	';'            reduce using rule 26
	unit           reduce using rule 26
	integer        reduce using rule 26
	char           reduce using rule 26
	double         reduce using rule 26
	string         reduce using rule 26
	where          reduce using rule 26
	%eof           reduce using rule 26


State 19

	AppLeft -> symid .                                  (rule 41)

	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	let            reduce using rule 41
	in             reduce using rule 41
	lambda         reduce using rule 41
	fix            reduce using rule 41
	letrec         reduce using rule 41
	'::'           reduce using rule 41
	varid          reduce using rule 41
	conid          reduce using rule 41
	op             reduce using rule 41
	opcon          reduce using rule 41
	symid          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	'`'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	integer        reduce using rule 41
	char           reduce using rule 41
	double         reduce using rule 41
	string         reduce using rule 41
	%eof           reduce using rule 41


State 20

	LowIdent -> '(' . Op ')'                            (rule 21)
	Exp -> '(' . Exp ')'                                (rule 33)
	AppLeft -> '(' . opcon ')'                          (rule 40)
	AppLeft -> '(' . AppLeft ')'                        (rule 44)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 49)
	AppLeft -> '(' . Application ')'                    (rule 51)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 52)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 56
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 41
	Exp            goto state 53
	Application    goto state 54
	AppLeft        goto state 55
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 21

	AppLeft -> '[' . NoneOrManySeparated__Exp__ ']'     (rule 50)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 96
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 51
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 52

State 22

	Integer -> integer .                                (rule 69)

	if             reduce using rule 69
	then           reduce using rule 69
	else           reduce using rule 69
	let            reduce using rule 69
	in             reduce using rule 69
	lambda         reduce using rule 69
	fix            reduce using rule 69
	letrec         reduce using rule 69
	'::'           reduce using rule 69
	varid          reduce using rule 69
	conid          reduce using rule 69
	op             reduce using rule 69
	opcon          reduce using rule 69
	symid          reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'['            reduce using rule 69
	']'            reduce using rule 69
	','            reduce using rule 69
	'`'            reduce using rule 69
	'}'            reduce using rule 69
	';'            reduce using rule 69
	integer        reduce using rule 69
	char           reduce using rule 69
	double         reduce using rule 69
	string         reduce using rule 69
	%eof           reduce using rule 69


State 23

	Lit -> char .                                       (rule 67)

	if             reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	let            reduce using rule 67
	in             reduce using rule 67
	lambda         reduce using rule 67
	fix            reduce using rule 67
	letrec         reduce using rule 67
	'::'           reduce using rule 67
	varid          reduce using rule 67
	conid          reduce using rule 67
	op             reduce using rule 67
	opcon          reduce using rule 67
	symid          reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	','            reduce using rule 67
	'`'            reduce using rule 67
	'}'            reduce using rule 67
	';'            reduce using rule 67
	integer        reduce using rule 67
	char           reduce using rule 67
	double         reduce using rule 67
	string         reduce using rule 67
	%eof           reduce using rule 67


State 24

	Double -> double .                                  (rule 70)

	if             reduce using rule 70
	then           reduce using rule 70
	else           reduce using rule 70
	let            reduce using rule 70
	in             reduce using rule 70
	lambda         reduce using rule 70
	fix            reduce using rule 70
	letrec         reduce using rule 70
	'::'           reduce using rule 70
	varid          reduce using rule 70
	conid          reduce using rule 70
	op             reduce using rule 70
	opcon          reduce using rule 70
	symid          reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'['            reduce using rule 70
	']'            reduce using rule 70
	','            reduce using rule 70
	'`'            reduce using rule 70
	'}'            reduce using rule 70
	';'            reduce using rule 70
	integer        reduce using rule 70
	char           reduce using rule 70
	double         reduce using rule 70
	string         reduce using rule 70
	%eof           reduce using rule 70


State 25

	Lit -> string .                                     (rule 68)

	if             reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	let            reduce using rule 68
	in             reduce using rule 68
	lambda         reduce using rule 68
	fix            reduce using rule 68
	letrec         reduce using rule 68
	'::'           reduce using rule 68
	varid          reduce using rule 68
	conid          reduce using rule 68
	op             reduce using rule 68
	opcon          reduce using rule 68
	symid          reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	','            reduce using rule 68
	'`'            reduce using rule 68
	'}'            reduce using rule 68
	';'            reduce using rule 68
	integer        reduce using rule 68
	char           reduce using rule 68
	double         reduce using rule 68
	string         reduce using rule 68
	%eof           reduce using rule 68


State 26

	TyAppLeft -> LowIdent .                             (rule 78)

	'->'           reduce using rule 78
	'|'            reduce using rule 78
	varid          reduce using rule 78
	conid          reduce using rule 78
	opcon          reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	','            reduce using rule 78
	'`'            reduce using rule 78
	'}'            reduce using rule 78
	';'            reduce using rule 78
	unit           reduce using rule 78
	%eof           reduce using rule 78


State 27

	TyAppLeft -> UpIdent .                              (rule 79)

	'->'           reduce using rule 79
	'|'            reduce using rule 79
	varid          reduce using rule 79
	conid          reduce using rule 79
	opcon          reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	'`'            reduce using rule 79
	'}'            reduce using rule 79
	';'            reduce using rule 79
	unit           reduce using rule 79
	%eof           reduce using rule 79


State 28

	UpIdent -> Con .                                    (rule 22)

	'->'           reduce using rule 22
	'='            reduce using rule 22
	'|'            reduce using rule 22
	varid          reduce using rule 22
	conid          reduce using rule 22
	opcon          reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22
	'`'            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22
	unit           reduce using rule 22
	where          reduce using rule 22
	%eof           reduce using rule 22


State 29

	%start_parserType -> Type .                         (rule 1)
	TyArr -> Type . '->' Type                           (rule 75)

	'->'           shift, and enter state 50
	%eof           accept


State 30

	TyAppLeft -> TyArr .                                (rule 80)

	'->'           reduce using rule 80
	'|'            reduce using rule 80
	varid          reduce using rule 80
	conid          reduce using rule 80
	opcon          reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	','            reduce using rule 80
	'`'            reduce using rule 80
	'}'            reduce using rule 80
	';'            reduce using rule 80
	unit           reduce using rule 80
	%eof           reduce using rule 80


State 31

	TyAppLeft -> TyTuple .                              (rule 81)

	'->'           reduce using rule 81
	'|'            reduce using rule 81
	varid          reduce using rule 81
	conid          reduce using rule 81
	opcon          reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	','            reduce using rule 81
	'`'            reduce using rule 81
	'}'            reduce using rule 81
	';'            reduce using rule 81
	unit           reduce using rule 81
	%eof           reduce using rule 81


State 32

	Type -> TyApp .                                     (rule 73)

	'->'           reduce using rule 73
	'|'            reduce using rule 73
	varid          reduce using rule 73
	conid          reduce using rule 73
	opcon          reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	'`'            reduce using rule 73
	'}'            reduce using rule 73
	';'            reduce using rule 73
	unit           reduce using rule 73
	%eof           reduce using rule 73


State 33

	Type -> TyAppLeft .                                 (rule 72)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 77)

	'->'           reduce using rule 72
	'|'            reduce using rule 72
	varid          shift, and enter state 17
			(reduce using rule 72)

	conid          shift, and enter state 18
			(reduce using rule 72)

	opcon          reduce using rule 72
	'('            shift, and enter state 34
			(reduce using rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	'`'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72
	unit           shift, and enter state 35
			(reduce using rule 72)

	%eof           reduce using rule 72

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 34

	LowIdent -> '(' . Op ')'                            (rule 21)
	UpIdent -> '(' . opcon ')'                          (rule 23)
	Type -> '(' . Type ')'                              (rule 74)
	TyTuple -> '(' . Type CommaSeparated__Type__ ')'    (rule 76)
	TyAppLeft -> '(' . TyApp ')'                        (rule 82)
	TyAppLeft -> '(' . TyAppLeft ')'                    (rule 83)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 46
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Op             goto state 41
	Type           goto state 42
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 43
	TyAppLeft      goto state 44

State 35

	UpIdent -> unit .                                   (rule 24)

	'->'           reduce using rule 24
	'='            reduce using rule 24
	'|'            reduce using rule 24
	varid          reduce using rule 24
	conid          reduce using rule 24
	opcon          reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	','            reduce using rule 24
	'`'            reduce using rule 24
	'}'            reduce using rule 24
	';'            reduce using rule 24
	unit           reduce using rule 24
	where          reduce using rule 24
	%eof           reduce using rule 24


State 36

	%start_parserMain -> Program .                      (rule 0)

	%eof           accept


State 37

	Program -> Module .                                 (rule 3)

	%eof           reduce using rule 3


State 38

	Module -> module . UpIdent where Layout__Declaration__    (rule 4)

	conid          shift, and enter state 18
	'('            shift, and enter state 40
	unit           shift, and enter state 35

	UpIdent        goto state 39
	Con            goto state 28

State 39

	Module -> module UpIdent . where Layout__Declaration__    (rule 4)

	where          shift, and enter state 109


State 40

	UpIdent -> '(' . opcon ')'                          (rule 23)

	opcon          shift, and enter state 46


State 41

	LowIdent -> '(' Op . ')'                            (rule 21)

	')'            shift, and enter state 108


State 42

	Type -> '(' Type . ')'                              (rule 74)
	TyArr -> Type . '->' Type                           (rule 75)
	TyTuple -> '(' Type . CommaSeparated__Type__ ')'    (rule 76)

	'->'           shift, and enter state 50
	')'            shift, and enter state 106
	','            shift, and enter state 107

	CommaSeparated__Type__goto state 105

State 43

	Type -> TyApp .                                     (rule 73)
	TyAppLeft -> '(' TyApp . ')'                        (rule 82)

	'->'           reduce using rule 73
	')'            shift, and enter state 104
			(reduce using rule 73)

	','            reduce using rule 73


State 44

	Type -> TyAppLeft .                                 (rule 72)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 77)
	TyAppLeft -> '(' TyAppLeft . ')'                    (rule 83)

	'->'           reduce using rule 72
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	')'            shift, and enter state 103
			(reduce using rule 72)

	','            reduce using rule 72
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 45

	Op -> op .                                          (rule 27)

	'='            reduce using rule 27
	varid          reduce using rule 27
	')'            reduce using rule 27


State 46

	UpIdent -> '(' opcon . ')'                          (rule 23)

	')'            shift, and enter state 102


State 47

	TyArr -> Type . '->' Type                           (rule 75)

	'->'           shift, and enter state 50


State 48

	Type -> TyAppLeft .                                 (rule 72)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 77)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 100)

	'->'           reduce using rule 92
			(reduce using rule 72)

	'|'            reduce using rule 92
	varid          shift, and enter state 17
			(reduce using rule 92)

	conid          shift, and enter state 18
			(reduce using rule 92)

	opcon          reduce using rule 92
	'('            shift, and enter state 34
			(reduce using rule 92)

	')'            reduce using rule 92
	','            reduce using rule 92
	'`'            reduce using rule 92
	'}'            reduce using rule 92
	';'            reduce using rule 92
	unit           shift, and enter state 35
			(reduce using rule 92)

	%eof           reduce using rule 92

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 101
	OneOrMany__TyAppLeft__goto state 49

State 49

	TyApp -> TyAppLeft OneOrMany__TyAppLeft__ .         (rule 77)

	'->'           reduce using rule 77
	'|'            reduce using rule 77
	varid          reduce using rule 77
	conid          reduce using rule 77
	opcon          reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	','            reduce using rule 77
	'`'            reduce using rule 77
	'}'            reduce using rule 77
	';'            reduce using rule 77
	unit           reduce using rule 77
	%eof           reduce using rule 77


State 50

	TyArr -> Type '->' . Type                           (rule 75)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 99
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 51

	NoneOrManySeparated__Exp__ -> Exp .                 (rule 97)
	NoneOrManySeparated__Exp__ -> Exp . ',' NoneOrManySeparated__Exp__    (rule 98)

	']'            reduce using rule 97
	','            shift, and enter state 98


State 52

	AppLeft -> '[' NoneOrManySeparated__Exp__ . ']'     (rule 50)

	']'            shift, and enter state 97


State 53

	Exp -> '(' Exp . ')'                                (rule 33)
	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 49)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 52)

	'::'           shift, and enter state 94
	')'            shift, and enter state 95
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 93

State 54

	Exp -> Application .                                (rule 32)
	AppLeft -> '(' Application . ')'                    (rule 51)

	'::'           reduce using rule 32
	')'            shift, and enter state 92
			(reduce using rule 32)

	','            reduce using rule 32


State 55

	Exp -> AppLeft .                                    (rule 31)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 34)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 35)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 36)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 37)
	AppLeft -> '(' AppLeft . ')'                        (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	'::'           reduce using rule 31
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 70
	opcon          shift, and enter state 71
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	')'            shift, and enter state 91
			(reduce using rule 31)

	'['            shift, and enter state 21
	','            reduce using rule 31
	'`'            shift, and enter state 73
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 66
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 69

State 56

	AppLeft -> '(' opcon . ')'                          (rule 40)

	')'            shift, and enter state 90


State 57

	AppLeft -> letrec LowIdent . Params '=' Exp in Exp    (rule 48)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 89
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 58

	LowIdent -> '(' . Op ')'                            (rule 21)

	op             shift, and enter state 45

	Op             goto state 41

State 59

	AppLeft -> fix Exp .                                (rule 45)

	if             reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	let            reduce using rule 45
	in             reduce using rule 45
	lambda         reduce using rule 45
	fix            reduce using rule 45
	letrec         reduce using rule 45
	'::'           reduce using rule 45
	varid          reduce using rule 45
	conid          reduce using rule 45
	op             reduce using rule 45
	opcon          reduce using rule 45
	symid          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'`'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	integer        reduce using rule 45
	char           reduce using rule 45
	double         reduce using rule 45
	string         reduce using rule 45
	%eof           reduce using rule 45


State 60

	AppLeft -> lambda Params . '->' Exp                 (rule 43)

	'->'           shift, and enter state 88


State 61

	NoneOrMany__Var__ -> Var . NoneOrMany__Var__        (rule 95)

	'->'           reduce using rule 94
	'='            reduce using rule 94
	varid          shift, and enter state 17
	'}'            reduce using rule 94
	';'            reduce using rule 94

	Var            goto state 61
	NoneOrMany__Var__goto state 87

State 62

	Params -> NoneOrMany__Var__ .                       (rule 19)

	'->'           reduce using rule 19
	'='            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19


State 63

	AppLeft -> let Layout__Binding__ . in Exp           (rule 47)

	in             shift, and enter state 86


State 64

	Layout__Binding__ -> '{' . LayoutInside__Binding__    (rule 88)

	varid          shift, and enter state 17
	'('            shift, and enter state 58
	rec            shift, and enter state 85

	LowIdent       goto state 81
	Var            goto state 82
	Binding        goto state 83
	LayoutInside__Binding__goto state 84

State 65

	AppLeft -> if Exp . then Exp else Exp               (rule 46)

	then           shift, and enter state 80


State 66

	Application -> AppLeft Oper . OneOrMany__AppRight__    (rule 37)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 79

State 67

	AppRight -> AppLeft .                               (rule 53)

	if             reduce using rule 53
	then           reduce using rule 53
	else           reduce using rule 53
	let            reduce using rule 53
	in             reduce using rule 53
	lambda         reduce using rule 53
	fix            reduce using rule 53
	letrec         reduce using rule 53
	'::'           reduce using rule 53
	varid          reduce using rule 53
	conid          reduce using rule 53
	op             reduce using rule 53
	opcon          reduce using rule 53
	symid          reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	','            reduce using rule 53
	'`'            reduce using rule 53
	'}'            reduce using rule 53
	';'            reduce using rule 53
	integer        reduce using rule 53
	char           reduce using rule 53
	double         reduce using rule 53
	string         reduce using rule 53
	%eof           reduce using rule 53


State 68

	OneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 99)

	if             shift, and enter state 12
			(reduce using rule 106)

	then           reduce using rule 106
	else           reduce using rule 106
	let            shift, and enter state 13
			(reduce using rule 106)

	in             reduce using rule 106
	lambda         shift, and enter state 14
			(reduce using rule 106)

	fix            shift, and enter state 15
			(reduce using rule 106)

	letrec         shift, and enter state 16
			(reduce using rule 106)

	'::'           reduce using rule 106
	varid          shift, and enter state 17
			(reduce using rule 106)

	conid          shift, and enter state 18
			(reduce using rule 106)

	op             reduce using rule 106
	opcon          reduce using rule 106
	symid          shift, and enter state 19
			(reduce using rule 106)

	'('            shift, and enter state 72
			(reduce using rule 106)

	')'            reduce using rule 106
	'['            shift, and enter state 21
			(reduce using rule 106)

	']'            reduce using rule 106
	','            reduce using rule 106
	'`'            reduce using rule 106
	'}'            reduce using rule 106
	';'            reduce using rule 106
	integer        shift, and enter state 22
			(reduce using rule 106)

	char           shift, and enter state 23
			(reduce using rule 106)

	double         shift, and enter state 24
			(reduce using rule 106)

	string         shift, and enter state 25
			(reduce using rule 106)

	%eof           reduce using rule 106

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 77
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 78

State 69

	Application -> AppLeft OneOrMany__AppRight__ .      (rule 34)

	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	let            reduce using rule 34
	in             reduce using rule 34
	lambda         reduce using rule 34
	fix            reduce using rule 34
	letrec         reduce using rule 34
	'::'           reduce using rule 34
	varid          reduce using rule 34
	conid          reduce using rule 34
	op             reduce using rule 34
	opcon          reduce using rule 34
	symid          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	'`'            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	integer        reduce using rule 34
	char           reduce using rule 34
	double         reduce using rule 34
	string         reduce using rule 34
	%eof           reduce using rule 34


State 70

	Oper -> op .                                        (rule 29)

	if             reduce using rule 29
	let            reduce using rule 29
	lambda         reduce using rule 29
	fix            reduce using rule 29
	letrec         reduce using rule 29
	varid          reduce using rule 29
	conid          reduce using rule 29
	symid          reduce using rule 29
	'('            reduce using rule 29
	'['            reduce using rule 29
	integer        reduce using rule 29
	char           reduce using rule 29
	double         reduce using rule 29
	string         reduce using rule 29


State 71

	Oper -> opcon .                                     (rule 30)

	if             reduce using rule 30
	let            reduce using rule 30
	lambda         reduce using rule 30
	fix            reduce using rule 30
	letrec         reduce using rule 30
	varid          reduce using rule 30
	conid          reduce using rule 30
	symid          reduce using rule 30
	'('            reduce using rule 30
	'['            reduce using rule 30
	integer        reduce using rule 30
	char           reduce using rule 30
	double         reduce using rule 30
	string         reduce using rule 30


State 72

	LowIdent -> '(' . Op ')'                            (rule 21)
	AppLeft -> '(' . opcon ')'                          (rule 40)
	AppLeft -> '(' . AppLeft ')'                        (rule 44)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 49)
	AppLeft -> '(' . Application ')'                    (rule 51)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 52)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 56
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 41
	Exp            goto state 76
	Application    goto state 54
	AppLeft        goto state 55
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 73

	Application -> AppLeft '`' . Var '`' OneOrMany__AppRight__    (rule 35)
	Application -> AppLeft '`' . Con '`' OneOrMany__AppRight__    (rule 36)

	varid          shift, and enter state 17
	conid          shift, and enter state 18

	Var            goto state 74
	Con            goto state 75

State 74

	Application -> AppLeft '`' Var . '`' OneOrMany__AppRight__    (rule 35)

	'`'            shift, and enter state 132


State 75

	Application -> AppLeft '`' Con . '`' OneOrMany__AppRight__    (rule 36)

	'`'            shift, and enter state 131


State 76

	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 49)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 52)

	'::'           shift, and enter state 94
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 93

State 77

	NoneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 107)

	if             shift, and enter state 12
			(reduce using rule 106)

	then           reduce using rule 106
	else           reduce using rule 106
	let            shift, and enter state 13
			(reduce using rule 106)

	in             reduce using rule 106
	lambda         shift, and enter state 14
			(reduce using rule 106)

	fix            shift, and enter state 15
			(reduce using rule 106)

	letrec         shift, and enter state 16
			(reduce using rule 106)

	'::'           reduce using rule 106
	varid          shift, and enter state 17
			(reduce using rule 106)

	conid          shift, and enter state 18
			(reduce using rule 106)

	op             reduce using rule 106
	opcon          reduce using rule 106
	symid          shift, and enter state 19
			(reduce using rule 106)

	'('            shift, and enter state 72
			(reduce using rule 106)

	')'            reduce using rule 106
	'['            shift, and enter state 21
			(reduce using rule 106)

	']'            reduce using rule 106
	','            reduce using rule 106
	'`'            reduce using rule 106
	'}'            reduce using rule 106
	';'            reduce using rule 106
	integer        shift, and enter state 22
			(reduce using rule 106)

	char           shift, and enter state 23
			(reduce using rule 106)

	double         shift, and enter state 24
			(reduce using rule 106)

	string         shift, and enter state 25
			(reduce using rule 106)

	%eof           reduce using rule 106

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 77
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 130

State 78

	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 99)

	if             reduce using rule 99
	then           reduce using rule 99
	else           reduce using rule 99
	let            reduce using rule 99
	in             reduce using rule 99
	lambda         reduce using rule 99
	fix            reduce using rule 99
	letrec         reduce using rule 99
	'::'           reduce using rule 99
	varid          reduce using rule 99
	conid          reduce using rule 99
	op             reduce using rule 99
	opcon          reduce using rule 99
	symid          reduce using rule 99
	'('            reduce using rule 99
	')'            reduce using rule 99
	'['            reduce using rule 99
	']'            reduce using rule 99
	','            reduce using rule 99
	'`'            reduce using rule 99
	'}'            reduce using rule 99
	';'            reduce using rule 99
	integer        reduce using rule 99
	char           reduce using rule 99
	double         reduce using rule 99
	string         reduce using rule 99
	%eof           reduce using rule 99


State 79

	Application -> AppLeft Oper OneOrMany__AppRight__ .    (rule 37)

	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	let            reduce using rule 37
	in             reduce using rule 37
	lambda         reduce using rule 37
	fix            reduce using rule 37
	letrec         reduce using rule 37
	'::'           reduce using rule 37
	varid          reduce using rule 37
	conid          reduce using rule 37
	op             reduce using rule 37
	opcon          reduce using rule 37
	symid          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37
	'`'            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37
	integer        reduce using rule 37
	char           reduce using rule 37
	double         reduce using rule 37
	string         reduce using rule 37
	%eof           reduce using rule 37


State 80

	AppLeft -> if Exp then . Exp else Exp               (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 129
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 81

	Binding -> LowIdent . Params '=' Exp                (rule 54)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 128
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 82

	LowIdent -> Var .                                   (rule 20)
	Binding -> Var . Op Params '=' Exp                  (rule 55)
	Binding -> Var . '`' Var '`' Params '=' Exp         (rule 56)

	'='            reduce using rule 20
	varid          reduce using rule 20
	op             shift, and enter state 45
	'`'            shift, and enter state 127

	Op             goto state 126

State 83

	LayoutInside__Binding__ -> Binding . '}'            (rule 102)
	LayoutInside__Binding__ -> Binding . ';' LayoutInside__Binding__    (rule 103)

	'}'            shift, and enter state 124
	';'            shift, and enter state 125


State 84

	Layout__Binding__ -> '{' LayoutInside__Binding__ .    (rule 88)

	in             reduce using rule 88


State 85

	Binding -> rec . LowIdent Params '=' Exp            (rule 57)
	Binding -> rec . Var Op Params '=' Exp              (rule 58)
	Binding -> rec . Var '`' Var '`' Params '=' Exp     (rule 59)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 122
	Var            goto state 123

State 86

	AppLeft -> let Layout__Binding__ in . Exp           (rule 47)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 121
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 87

	NoneOrMany__Var__ -> Var NoneOrMany__Var__ .        (rule 95)

	'->'           reduce using rule 95
	'='            reduce using rule 95
	'}'            reduce using rule 95
	';'            reduce using rule 95


State 88

	AppLeft -> lambda Params '->' . Exp                 (rule 43)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 120
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 89

	AppLeft -> letrec LowIdent Params . '=' Exp in Exp    (rule 48)

	'='            shift, and enter state 119


State 90

	AppLeft -> '(' opcon ')' .                          (rule 40)

	if             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	let            reduce using rule 40
	in             reduce using rule 40
	lambda         reduce using rule 40
	fix            reduce using rule 40
	letrec         reduce using rule 40
	'::'           reduce using rule 40
	varid          reduce using rule 40
	conid          reduce using rule 40
	op             reduce using rule 40
	opcon          reduce using rule 40
	symid          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	'`'            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40
	integer        reduce using rule 40
	char           reduce using rule 40
	double         reduce using rule 40
	string         reduce using rule 40
	%eof           reduce using rule 40


State 91

	AppLeft -> '(' AppLeft ')' .                        (rule 44)

	if             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	let            reduce using rule 44
	in             reduce using rule 44
	lambda         reduce using rule 44
	fix            reduce using rule 44
	letrec         reduce using rule 44
	'::'           reduce using rule 44
	varid          reduce using rule 44
	conid          reduce using rule 44
	op             reduce using rule 44
	opcon          reduce using rule 44
	symid          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	'`'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	integer        reduce using rule 44
	char           reduce using rule 44
	double         reduce using rule 44
	string         reduce using rule 44
	%eof           reduce using rule 44


State 92

	AppLeft -> '(' Application ')' .                    (rule 51)

	if             reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	let            reduce using rule 51
	in             reduce using rule 51
	lambda         reduce using rule 51
	fix            reduce using rule 51
	letrec         reduce using rule 51
	'::'           reduce using rule 51
	varid          reduce using rule 51
	conid          reduce using rule 51
	op             reduce using rule 51
	opcon          reduce using rule 51
	symid          reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	','            reduce using rule 51
	'`'            reduce using rule 51
	'}'            reduce using rule 51
	';'            reduce using rule 51
	integer        reduce using rule 51
	char           reduce using rule 51
	double         reduce using rule 51
	string         reduce using rule 51
	%eof           reduce using rule 51


State 93

	AppLeft -> '(' Exp CommaSeparated__Exp__ . ')'      (rule 49)

	')'            shift, and enter state 118


State 94

	AppLeft -> '(' Exp '::' . Type ')'                  (rule 52)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 117
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 95

	Exp -> '(' Exp ')' .                                (rule 33)

	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	let            reduce using rule 33
	in             reduce using rule 33
	lambda         reduce using rule 33
	fix            reduce using rule 33
	letrec         reduce using rule 33
	'::'           reduce using rule 33
	varid          reduce using rule 33
	conid          reduce using rule 33
	op             reduce using rule 33
	opcon          reduce using rule 33
	symid          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	','            reduce using rule 33
	'`'            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	integer        reduce using rule 33
	char           reduce using rule 33
	double         reduce using rule 33
	string         reduce using rule 33
	%eof           reduce using rule 33


State 96

	CommaSeparated__Exp__ -> ',' . Exp                  (rule 84)
	CommaSeparated__Exp__ -> ',' . Exp CommaSeparated__Exp__    (rule 85)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 116
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 97

	AppLeft -> '[' NoneOrManySeparated__Exp__ ']' .     (rule 50)

	if             reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	let            reduce using rule 50
	in             reduce using rule 50
	lambda         reduce using rule 50
	fix            reduce using rule 50
	letrec         reduce using rule 50
	'::'           reduce using rule 50
	varid          reduce using rule 50
	conid          reduce using rule 50
	op             reduce using rule 50
	opcon          reduce using rule 50
	symid          reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	','            reduce using rule 50
	'`'            reduce using rule 50
	'}'            reduce using rule 50
	';'            reduce using rule 50
	integer        reduce using rule 50
	char           reduce using rule 50
	double         reduce using rule 50
	string         reduce using rule 50
	%eof           reduce using rule 50


State 98

	NoneOrManySeparated__Exp__ -> Exp ',' . NoneOrManySeparated__Exp__    (rule 98)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 96
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 51
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 115

State 99

	TyArr -> Type . '->' Type                           (rule 75)
	TyArr -> Type '->' Type .                           (rule 75)

	'->'           shift, and enter state 50
			(reduce using rule 75)

	'|'            reduce using rule 75
	varid          reduce using rule 75
	conid          reduce using rule 75
	opcon          reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	','            reduce using rule 75
	'`'            reduce using rule 75
	'}'            reduce using rule 75
	';'            reduce using rule 75
	unit           reduce using rule 75
	%eof           reduce using rule 75


State 100

	Type -> TyAppLeft .                                 (rule 72)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 77)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 93)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 100)

	'->'           reduce using rule 92
			(reduce using rule 72)

	'|'            reduce using rule 92
	varid          shift, and enter state 17
			(reduce using rule 92)

	conid          shift, and enter state 18
			(reduce using rule 92)

	opcon          reduce using rule 92
	'('            shift, and enter state 34
			(reduce using rule 92)

	')'            reduce using rule 92
	','            reduce using rule 92
	'`'            reduce using rule 92
	'}'            reduce using rule 92
	';'            reduce using rule 92
	unit           shift, and enter state 35
			(reduce using rule 92)

	%eof           reduce using rule 92

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 114
	OneOrMany__TyAppLeft__goto state 49

State 101

	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 100)

	'->'           reduce using rule 100
	'|'            reduce using rule 100
	varid          reduce using rule 100
	conid          reduce using rule 100
	opcon          reduce using rule 100
	'('            reduce using rule 100
	')'            reduce using rule 100
	','            reduce using rule 100
	'`'            reduce using rule 100
	'}'            reduce using rule 100
	';'            reduce using rule 100
	unit           reduce using rule 100
	%eof           reduce using rule 100


State 102

	UpIdent -> '(' opcon ')' .                          (rule 23)

	'->'           reduce using rule 23
	'='            reduce using rule 23
	'|'            reduce using rule 23
	varid          reduce using rule 23
	conid          reduce using rule 23
	opcon          reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	','            reduce using rule 23
	'`'            reduce using rule 23
	'}'            reduce using rule 23
	';'            reduce using rule 23
	unit           reduce using rule 23
	where          reduce using rule 23
	%eof           reduce using rule 23


State 103

	TyAppLeft -> '(' TyAppLeft ')' .                    (rule 83)

	'->'           reduce using rule 83
	'|'            reduce using rule 83
	varid          reduce using rule 83
	conid          reduce using rule 83
	opcon          reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	','            reduce using rule 83
	'`'            reduce using rule 83
	'}'            reduce using rule 83
	';'            reduce using rule 83
	unit           reduce using rule 83
	%eof           reduce using rule 83


State 104

	TyAppLeft -> '(' TyApp ')' .                        (rule 82)

	'->'           reduce using rule 82
	'|'            reduce using rule 82
	varid          reduce using rule 82
	conid          reduce using rule 82
	opcon          reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	','            reduce using rule 82
	'`'            reduce using rule 82
	'}'            reduce using rule 82
	';'            reduce using rule 82
	unit           reduce using rule 82
	%eof           reduce using rule 82


State 105

	TyTuple -> '(' Type CommaSeparated__Type__ . ')'    (rule 76)

	')'            shift, and enter state 113


State 106

	Type -> '(' Type ')' .                              (rule 74)

	'->'           reduce using rule 74
	'|'            reduce using rule 74
	varid          reduce using rule 74
	conid          reduce using rule 74
	opcon          reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	','            reduce using rule 74
	'`'            reduce using rule 74
	'}'            reduce using rule 74
	';'            reduce using rule 74
	unit           reduce using rule 74
	%eof           reduce using rule 74


State 107

	CommaSeparated__Type__ -> ',' . Type                (rule 86)
	CommaSeparated__Type__ -> ',' . Type CommaSeparated__Type__    (rule 87)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 112
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 108

	LowIdent -> '(' Op ')' .                            (rule 21)

	if             reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	let            reduce using rule 21
	in             reduce using rule 21
	lambda         reduce using rule 21
	fix            reduce using rule 21
	letrec         reduce using rule 21
	'->'           reduce using rule 21
	'='            reduce using rule 21
	'|'            reduce using rule 21
	'::'           reduce using rule 21
	varid          reduce using rule 21
	conid          reduce using rule 21
	op             reduce using rule 21
	opcon          reduce using rule 21
	symid          reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	','            reduce using rule 21
	'`'            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21
	unit           reduce using rule 21
	integer        reduce using rule 21
	char           reduce using rule 21
	double         reduce using rule 21
	string         reduce using rule 21
	%eof           reduce using rule 21


State 109

	Module -> module UpIdent where . Layout__Declaration__    (rule 4)

	'{'            shift, and enter state 111

	Layout__Declaration__goto state 110

State 110

	Module -> module UpIdent where Layout__Declaration__ .    (rule 4)

	%eof           reduce using rule 4


State 111

	Layout__Declaration__ -> '{' . LayoutInside__Declaration__    (rule 89)

	data           shift, and enter state 157
	type           shift, and enter state 158
	varid          shift, and enter state 17
	'('            shift, and enter state 58

	Declaration    goto state 147
	Data           goto state 148
	TypeAlias      goto state 149
	TypeOp         goto state 150
	LowIdent       goto state 151
	Var            goto state 152
	GlobalBinding  goto state 153
	Fun            goto state 154
	Annotation     goto state 155
	LayoutInside__Declaration__goto state 156

State 112

	TyArr -> Type . '->' Type                           (rule 75)
	CommaSeparated__Type__ -> ',' Type .                (rule 86)
	CommaSeparated__Type__ -> ',' Type . CommaSeparated__Type__    (rule 87)

	'->'           shift, and enter state 50
	')'            reduce using rule 86
	','            shift, and enter state 107

	CommaSeparated__Type__goto state 146

State 113

	TyTuple -> '(' Type CommaSeparated__Type__ ')' .    (rule 76)

	'->'           reduce using rule 76
	'|'            reduce using rule 76
	varid          reduce using rule 76
	conid          reduce using rule 76
	opcon          reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	','            reduce using rule 76
	'`'            reduce using rule 76
	'}'            reduce using rule 76
	';'            reduce using rule 76
	unit           reduce using rule 76
	%eof           reduce using rule 76


State 114

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 93)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 100)

	'->'           reduce using rule 100
			(reduce using rule 93)

	'|'            reduce using rule 93
	varid          reduce using rule 93
	conid          reduce using rule 93
	opcon          reduce using rule 93
	'('            reduce using rule 93
	')'            reduce using rule 93
	','            reduce using rule 93
	'`'            reduce using rule 93
	'}'            reduce using rule 93
	';'            reduce using rule 93
	unit           reduce using rule 93
	%eof           reduce using rule 93


State 115

	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__ .    (rule 98)

	']'            reduce using rule 98


State 116

	CommaSeparated__Exp__ -> ',' Exp .                  (rule 84)
	CommaSeparated__Exp__ -> ',' Exp . CommaSeparated__Exp__    (rule 85)

	')'            reduce using rule 84
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 145

State 117

	AppLeft -> '(' Exp '::' Type . ')'                  (rule 52)
	TyArr -> Type . '->' Type                           (rule 75)

	'->'           shift, and enter state 50
	')'            shift, and enter state 144


State 118

	AppLeft -> '(' Exp CommaSeparated__Exp__ ')' .      (rule 49)

	if             reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	let            reduce using rule 49
	in             reduce using rule 49
	lambda         reduce using rule 49
	fix            reduce using rule 49
	letrec         reduce using rule 49
	'::'           reduce using rule 49
	varid          reduce using rule 49
	conid          reduce using rule 49
	op             reduce using rule 49
	opcon          reduce using rule 49
	symid          reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	'`'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49
	integer        reduce using rule 49
	char           reduce using rule 49
	double         reduce using rule 49
	string         reduce using rule 49
	%eof           reduce using rule 49


State 119

	AppLeft -> letrec LowIdent Params '=' . Exp in Exp    (rule 48)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 143
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 120

	AppLeft -> lambda Params '->' Exp .                 (rule 43)

	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	let            reduce using rule 43
	in             reduce using rule 43
	lambda         reduce using rule 43
	fix            reduce using rule 43
	letrec         reduce using rule 43
	'::'           reduce using rule 43
	varid          reduce using rule 43
	conid          reduce using rule 43
	op             reduce using rule 43
	opcon          reduce using rule 43
	symid          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'`'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	integer        reduce using rule 43
	char           reduce using rule 43
	double         reduce using rule 43
	string         reduce using rule 43
	%eof           reduce using rule 43


State 121

	AppLeft -> let Layout__Binding__ in Exp .           (rule 47)

	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	let            reduce using rule 47
	in             reduce using rule 47
	lambda         reduce using rule 47
	fix            reduce using rule 47
	letrec         reduce using rule 47
	'::'           reduce using rule 47
	varid          reduce using rule 47
	conid          reduce using rule 47
	op             reduce using rule 47
	opcon          reduce using rule 47
	symid          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	'`'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	integer        reduce using rule 47
	char           reduce using rule 47
	double         reduce using rule 47
	string         reduce using rule 47
	%eof           reduce using rule 47


State 122

	Binding -> rec LowIdent . Params '=' Exp            (rule 57)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 142
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 123

	LowIdent -> Var .                                   (rule 20)
	Binding -> rec Var . Op Params '=' Exp              (rule 58)
	Binding -> rec Var . '`' Var '`' Params '=' Exp     (rule 59)

	'='            reduce using rule 20
	varid          reduce using rule 20
	op             shift, and enter state 45
	'`'            shift, and enter state 141

	Op             goto state 140

State 124

	LayoutInside__Binding__ -> Binding '}' .            (rule 102)

	in             reduce using rule 102


State 125

	LayoutInside__Binding__ -> Binding ';' . LayoutInside__Binding__    (rule 103)

	varid          shift, and enter state 17
	'('            shift, and enter state 58
	rec            shift, and enter state 85

	LowIdent       goto state 81
	Var            goto state 82
	Binding        goto state 83
	LayoutInside__Binding__goto state 139

State 126

	Binding -> Var Op . Params '=' Exp                  (rule 55)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 138
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 127

	Binding -> Var '`' . Var '`' Params '=' Exp         (rule 56)

	varid          shift, and enter state 17

	Var            goto state 137

State 128

	Binding -> LowIdent Params . '=' Exp                (rule 54)

	'='            shift, and enter state 136


State 129

	AppLeft -> if Exp then Exp . else Exp               (rule 46)

	else           shift, and enter state 135


State 130

	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 107)

	if             reduce using rule 107
	then           reduce using rule 107
	else           reduce using rule 107
	let            reduce using rule 107
	in             reduce using rule 107
	lambda         reduce using rule 107
	fix            reduce using rule 107
	letrec         reduce using rule 107
	'::'           reduce using rule 107
	varid          reduce using rule 107
	conid          reduce using rule 107
	op             reduce using rule 107
	opcon          reduce using rule 107
	symid          reduce using rule 107
	'('            reduce using rule 107
	')'            reduce using rule 107
	'['            reduce using rule 107
	']'            reduce using rule 107
	','            reduce using rule 107
	'`'            reduce using rule 107
	'}'            reduce using rule 107
	';'            reduce using rule 107
	integer        reduce using rule 107
	char           reduce using rule 107
	double         reduce using rule 107
	string         reduce using rule 107
	%eof           reduce using rule 107


State 131

	Application -> AppLeft '`' Con '`' . OneOrMany__AppRight__    (rule 36)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 134

State 132

	Application -> AppLeft '`' Var '`' . OneOrMany__AppRight__    (rule 35)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 133

State 133

	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__ .    (rule 35)

	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	let            reduce using rule 35
	in             reduce using rule 35
	lambda         reduce using rule 35
	fix            reduce using rule 35
	letrec         reduce using rule 35
	'::'           reduce using rule 35
	varid          reduce using rule 35
	conid          reduce using rule 35
	op             reduce using rule 35
	opcon          reduce using rule 35
	symid          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	'`'            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	integer        reduce using rule 35
	char           reduce using rule 35
	double         reduce using rule 35
	string         reduce using rule 35
	%eof           reduce using rule 35


State 134

	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__ .    (rule 36)

	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	let            reduce using rule 36
	in             reduce using rule 36
	lambda         reduce using rule 36
	fix            reduce using rule 36
	letrec         reduce using rule 36
	'::'           reduce using rule 36
	varid          reduce using rule 36
	conid          reduce using rule 36
	op             reduce using rule 36
	opcon          reduce using rule 36
	symid          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	','            reduce using rule 36
	'`'            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	integer        reduce using rule 36
	char           reduce using rule 36
	double         reduce using rule 36
	string         reduce using rule 36
	%eof           reduce using rule 36


State 135

	AppLeft -> if Exp then Exp else . Exp               (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 175
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 136

	Binding -> LowIdent Params '=' . Exp                (rule 54)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 174
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 137

	Binding -> Var '`' Var . '`' Params '=' Exp         (rule 56)

	'`'            shift, and enter state 173


State 138

	Binding -> Var Op Params . '=' Exp                  (rule 55)

	'='            shift, and enter state 172


State 139

	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__ .    (rule 103)

	in             reduce using rule 103


State 140

	Binding -> rec Var Op . Params '=' Exp              (rule 58)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 171
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 141

	Binding -> rec Var '`' . Var '`' Params '=' Exp     (rule 59)

	varid          shift, and enter state 17

	Var            goto state 170

State 142

	Binding -> rec LowIdent Params . '=' Exp            (rule 57)

	'='            shift, and enter state 169


State 143

	AppLeft -> letrec LowIdent Params '=' Exp . in Exp    (rule 48)

	in             shift, and enter state 168


State 144

	AppLeft -> '(' Exp '::' Type ')' .                  (rule 52)

	if             reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	let            reduce using rule 52
	in             reduce using rule 52
	lambda         reduce using rule 52
	fix            reduce using rule 52
	letrec         reduce using rule 52
	'::'           reduce using rule 52
	varid          reduce using rule 52
	conid          reduce using rule 52
	op             reduce using rule 52
	opcon          reduce using rule 52
	symid          reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	','            reduce using rule 52
	'`'            reduce using rule 52
	'}'            reduce using rule 52
	';'            reduce using rule 52
	integer        reduce using rule 52
	char           reduce using rule 52
	double         reduce using rule 52
	string         reduce using rule 52
	%eof           reduce using rule 52


State 145

	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__ .    (rule 85)

	')'            reduce using rule 85


State 146

	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__ .    (rule 87)

	')'            reduce using rule 87


State 147

	LayoutInside__Declaration__ -> Declaration . '}'    (rule 104)
	LayoutInside__Declaration__ -> Declaration . ';' LayoutInside__Declaration__    (rule 105)

	'}'            shift, and enter state 166
	';'            shift, and enter state 167


State 148

	Declaration -> Data .                               (rule 6)

	'}'            reduce using rule 6
	';'            reduce using rule 6


State 149

	Declaration -> TypeAlias .                          (rule 7)

	'}'            reduce using rule 7
	';'            reduce using rule 7


State 150

	Declaration -> TypeOp .                             (rule 8)

	'}'            reduce using rule 8
	';'            reduce using rule 8


State 151

	GlobalBinding -> LowIdent . Params '=' Exp          (rule 60)
	Annotation -> LowIdent . '::' Type                  (rule 71)

	'='            reduce using rule 94
	'::'           shift, and enter state 165
	varid          shift, and enter state 17

	Params         goto state 164
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 152

	LowIdent -> Var .                                   (rule 20)
	GlobalBinding -> Var . Op Params '=' Exp            (rule 61)
	GlobalBinding -> Var . '`' Var '`' Params '=' Exp    (rule 62)

	'='            reduce using rule 20
	'::'           reduce using rule 20
	varid          reduce using rule 20
	op             shift, and enter state 45
	'`'            shift, and enter state 163

	Op             goto state 162

State 153

	Fun -> GlobalBinding .                              (rule 63)

	'}'            reduce using rule 63
	';'            reduce using rule 63


State 154

	Declaration -> Fun .                                (rule 5)

	'}'            reduce using rule 5
	';'            reduce using rule 5


State 155

	Fun -> Annotation . ';' GlobalBinding               (rule 64)

	';'            shift, and enter state 161


State 156

	Layout__Declaration__ -> '{' LayoutInside__Declaration__ .    (rule 89)

	%eof           reduce using rule 89


State 157

	Data -> data . UpIdent Params Constructors          (rule 9)

	conid          shift, and enter state 18
	'('            shift, and enter state 40
	unit           shift, and enter state 35

	UpIdent        goto state 160
	Con            goto state 28

State 158

	TypeAlias -> type . Con '=' Type                    (rule 17)
	TypeOp -> type . Con OneOrMany__Var__ '=' Type      (rule 18)

	conid          shift, and enter state 18

	Con            goto state 159

State 159

	TypeAlias -> type Con . '=' Type                    (rule 17)
	TypeOp -> type Con . OneOrMany__Var__ '=' Type      (rule 18)

	'='            shift, and enter state 192
	varid          shift, and enter state 17

	Var            goto state 190
	OneOrMany__Var__goto state 191

State 160

	Data -> data UpIdent . Params Constructors          (rule 9)

	'='            reduce using rule 94
	varid          shift, and enter state 17
	'}'            reduce using rule 94
	';'            reduce using rule 94

	Params         goto state 189
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 161

	Fun -> Annotation ';' . GlobalBinding               (rule 64)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 187
	Var            goto state 152
	GlobalBinding  goto state 188

State 162

	GlobalBinding -> Var Op . Params '=' Exp            (rule 61)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 186
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 163

	GlobalBinding -> Var '`' . Var '`' Params '=' Exp    (rule 62)

	varid          shift, and enter state 17

	Var            goto state 185

State 164

	GlobalBinding -> LowIdent Params . '=' Exp          (rule 60)

	'='            shift, and enter state 184


State 165

	Annotation -> LowIdent '::' . Type                  (rule 71)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 183
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 166

	LayoutInside__Declaration__ -> Declaration '}' .    (rule 104)

	%eof           reduce using rule 104


State 167

	LayoutInside__Declaration__ -> Declaration ';' . LayoutInside__Declaration__    (rule 105)

	data           shift, and enter state 157
	type           shift, and enter state 158
	varid          shift, and enter state 17
	'('            shift, and enter state 58

	Declaration    goto state 147
	Data           goto state 148
	TypeAlias      goto state 149
	TypeOp         goto state 150
	LowIdent       goto state 151
	Var            goto state 152
	GlobalBinding  goto state 153
	Fun            goto state 154
	Annotation     goto state 155
	LayoutInside__Declaration__goto state 182

State 168

	AppLeft -> letrec LowIdent Params '=' Exp in . Exp    (rule 48)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 181
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 169

	Binding -> rec LowIdent Params '=' . Exp            (rule 57)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 180
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 170

	Binding -> rec Var '`' Var . '`' Params '=' Exp     (rule 59)

	'`'            shift, and enter state 179


State 171

	Binding -> rec Var Op Params . '=' Exp              (rule 58)

	'='            shift, and enter state 178


State 172

	Binding -> Var Op Params '=' . Exp                  (rule 55)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 177
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 173

	Binding -> Var '`' Var '`' . Params '=' Exp         (rule 56)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 176
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 174

	Binding -> LowIdent Params '=' Exp .                (rule 54)

	'}'            reduce using rule 54
	';'            reduce using rule 54


State 175

	AppLeft -> if Exp then Exp else Exp .               (rule 46)

	if             reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	let            reduce using rule 46
	in             reduce using rule 46
	lambda         reduce using rule 46
	fix            reduce using rule 46
	letrec         reduce using rule 46
	'::'           reduce using rule 46
	varid          reduce using rule 46
	conid          reduce using rule 46
	op             reduce using rule 46
	opcon          reduce using rule 46
	symid          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	'`'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	integer        reduce using rule 46
	char           reduce using rule 46
	double         reduce using rule 46
	string         reduce using rule 46
	%eof           reduce using rule 46


State 176

	Binding -> Var '`' Var '`' Params . '=' Exp         (rule 56)

	'='            shift, and enter state 203


State 177

	Binding -> Var Op Params '=' Exp .                  (rule 55)

	'}'            reduce using rule 55
	';'            reduce using rule 55


State 178

	Binding -> rec Var Op Params '=' . Exp              (rule 58)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 202
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 179

	Binding -> rec Var '`' Var '`' . Params '=' Exp     (rule 59)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 201
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 180

	Binding -> rec LowIdent Params '=' Exp .            (rule 57)

	'}'            reduce using rule 57
	';'            reduce using rule 57


State 181

	AppLeft -> letrec LowIdent Params '=' Exp in Exp .    (rule 48)

	if             reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	let            reduce using rule 48
	in             reduce using rule 48
	lambda         reduce using rule 48
	fix            reduce using rule 48
	letrec         reduce using rule 48
	'::'           reduce using rule 48
	varid          reduce using rule 48
	conid          reduce using rule 48
	op             reduce using rule 48
	opcon          reduce using rule 48
	symid          reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	'`'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	integer        reduce using rule 48
	char           reduce using rule 48
	double         reduce using rule 48
	string         reduce using rule 48
	%eof           reduce using rule 48


State 182

	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__ .    (rule 105)

	%eof           reduce using rule 105


State 183

	Annotation -> LowIdent '::' Type .                  (rule 71)
	TyArr -> Type . '->' Type                           (rule 75)

	'->'           shift, and enter state 50
	';'            reduce using rule 71


State 184

	GlobalBinding -> LowIdent Params '=' . Exp          (rule 60)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 200
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 185

	GlobalBinding -> Var '`' Var . '`' Params '=' Exp    (rule 62)

	'`'            shift, and enter state 199


State 186

	GlobalBinding -> Var Op Params . '=' Exp            (rule 61)

	'='            shift, and enter state 198


State 187

	GlobalBinding -> LowIdent . Params '=' Exp          (rule 60)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 164
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 188

	Fun -> Annotation ';' GlobalBinding .               (rule 64)

	'}'            reduce using rule 64
	';'            reduce using rule 64


State 189

	Data -> data UpIdent Params . Constructors          (rule 9)

	'='            shift, and enter state 197
	'}'            reduce using rule 10
	';'            reduce using rule 10

	Constructors   goto state 196

State 190

	OneOrMany__Var__ -> Var . NoneOrMany__Var__         (rule 101)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Var            goto state 61
	NoneOrMany__Var__goto state 195

State 191

	TypeOp -> type Con OneOrMany__Var__ . '=' Type      (rule 18)

	'='            shift, and enter state 194


State 192

	TypeAlias -> type Con '=' . Type                    (rule 17)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 193
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 193

	TypeAlias -> type Con '=' Type .                    (rule 17)
	TyArr -> Type . '->' Type                           (rule 75)

	'->'           shift, and enter state 50
	'}'            reduce using rule 17
	';'            reduce using rule 17


State 194

	TypeOp -> type Con OneOrMany__Var__ '=' . Type      (rule 18)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 211
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 195

	OneOrMany__Var__ -> Var NoneOrMany__Var__ .         (rule 101)

	'='            reduce using rule 101


State 196

	Data -> data UpIdent Params Constructors .          (rule 9)

	'}'            reduce using rule 9
	';'            reduce using rule 9


State 197

	Constructors -> '=' . Constr NoneOrMany__ConstrOther__    (rule 11)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 208
	LowIdent       goto state 26
	UpIdent        goto state 209
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 210

State 198

	GlobalBinding -> Var Op Params '=' . Exp            (rule 61)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 207
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 199

	GlobalBinding -> Var '`' Var '`' . Params '=' Exp    (rule 62)

	'='            reduce using rule 94
	varid          shift, and enter state 17

	Params         goto state 206
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 200

	GlobalBinding -> LowIdent Params '=' Exp .          (rule 60)

	'}'            reduce using rule 60
	';'            reduce using rule 60


State 201

	Binding -> rec Var '`' Var '`' Params . '=' Exp     (rule 59)

	'='            shift, and enter state 205


State 202

	Binding -> rec Var Op Params '=' Exp .              (rule 58)

	'}'            reduce using rule 58
	';'            reduce using rule 58


State 203

	Binding -> Var '`' Var '`' Params '=' . Exp         (rule 56)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 204
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 204

	Binding -> Var '`' Var '`' Params '=' Exp .         (rule 56)

	'}'            reduce using rule 56
	';'            reduce using rule 56


State 205

	Binding -> rec Var '`' Var '`' Params '=' . Exp     (rule 59)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 222
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 206

	GlobalBinding -> Var '`' Var '`' Params . '=' Exp    (rule 62)

	'='            shift, and enter state 221


State 207

	GlobalBinding -> Var Op Params '=' Exp .            (rule 61)

	'}'            reduce using rule 61
	';'            reduce using rule 61


State 208

	Constructors -> '=' Constr . NoneOrMany__ConstrOther__    (rule 11)

	'|'            shift, and enter state 220
	'}'            reduce using rule 90
	';'            reduce using rule 90

	ConstrOther    goto state 218
	NoneOrMany__ConstrOther__goto state 219

State 209

	Constr -> UpIdent . NoneOrMany__TyAppLeft__         (rule 14)
	TyAppLeft -> UpIdent .                              (rule 79)

	'->'           reduce using rule 79
	'|'            reduce using rule 92
	varid          shift, and enter state 17
			(reduce using rule 79)

	conid          shift, and enter state 18
			(reduce using rule 79)

	opcon          reduce using rule 79
	'('            shift, and enter state 34
			(reduce using rule 79)

	'`'            reduce using rule 79
	'}'            reduce using rule 92
	';'            reduce using rule 92
	unit           shift, and enter state 35
			(reduce using rule 79)


	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 216
	NoneOrMany__TyAppLeft__goto state 217

State 210

	Constr -> TyAppLeft . ConName OneOrMany__TyAppLeft__    (rule 15)
	Type -> TyAppLeft .                                 (rule 72)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 77)

	'->'           reduce using rule 72
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	opcon          shift, and enter state 214
	'('            shift, and enter state 34
	'`'            shift, and enter state 215
	unit           shift, and enter state 35

	ConName        goto state 212
	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	OpCon          goto state 213
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 211

	TypeOp -> type Con OneOrMany__Var__ '=' Type .      (rule 18)
	TyArr -> Type . '->' Type                           (rule 75)

	'->'           shift, and enter state 50
	'}'            reduce using rule 18
	';'            reduce using rule 18


State 212

	Constr -> TyAppLeft ConName . OneOrMany__TyAppLeft__    (rule 15)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 228

State 213

	ConName -> OpCon .                                  (rule 12)

	varid          reduce using rule 12
	conid          reduce using rule 12
	'('            reduce using rule 12
	unit           reduce using rule 12


State 214

	OpCon -> opcon .                                    (rule 28)

	varid          reduce using rule 28
	conid          reduce using rule 28
	'('            reduce using rule 28
	unit           reduce using rule 28


State 215

	ConName -> '`' . Con '`'                            (rule 13)

	conid          shift, and enter state 18

	Con            goto state 227

State 216

	Type -> TyAppLeft .                                 (rule 72)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 77)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 93)

	'->'           reduce using rule 72
	'|'            reduce using rule 92
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	'}'            reduce using rule 92
	';'            reduce using rule 92
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 226
	OneOrMany__TyAppLeft__goto state 49

State 217

	Constr -> UpIdent NoneOrMany__TyAppLeft__ .         (rule 14)

	'|'            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14


State 218

	NoneOrMany__ConstrOther__ -> ConstrOther . NoneOrMany__ConstrOther__    (rule 91)

	'|'            shift, and enter state 220
	'}'            reduce using rule 90
	';'            reduce using rule 90

	ConstrOther    goto state 218
	NoneOrMany__ConstrOther__goto state 225

State 219

	Constructors -> '=' Constr NoneOrMany__ConstrOther__ .    (rule 11)

	'}'            reduce using rule 11
	';'            reduce using rule 11


State 220

	ConstrOther -> '|' . Constr                         (rule 16)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 224
	LowIdent       goto state 26
	UpIdent        goto state 209
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 210

State 221

	GlobalBinding -> Var '`' Var '`' Params '=' . Exp    (rule 62)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 223
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 222

	Binding -> rec Var '`' Var '`' Params '=' Exp .     (rule 59)

	'}'            reduce using rule 59
	';'            reduce using rule 59


State 223

	GlobalBinding -> Var '`' Var '`' Params '=' Exp .    (rule 62)

	'}'            reduce using rule 62
	';'            reduce using rule 62


State 224

	ConstrOther -> '|' Constr .                         (rule 16)

	'|'            reduce using rule 16
	'}'            reduce using rule 16
	';'            reduce using rule 16


State 225

	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__ .    (rule 91)

	'}'            reduce using rule 91
	';'            reduce using rule 91


State 226

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 93)

	'|'            reduce using rule 93
	'}'            reduce using rule 93
	';'            reduce using rule 93


State 227

	ConName -> '`' Con . '`'                            (rule 13)

	'`'            shift, and enter state 229


State 228

	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__ .    (rule 15)

	'|'            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15


State 229

	ConName -> '`' Con '`' .                            (rule 13)

	varid          reduce using rule 13
	conid          reduce using rule 13
	'('            reduce using rule 13
	unit           reduce using rule 13


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 108
Number of terminals: 44
Number of non-terminals: 50
Number of states: 230
