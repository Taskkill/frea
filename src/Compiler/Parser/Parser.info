-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Compiler/Parser/Parser.y
-----------------------------------------------------------------------------

state 8 contains 15 shift/reduce conflicts.
state 31 contains 4 shift/reduce conflicts.
state 41 contains 1 shift/reduce conflicts.
state 42 contains 1 shift/reduce conflicts.
state 46 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 52 contains 1 shift/reduce conflicts.
state 53 contains 1 shift/reduce conflicts.
state 63 contains 12 shift/reduce conflicts.
state 72 contains 12 shift/reduce conflicts.
state 93 contains 1 shift/reduce conflicts.
state 94 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 108 contains 1 reduce/reduce conflicts.
state 167 contains 4 shift/reduce conflicts.

terminal match is unused
terminal with is unused
terminal '_' is unused
terminal the is unused
terminal claim is unused
terminal define is unused
terminal fix is unused
terminal letrec is unused
terminal elim is unused
terminal assume is unused
terminal rec is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserMain -> Program                       (0)
	%start_parserType -> Type                          (1)
	Program -> Exp                                     (2)
	Program -> Module                                  (3)
	Module -> module UpIdent where Layout__Declaration__   (4)
	Declaration -> Fun                                 (5)
	Declaration -> Data                                (6)
	Declaration -> TypeSynonym                         (7)
	Data -> data UpIdent Params Constructors           (8)
	Constructors ->                                    (9)
	Constructors -> '=' Constr NoneOrMany__ConstrOther__   (10)
	ConName -> OpCon                                   (11)
	ConName -> '`' Con '`'                             (12)
	Constr -> UpIdent NoneOrMany__TyAppLeft__          (13)
	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__   (14)
	ConstrOther -> '|' Constr                          (15)
	TypeSynonym -> type Con NoneOrMany__Var__ '=' Type   (16)
	Params -> NoneOrMany__Var__                        (17)
	LowIdent -> Var                                    (18)
	LowIdent -> '(' Op ')'                             (19)
	UpIdent -> Con                                     (20)
	UpIdent -> '(' opcon ')'                           (21)
	UpIdent -> unit                                    (22)
	Var -> varid                                       (23)
	Con -> conid                                       (24)
	Op -> op                                           (25)
	OpCon -> opcon                                     (26)
	Oper -> op                                         (27)
	Oper -> opcon                                      (28)
	Exp -> AppLeft                                     (29)
	Exp -> Application                                 (30)
	Exp -> '(' Exp ')'                                 (31)
	Application -> AppLeft OneOrMany__AppRight__       (32)
	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__   (33)
	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__   (34)
	Application -> AppLeft Oper OneOrMany__AppRight__   (35)
	AppLeft -> LowIdent                                (36)
	AppLeft -> Con                                     (37)
	AppLeft -> '(' opcon ')'                           (38)
	AppLeft -> symid                                   (39)
	AppLeft -> Lit                                     (40)
	AppLeft -> lambda Params '->' Exp                  (41)
	AppLeft -> '(' AppLeft ')'                         (42)
	AppLeft -> if Exp then Exp else Exp                (43)
	AppLeft -> let Layout__Binding__ in Exp            (44)
	AppLeft -> '(' Exp CommaSeparated__Exp__ ')'       (45)
	AppLeft -> '[' NoneOrManySeparated__Exp__ ']'      (46)
	AppLeft -> '(' Application ')'                     (47)
	AppLeft -> '(' Exp '::' Type ')'                   (48)
	AppRight -> AppLeft                                (49)
	Binding -> LowIdent Params '=' Exp                 (50)
	Binding -> Var Op Params '=' Exp                   (51)
	Binding -> Var '`' Var '`' Params '=' Exp          (52)
	Fun -> Binding                                     (53)
	Fun -> Annotation ';' Binding                      (54)
	Lit -> Integer                                     (55)
	Lit -> Double                                      (56)
	Lit -> char                                        (57)
	Lit -> string                                      (58)
	Integer -> integer                                 (59)
	Double -> double                                   (60)
	Annotation -> LowIdent '::' Type                   (61)
	Type -> TyAppLeft                                  (62)
	Type -> TyApp                                      (63)
	Type -> '(' Type ')'                               (64)
	TyArr -> Type '->' Type                            (65)
	TyTuple -> '(' Type CommaSeparated__Type__ ')'     (66)
	TyApp -> TyAppLeft OneOrMany__TyAppLeft__          (67)
	TyAppLeft -> LowIdent                              (68)
	TyAppLeft -> UpIdent                               (69)
	TyAppLeft -> TyArr                                 (70)
	TyAppLeft -> TyTuple                               (71)
	TyAppLeft -> '(' TyApp ')'                         (72)
	TyAppLeft -> '(' TyAppLeft ')'                     (73)
	CommaSeparated__Exp__ -> ',' Exp                   (74)
	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__   (75)
	CommaSeparated__Type__ -> ',' Type                 (76)
	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__   (77)
	Layout__Binding__ -> '{' LayoutInside__Binding__   (78)
	Layout__Declaration__ -> '{' LayoutInside__Declaration__   (79)
	NoneOrMany__ConstrOther__ ->                       (80)
	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__   (81)
	NoneOrMany__TyAppLeft__ ->                         (82)
	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (83)
	NoneOrMany__Var__ ->                               (84)
	NoneOrMany__Var__ -> Var NoneOrMany__Var__         (85)
	NoneOrManySeparated__Exp__ ->                      (86)
	NoneOrManySeparated__Exp__ -> Exp                  (87)
	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__   (88)
	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (89)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (90)
	LayoutInside__Binding__ -> Binding '}'             (91)
	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__   (92)
	LayoutInside__Declaration__ -> Declaration '}'     (93)
	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__   (94)
	NoneOrMany__AppRight__ ->                          (95)
	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (96)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	match          { TokMatch }
	with           { TokWith }
	data           { TokData }
	if             { TokIf }
	then           { TokThen }
	else           { TokElse }
	let            { TokLet }
	in             { TokIn }
	type           { TokType }
	'_'            { TokHole }
	the            { TokThe }
	claim          { TokClaim }
	define         { TokDefine }
	lambda         { TokLambda }
	fix            { TokFix }
	letrec         { TokLetrec }
	'->'           { TokOperator "->" }
	'='            { TokOperator "=" }
	'|'            { TokOperator "|" }
	'::'           { TokHasType }
	varid          { TokVarLower $$ }
	conid          { TokVarUpper $$ }
	op             { TokOperator $$ }
	opcon          { TokOpConstr $$ }
	symid          { TokNativeSym $$ }
	elim           { TokEliminator $$ }
	'('            { TokLeftParen }
	')'            { TokRightParen }
	'['            { TokLeftBracket }
	']'            { TokRightBracket }
	','            { TokComma }
	'`'            { TokBackTick }
	'{'            { TokLeftBrace }
	'}'            { TokRightBrace }
	';'            { TokSemicolon }
	unit           { TokVarUpper "()" }
	integer        { TokInt $$ }
	char           { TokChar $$ }
	double         { TokDouble $$ }
	string         { TokString $$ }
	assume         { TokAssume }
	rec            { TokRec }
	module         { TokModule }
	where          { TokWhere }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserMain rule  0
	%start_parserType rule  1
	Program         rules 2, 3
	Module          rule  4
	Declaration     rules 5, 6, 7
	Data            rule  8
	Constructors    rules 9, 10
	ConName         rules 11, 12
	Constr          rules 13, 14
	ConstrOther     rule  15
	TypeSynonym     rule  16
	Params          rule  17
	LowIdent        rules 18, 19
	UpIdent         rules 20, 21, 22
	Var             rule  23
	Con             rule  24
	Op              rule  25
	OpCon           rule  26
	Oper            rules 27, 28
	Exp             rules 29, 30, 31
	Application     rules 32, 33, 34, 35
	AppLeft         rules 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
	AppRight        rule  49
	Binding         rules 50, 51, 52
	Fun             rules 53, 54
	Lit             rules 55, 56, 57, 58
	Integer         rule  59
	Double          rule  60
	Annotation      rule  61
	Type            rules 62, 63, 64
	TyArr           rule  65
	TyTuple         rule  66
	TyApp           rule  67
	TyAppLeft       rules 68, 69, 70, 71, 72, 73
	CommaSeparated__Exp__ rules 74, 75
	CommaSeparated__Type__ rules 76, 77
	Layout__Binding__ rule  78
	Layout__Declaration__ rule  79
	NoneOrMany__ConstrOther__ rules 80, 81
	NoneOrMany__TyAppLeft__ rules 82, 83
	NoneOrMany__Var__ rules 84, 85
	NoneOrManySeparated__Exp__ rules 86, 87, 88
	OneOrMany__AppRight__ rule  89
	OneOrMany__TyAppLeft__ rule  90
	LayoutInside__Binding__ rules 91, 92
	LayoutInside__Declaration__ rules 93, 94
	NoneOrMany__AppRight__ rules 95, 96

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parserMain -> . Program                      (rule 0)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23
	module         shift, and enter state 36

	Program        goto state 34
	Module         goto state 35
	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 1

	%start_parserType -> . Type                         (rule 1)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 27
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 31

State 2

	Program -> . Exp                                    (rule 2)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 3

	AppLeft -> LowIdent .                               (rule 36)

	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	let            reduce using rule 36
	lambda         reduce using rule 36
	'::'           reduce using rule 36
	varid          reduce using rule 36
	conid          reduce using rule 36
	op             reduce using rule 36
	opcon          reduce using rule 36
	symid          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	','            reduce using rule 36
	'`'            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	integer        reduce using rule 36
	char           reduce using rule 36
	double         reduce using rule 36
	string         reduce using rule 36
	%eof           reduce using rule 36


State 4

	LowIdent -> Var .                                   (rule 18)

	if             reduce using rule 18
	then           reduce using rule 18
	else           reduce using rule 18
	let            reduce using rule 18
	lambda         reduce using rule 18
	'->'           reduce using rule 18
	'|'            reduce using rule 18
	'::'           reduce using rule 18
	varid          reduce using rule 18
	conid          reduce using rule 18
	op             reduce using rule 18
	opcon          reduce using rule 18
	symid          reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'['            reduce using rule 18
	']'            reduce using rule 18
	','            reduce using rule 18
	'`'            reduce using rule 18
	'}'            reduce using rule 18
	';'            reduce using rule 18
	unit           reduce using rule 18
	integer        reduce using rule 18
	char           reduce using rule 18
	double         reduce using rule 18
	string         reduce using rule 18
	%eof           reduce using rule 18


State 5

	AppLeft -> Con .                                    (rule 37)

	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	let            reduce using rule 37
	lambda         reduce using rule 37
	'::'           reduce using rule 37
	varid          reduce using rule 37
	conid          reduce using rule 37
	op             reduce using rule 37
	opcon          reduce using rule 37
	symid          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37
	'`'            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37
	integer        reduce using rule 37
	char           reduce using rule 37
	double         reduce using rule 37
	string         reduce using rule 37
	%eof           reduce using rule 37


State 6

	Program -> Exp .                                    (rule 2)

	%eof           reduce using rule 2


State 7

	Exp -> Application .                                (rule 30)

	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	let            reduce using rule 30
	lambda         reduce using rule 30
	'::'           reduce using rule 30
	varid          reduce using rule 30
	conid          reduce using rule 30
	op             reduce using rule 30
	opcon          reduce using rule 30
	symid          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	'`'            reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30
	integer        reduce using rule 30
	char           reduce using rule 30
	double         reduce using rule 30
	string         reduce using rule 30
	%eof           reduce using rule 30


State 8

	Exp -> AppLeft .                                    (rule 29)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 32)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 33)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 34)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 35)

	if             shift, and enter state 12
			(reduce using rule 29)

	then           reduce using rule 29
	else           reduce using rule 29
	let            shift, and enter state 13
			(reduce using rule 29)

	lambda         shift, and enter state 14
			(reduce using rule 29)

	'::'           reduce using rule 29
	varid          shift, and enter state 15
			(reduce using rule 29)

	conid          shift, and enter state 16
			(reduce using rule 29)

	op             shift, and enter state 65
			(reduce using rule 29)

	opcon          shift, and enter state 66
			(reduce using rule 29)

	symid          shift, and enter state 17
			(reduce using rule 29)

	'('            shift, and enter state 67
			(reduce using rule 29)

	')'            reduce using rule 29
	'['            shift, and enter state 19
			(reduce using rule 29)

	']'            reduce using rule 29
	','            reduce using rule 29
	'`'            shift, and enter state 68
			(reduce using rule 29)

	'}'            reduce using rule 29
	';'            reduce using rule 29
	integer        shift, and enter state 20
			(reduce using rule 29)

	char           shift, and enter state 21
			(reduce using rule 29)

	double         shift, and enter state 22
			(reduce using rule 29)

	string         shift, and enter state 23
			(reduce using rule 29)

	%eof           reduce using rule 29

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 61
	AppLeft        goto state 62
	AppRight       goto state 63
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 64

State 9

	AppLeft -> Lit .                                    (rule 40)

	if             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	let            reduce using rule 40
	lambda         reduce using rule 40
	'::'           reduce using rule 40
	varid          reduce using rule 40
	conid          reduce using rule 40
	op             reduce using rule 40
	opcon          reduce using rule 40
	symid          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	'`'            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40
	integer        reduce using rule 40
	char           reduce using rule 40
	double         reduce using rule 40
	string         reduce using rule 40
	%eof           reduce using rule 40


State 10

	Lit -> Integer .                                    (rule 55)

	if             reduce using rule 55
	then           reduce using rule 55
	else           reduce using rule 55
	let            reduce using rule 55
	lambda         reduce using rule 55
	'::'           reduce using rule 55
	varid          reduce using rule 55
	conid          reduce using rule 55
	op             reduce using rule 55
	opcon          reduce using rule 55
	symid          reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	','            reduce using rule 55
	'`'            reduce using rule 55
	'}'            reduce using rule 55
	';'            reduce using rule 55
	integer        reduce using rule 55
	char           reduce using rule 55
	double         reduce using rule 55
	string         reduce using rule 55
	%eof           reduce using rule 55


State 11

	Lit -> Double .                                     (rule 56)

	if             reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	let            reduce using rule 56
	lambda         reduce using rule 56
	'::'           reduce using rule 56
	varid          reduce using rule 56
	conid          reduce using rule 56
	op             reduce using rule 56
	opcon          reduce using rule 56
	symid          reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	'`'            reduce using rule 56
	'}'            reduce using rule 56
	';'            reduce using rule 56
	integer        reduce using rule 56
	char           reduce using rule 56
	double         reduce using rule 56
	string         reduce using rule 56
	%eof           reduce using rule 56


State 12

	AppLeft -> if . Exp then Exp else Exp               (rule 43)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 60
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 13

	AppLeft -> let . Layout__Binding__ in Exp           (rule 44)

	'{'            shift, and enter state 59

	Layout__Binding__goto state 58

State 14

	AppLeft -> lambda . Params '->' Exp                 (rule 41)

	'->'           reduce using rule 84
	varid          shift, and enter state 15

	Params         goto state 55
	Var            goto state 56
	NoneOrMany__Var__goto state 57

State 15

	Var -> varid .                                      (rule 23)

	if             reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	let            reduce using rule 23
	lambda         reduce using rule 23
	'->'           reduce using rule 23
	'='            reduce using rule 23
	'|'            reduce using rule 23
	'::'           reduce using rule 23
	varid          reduce using rule 23
	conid          reduce using rule 23
	op             reduce using rule 23
	opcon          reduce using rule 23
	symid          reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	','            reduce using rule 23
	'`'            reduce using rule 23
	'}'            reduce using rule 23
	';'            reduce using rule 23
	unit           reduce using rule 23
	integer        reduce using rule 23
	char           reduce using rule 23
	double         reduce using rule 23
	string         reduce using rule 23
	%eof           reduce using rule 23


State 16

	Con -> conid .                                      (rule 24)

	if             reduce using rule 24
	then           reduce using rule 24
	else           reduce using rule 24
	let            reduce using rule 24
	lambda         reduce using rule 24
	'->'           reduce using rule 24
	'='            reduce using rule 24
	'|'            reduce using rule 24
	'::'           reduce using rule 24
	varid          reduce using rule 24
	conid          reduce using rule 24
	op             reduce using rule 24
	opcon          reduce using rule 24
	symid          reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	','            reduce using rule 24
	'`'            reduce using rule 24
	'}'            reduce using rule 24
	';'            reduce using rule 24
	unit           reduce using rule 24
	integer        reduce using rule 24
	char           reduce using rule 24
	double         reduce using rule 24
	string         reduce using rule 24
	where          reduce using rule 24
	%eof           reduce using rule 24


State 17

	AppLeft -> symid .                                  (rule 39)

	if             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	let            reduce using rule 39
	lambda         reduce using rule 39
	'::'           reduce using rule 39
	varid          reduce using rule 39
	conid          reduce using rule 39
	op             reduce using rule 39
	opcon          reduce using rule 39
	symid          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	'`'            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39
	integer        reduce using rule 39
	char           reduce using rule 39
	double         reduce using rule 39
	string         reduce using rule 39
	%eof           reduce using rule 39


State 18

	LowIdent -> '(' . Op ')'                            (rule 19)
	Exp -> '(' . Exp ')'                                (rule 31)
	AppLeft -> '(' . opcon ')'                          (rule 38)
	AppLeft -> '(' . AppLeft ')'                        (rule 42)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' . Application ')'                    (rule 47)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 48)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	op             shift, and enter state 43
	opcon          shift, and enter state 54
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 39
	Exp            goto state 51
	Application    goto state 52
	AppLeft        goto state 53
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 19

	AppLeft -> '[' . NoneOrManySeparated__Exp__ ']'     (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	']'            reduce using rule 86
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 49
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 50

State 20

	Integer -> integer .                                (rule 59)

	if             reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	let            reduce using rule 59
	lambda         reduce using rule 59
	'::'           reduce using rule 59
	varid          reduce using rule 59
	conid          reduce using rule 59
	op             reduce using rule 59
	opcon          reduce using rule 59
	symid          reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	','            reduce using rule 59
	'`'            reduce using rule 59
	'}'            reduce using rule 59
	';'            reduce using rule 59
	integer        reduce using rule 59
	char           reduce using rule 59
	double         reduce using rule 59
	string         reduce using rule 59
	%eof           reduce using rule 59


State 21

	Lit -> char .                                       (rule 57)

	if             reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	let            reduce using rule 57
	lambda         reduce using rule 57
	'::'           reduce using rule 57
	varid          reduce using rule 57
	conid          reduce using rule 57
	op             reduce using rule 57
	opcon          reduce using rule 57
	symid          reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	','            reduce using rule 57
	'`'            reduce using rule 57
	'}'            reduce using rule 57
	';'            reduce using rule 57
	integer        reduce using rule 57
	char           reduce using rule 57
	double         reduce using rule 57
	string         reduce using rule 57
	%eof           reduce using rule 57


State 22

	Double -> double .                                  (rule 60)

	if             reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	let            reduce using rule 60
	lambda         reduce using rule 60
	'::'           reduce using rule 60
	varid          reduce using rule 60
	conid          reduce using rule 60
	op             reduce using rule 60
	opcon          reduce using rule 60
	symid          reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	','            reduce using rule 60
	'`'            reduce using rule 60
	'}'            reduce using rule 60
	';'            reduce using rule 60
	integer        reduce using rule 60
	char           reduce using rule 60
	double         reduce using rule 60
	string         reduce using rule 60
	%eof           reduce using rule 60


State 23

	Lit -> string .                                     (rule 58)

	if             reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	let            reduce using rule 58
	lambda         reduce using rule 58
	'::'           reduce using rule 58
	varid          reduce using rule 58
	conid          reduce using rule 58
	op             reduce using rule 58
	opcon          reduce using rule 58
	symid          reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	','            reduce using rule 58
	'`'            reduce using rule 58
	'}'            reduce using rule 58
	';'            reduce using rule 58
	integer        reduce using rule 58
	char           reduce using rule 58
	double         reduce using rule 58
	string         reduce using rule 58
	%eof           reduce using rule 58


State 24

	TyAppLeft -> LowIdent .                             (rule 68)

	'->'           reduce using rule 68
	'|'            reduce using rule 68
	varid          reduce using rule 68
	conid          reduce using rule 68
	opcon          reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	','            reduce using rule 68
	'`'            reduce using rule 68
	'}'            reduce using rule 68
	';'            reduce using rule 68
	unit           reduce using rule 68
	%eof           reduce using rule 68


State 25

	TyAppLeft -> UpIdent .                              (rule 69)

	'->'           reduce using rule 69
	'|'            reduce using rule 69
	varid          reduce using rule 69
	conid          reduce using rule 69
	opcon          reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	','            reduce using rule 69
	'`'            reduce using rule 69
	'}'            reduce using rule 69
	';'            reduce using rule 69
	unit           reduce using rule 69
	%eof           reduce using rule 69


State 26

	UpIdent -> Con .                                    (rule 20)

	'->'           reduce using rule 20
	'='            reduce using rule 20
	'|'            reduce using rule 20
	varid          reduce using rule 20
	conid          reduce using rule 20
	opcon          reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	'`'            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20
	unit           reduce using rule 20
	where          reduce using rule 20
	%eof           reduce using rule 20


State 27

	%start_parserType -> Type .                         (rule 1)
	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 48
	%eof           accept


State 28

	TyAppLeft -> TyArr .                                (rule 70)

	'->'           reduce using rule 70
	'|'            reduce using rule 70
	varid          reduce using rule 70
	conid          reduce using rule 70
	opcon          reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	'`'            reduce using rule 70
	'}'            reduce using rule 70
	';'            reduce using rule 70
	unit           reduce using rule 70
	%eof           reduce using rule 70


State 29

	TyAppLeft -> TyTuple .                              (rule 71)

	'->'           reduce using rule 71
	'|'            reduce using rule 71
	varid          reduce using rule 71
	conid          reduce using rule 71
	opcon          reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	'`'            reduce using rule 71
	'}'            reduce using rule 71
	';'            reduce using rule 71
	unit           reduce using rule 71
	%eof           reduce using rule 71


State 30

	Type -> TyApp .                                     (rule 63)

	'->'           reduce using rule 63
	'|'            reduce using rule 63
	varid          reduce using rule 63
	conid          reduce using rule 63
	opcon          reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	','            reduce using rule 63
	'`'            reduce using rule 63
	'}'            reduce using rule 63
	';'            reduce using rule 63
	unit           reduce using rule 63
	%eof           reduce using rule 63


State 31

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 67)

	'->'           reduce using rule 62
	'|'            reduce using rule 62
	varid          shift, and enter state 15
			(reduce using rule 62)

	conid          shift, and enter state 16
			(reduce using rule 62)

	opcon          reduce using rule 62
	'('            shift, and enter state 32
			(reduce using rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	'`'            reduce using rule 62
	'}'            reduce using rule 62
	';'            reduce using rule 62
	unit           shift, and enter state 33
			(reduce using rule 62)

	%eof           reduce using rule 62

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 46
	OneOrMany__TyAppLeft__goto state 47

State 32

	LowIdent -> '(' . Op ')'                            (rule 19)
	UpIdent -> '(' . opcon ')'                          (rule 21)
	Type -> '(' . Type ')'                              (rule 64)
	TyTuple -> '(' . Type CommaSeparated__Type__ ')'    (rule 66)
	TyAppLeft -> '(' . TyApp ')'                        (rule 72)
	TyAppLeft -> '(' . TyAppLeft ')'                    (rule 73)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	op             shift, and enter state 43
	opcon          shift, and enter state 44
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Op             goto state 39
	Type           goto state 40
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 41
	TyAppLeft      goto state 42

State 33

	UpIdent -> unit .                                   (rule 22)

	'->'           reduce using rule 22
	'='            reduce using rule 22
	'|'            reduce using rule 22
	varid          reduce using rule 22
	conid          reduce using rule 22
	opcon          reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22
	'`'            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22
	unit           reduce using rule 22
	where          reduce using rule 22
	%eof           reduce using rule 22


State 34

	%start_parserMain -> Program .                      (rule 0)

	%eof           accept


State 35

	Program -> Module .                                 (rule 3)

	%eof           reduce using rule 3


State 36

	Module -> module . UpIdent where Layout__Declaration__    (rule 4)

	conid          shift, and enter state 16
	'('            shift, and enter state 38
	unit           shift, and enter state 33

	UpIdent        goto state 37
	Con            goto state 26

State 37

	Module -> module UpIdent . where Layout__Declaration__    (rule 4)

	where          shift, and enter state 103


State 38

	UpIdent -> '(' . opcon ')'                          (rule 21)

	opcon          shift, and enter state 44


State 39

	LowIdent -> '(' Op . ')'                            (rule 19)

	')'            shift, and enter state 102


State 40

	Type -> '(' Type . ')'                              (rule 64)
	TyArr -> Type . '->' Type                           (rule 65)
	TyTuple -> '(' Type . CommaSeparated__Type__ ')'    (rule 66)

	'->'           shift, and enter state 48
	')'            shift, and enter state 100
	','            shift, and enter state 101

	CommaSeparated__Type__goto state 99

State 41

	Type -> TyApp .                                     (rule 63)
	TyAppLeft -> '(' TyApp . ')'                        (rule 72)

	'->'           reduce using rule 63
	')'            shift, and enter state 98
			(reduce using rule 63)

	','            reduce using rule 63


State 42

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 67)
	TyAppLeft -> '(' TyAppLeft . ')'                    (rule 73)

	'->'           reduce using rule 62
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	')'            shift, and enter state 97
			(reduce using rule 62)

	','            reduce using rule 62
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 46
	OneOrMany__TyAppLeft__goto state 47

State 43

	Op -> op .                                          (rule 25)

	'='            reduce using rule 25
	varid          reduce using rule 25
	')'            reduce using rule 25


State 44

	UpIdent -> '(' opcon . ')'                          (rule 21)

	')'            shift, and enter state 96


State 45

	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 48


State 46

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 67)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 90)

	'->'           reduce using rule 82
			(reduce using rule 62)

	'|'            reduce using rule 82
	varid          shift, and enter state 15
			(reduce using rule 82)

	conid          shift, and enter state 16
			(reduce using rule 82)

	opcon          reduce using rule 82
	'('            shift, and enter state 32
			(reduce using rule 82)

	')'            reduce using rule 82
	','            reduce using rule 82
	'`'            reduce using rule 82
	'}'            reduce using rule 82
	';'            reduce using rule 82
	unit           shift, and enter state 33
			(reduce using rule 82)

	%eof           reduce using rule 82

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 94
	NoneOrMany__TyAppLeft__goto state 95
	OneOrMany__TyAppLeft__goto state 47

State 47

	TyApp -> TyAppLeft OneOrMany__TyAppLeft__ .         (rule 67)

	'->'           reduce using rule 67
	'|'            reduce using rule 67
	varid          reduce using rule 67
	conid          reduce using rule 67
	opcon          reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	','            reduce using rule 67
	'`'            reduce using rule 67
	'}'            reduce using rule 67
	';'            reduce using rule 67
	unit           reduce using rule 67
	%eof           reduce using rule 67


State 48

	TyArr -> Type '->' . Type                           (rule 65)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 93
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 31

State 49

	NoneOrManySeparated__Exp__ -> Exp .                 (rule 87)
	NoneOrManySeparated__Exp__ -> Exp . ',' NoneOrManySeparated__Exp__    (rule 88)

	']'            reduce using rule 87
	','            shift, and enter state 92


State 50

	AppLeft -> '[' NoneOrManySeparated__Exp__ . ']'     (rule 46)

	']'            shift, and enter state 91


State 51

	Exp -> '(' Exp . ')'                                (rule 31)
	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 48)

	'::'           shift, and enter state 88
	')'            shift, and enter state 89
	','            shift, and enter state 90

	CommaSeparated__Exp__goto state 87

State 52

	Exp -> Application .                                (rule 30)
	AppLeft -> '(' Application . ')'                    (rule 47)

	'::'           reduce using rule 30
	')'            shift, and enter state 86
			(reduce using rule 30)

	','            reduce using rule 30


State 53

	Exp -> AppLeft .                                    (rule 29)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 32)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 33)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 34)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 35)
	AppLeft -> '(' AppLeft . ')'                        (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	'::'           reduce using rule 29
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	op             shift, and enter state 65
	opcon          shift, and enter state 66
	symid          shift, and enter state 17
	'('            shift, and enter state 67
	')'            shift, and enter state 85
			(reduce using rule 29)

	'['            shift, and enter state 19
	','            reduce using rule 29
	'`'            shift, and enter state 68
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 61
	AppLeft        goto state 62
	AppRight       goto state 63
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 64

State 54

	AppLeft -> '(' opcon . ')'                          (rule 38)

	')'            shift, and enter state 84


State 55

	AppLeft -> lambda Params . '->' Exp                 (rule 41)

	'->'           shift, and enter state 83


State 56

	NoneOrMany__Var__ -> Var . NoneOrMany__Var__        (rule 85)

	'->'           reduce using rule 84
	'='            reduce using rule 84
	varid          shift, and enter state 15
	'}'            reduce using rule 84
	';'            reduce using rule 84

	Var            goto state 56
	NoneOrMany__Var__goto state 82

State 57

	Params -> NoneOrMany__Var__ .                       (rule 17)

	'->'           reduce using rule 17
	'='            reduce using rule 17
	'}'            reduce using rule 17
	';'            reduce using rule 17


State 58

	AppLeft -> let Layout__Binding__ . in Exp           (rule 44)

	in             shift, and enter state 81


State 59

	Layout__Binding__ -> '{' . LayoutInside__Binding__    (rule 78)

	varid          shift, and enter state 15
	'('            shift, and enter state 80

	LowIdent       goto state 76
	Var            goto state 77
	Binding        goto state 78
	LayoutInside__Binding__goto state 79

State 60

	AppLeft -> if Exp . then Exp else Exp               (rule 43)

	then           shift, and enter state 75


State 61

	Application -> AppLeft Oper . OneOrMany__AppRight__    (rule 35)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 67
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 62
	AppRight       goto state 63
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 74

State 62

	AppRight -> AppLeft .                               (rule 49)

	if             reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	let            reduce using rule 49
	lambda         reduce using rule 49
	'::'           reduce using rule 49
	varid          reduce using rule 49
	conid          reduce using rule 49
	op             reduce using rule 49
	opcon          reduce using rule 49
	symid          reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	'`'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49
	integer        reduce using rule 49
	char           reduce using rule 49
	double         reduce using rule 49
	string         reduce using rule 49
	%eof           reduce using rule 49


State 63

	OneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 89)

	if             shift, and enter state 12
			(reduce using rule 95)

	then           reduce using rule 95
	else           reduce using rule 95
	let            shift, and enter state 13
			(reduce using rule 95)

	lambda         shift, and enter state 14
			(reduce using rule 95)

	'::'           reduce using rule 95
	varid          shift, and enter state 15
			(reduce using rule 95)

	conid          shift, and enter state 16
			(reduce using rule 95)

	op             reduce using rule 95
	opcon          reduce using rule 95
	symid          shift, and enter state 17
			(reduce using rule 95)

	'('            shift, and enter state 67
			(reduce using rule 95)

	')'            reduce using rule 95
	'['            shift, and enter state 19
			(reduce using rule 95)

	']'            reduce using rule 95
	','            reduce using rule 95
	'`'            reduce using rule 95
	'}'            reduce using rule 95
	';'            reduce using rule 95
	integer        shift, and enter state 20
			(reduce using rule 95)

	char           shift, and enter state 21
			(reduce using rule 95)

	double         shift, and enter state 22
			(reduce using rule 95)

	string         shift, and enter state 23
			(reduce using rule 95)

	%eof           reduce using rule 95

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 62
	AppRight       goto state 72
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 73

State 64

	Application -> AppLeft OneOrMany__AppRight__ .      (rule 32)

	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	let            reduce using rule 32
	lambda         reduce using rule 32
	'::'           reduce using rule 32
	varid          reduce using rule 32
	conid          reduce using rule 32
	op             reduce using rule 32
	opcon          reduce using rule 32
	symid          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	','            reduce using rule 32
	'`'            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	integer        reduce using rule 32
	char           reduce using rule 32
	double         reduce using rule 32
	string         reduce using rule 32
	%eof           reduce using rule 32


State 65

	Oper -> op .                                        (rule 27)

	if             reduce using rule 27
	let            reduce using rule 27
	lambda         reduce using rule 27
	varid          reduce using rule 27
	conid          reduce using rule 27
	symid          reduce using rule 27
	'('            reduce using rule 27
	'['            reduce using rule 27
	integer        reduce using rule 27
	char           reduce using rule 27
	double         reduce using rule 27
	string         reduce using rule 27


State 66

	Oper -> opcon .                                     (rule 28)

	if             reduce using rule 28
	let            reduce using rule 28
	lambda         reduce using rule 28
	varid          reduce using rule 28
	conid          reduce using rule 28
	symid          reduce using rule 28
	'('            reduce using rule 28
	'['            reduce using rule 28
	integer        reduce using rule 28
	char           reduce using rule 28
	double         reduce using rule 28
	string         reduce using rule 28


State 67

	LowIdent -> '(' . Op ')'                            (rule 19)
	AppLeft -> '(' . opcon ')'                          (rule 38)
	AppLeft -> '(' . AppLeft ')'                        (rule 42)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' . Application ')'                    (rule 47)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 48)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	op             shift, and enter state 43
	opcon          shift, and enter state 54
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 39
	Exp            goto state 71
	Application    goto state 52
	AppLeft        goto state 53
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 68

	Application -> AppLeft '`' . Var '`' OneOrMany__AppRight__    (rule 33)
	Application -> AppLeft '`' . Con '`' OneOrMany__AppRight__    (rule 34)

	varid          shift, and enter state 15
	conid          shift, and enter state 16

	Var            goto state 69
	Con            goto state 70

State 69

	Application -> AppLeft '`' Var . '`' OneOrMany__AppRight__    (rule 33)

	'`'            shift, and enter state 123


State 70

	Application -> AppLeft '`' Con . '`' OneOrMany__AppRight__    (rule 34)

	'`'            shift, and enter state 122


State 71

	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 48)

	'::'           shift, and enter state 88
	','            shift, and enter state 90

	CommaSeparated__Exp__goto state 87

State 72

	NoneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 96)

	if             shift, and enter state 12
			(reduce using rule 95)

	then           reduce using rule 95
	else           reduce using rule 95
	let            shift, and enter state 13
			(reduce using rule 95)

	lambda         shift, and enter state 14
			(reduce using rule 95)

	'::'           reduce using rule 95
	varid          shift, and enter state 15
			(reduce using rule 95)

	conid          shift, and enter state 16
			(reduce using rule 95)

	op             reduce using rule 95
	opcon          reduce using rule 95
	symid          shift, and enter state 17
			(reduce using rule 95)

	'('            shift, and enter state 67
			(reduce using rule 95)

	')'            reduce using rule 95
	'['            shift, and enter state 19
			(reduce using rule 95)

	']'            reduce using rule 95
	','            reduce using rule 95
	'`'            reduce using rule 95
	'}'            reduce using rule 95
	';'            reduce using rule 95
	integer        shift, and enter state 20
			(reduce using rule 95)

	char           shift, and enter state 21
			(reduce using rule 95)

	double         shift, and enter state 22
			(reduce using rule 95)

	string         shift, and enter state 23
			(reduce using rule 95)

	%eof           reduce using rule 95

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 62
	AppRight       goto state 72
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 121

State 73

	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 89)

	if             reduce using rule 89
	then           reduce using rule 89
	else           reduce using rule 89
	let            reduce using rule 89
	lambda         reduce using rule 89
	'::'           reduce using rule 89
	varid          reduce using rule 89
	conid          reduce using rule 89
	op             reduce using rule 89
	opcon          reduce using rule 89
	symid          reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	'['            reduce using rule 89
	']'            reduce using rule 89
	','            reduce using rule 89
	'`'            reduce using rule 89
	'}'            reduce using rule 89
	';'            reduce using rule 89
	integer        reduce using rule 89
	char           reduce using rule 89
	double         reduce using rule 89
	string         reduce using rule 89
	%eof           reduce using rule 89


State 74

	Application -> AppLeft Oper OneOrMany__AppRight__ .    (rule 35)

	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	let            reduce using rule 35
	lambda         reduce using rule 35
	'::'           reduce using rule 35
	varid          reduce using rule 35
	conid          reduce using rule 35
	op             reduce using rule 35
	opcon          reduce using rule 35
	symid          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	'`'            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	integer        reduce using rule 35
	char           reduce using rule 35
	double         reduce using rule 35
	string         reduce using rule 35
	%eof           reduce using rule 35


State 75

	AppLeft -> if Exp then . Exp else Exp               (rule 43)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 120
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 76

	Binding -> LowIdent . Params '=' Exp                (rule 50)

	'='            reduce using rule 84
	varid          shift, and enter state 15

	Params         goto state 119
	Var            goto state 56
	NoneOrMany__Var__goto state 57

State 77

	LowIdent -> Var .                                   (rule 18)
	Binding -> Var . Op Params '=' Exp                  (rule 51)
	Binding -> Var . '`' Var '`' Params '=' Exp         (rule 52)

	'='            reduce using rule 18
	'::'           reduce using rule 18
	varid          reduce using rule 18
	op             shift, and enter state 43
	'`'            shift, and enter state 118

	Op             goto state 117

State 78

	LayoutInside__Binding__ -> Binding . '}'            (rule 91)
	LayoutInside__Binding__ -> Binding . ';' LayoutInside__Binding__    (rule 92)

	'}'            shift, and enter state 115
	';'            shift, and enter state 116


State 79

	Layout__Binding__ -> '{' LayoutInside__Binding__ .    (rule 78)

	in             reduce using rule 78


State 80

	LowIdent -> '(' . Op ')'                            (rule 19)

	op             shift, and enter state 43

	Op             goto state 39

State 81

	AppLeft -> let Layout__Binding__ in . Exp           (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 114
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 82

	NoneOrMany__Var__ -> Var NoneOrMany__Var__ .        (rule 85)

	'->'           reduce using rule 85
	'='            reduce using rule 85
	'}'            reduce using rule 85
	';'            reduce using rule 85


State 83

	AppLeft -> lambda Params '->' . Exp                 (rule 41)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 113
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 84

	AppLeft -> '(' opcon ')' .                          (rule 38)

	if             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	let            reduce using rule 38
	lambda         reduce using rule 38
	'::'           reduce using rule 38
	varid          reduce using rule 38
	conid          reduce using rule 38
	op             reduce using rule 38
	opcon          reduce using rule 38
	symid          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	'`'            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38
	integer        reduce using rule 38
	char           reduce using rule 38
	double         reduce using rule 38
	string         reduce using rule 38
	%eof           reduce using rule 38


State 85

	AppLeft -> '(' AppLeft ')' .                        (rule 42)

	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	let            reduce using rule 42
	lambda         reduce using rule 42
	'::'           reduce using rule 42
	varid          reduce using rule 42
	conid          reduce using rule 42
	op             reduce using rule 42
	opcon          reduce using rule 42
	symid          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'`'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	integer        reduce using rule 42
	char           reduce using rule 42
	double         reduce using rule 42
	string         reduce using rule 42
	%eof           reduce using rule 42


State 86

	AppLeft -> '(' Application ')' .                    (rule 47)

	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	let            reduce using rule 47
	lambda         reduce using rule 47
	'::'           reduce using rule 47
	varid          reduce using rule 47
	conid          reduce using rule 47
	op             reduce using rule 47
	opcon          reduce using rule 47
	symid          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	'`'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	integer        reduce using rule 47
	char           reduce using rule 47
	double         reduce using rule 47
	string         reduce using rule 47
	%eof           reduce using rule 47


State 87

	AppLeft -> '(' Exp CommaSeparated__Exp__ . ')'      (rule 45)

	')'            shift, and enter state 112


State 88

	AppLeft -> '(' Exp '::' . Type ')'                  (rule 48)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 111
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 31

State 89

	Exp -> '(' Exp ')' .                                (rule 31)

	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	let            reduce using rule 31
	lambda         reduce using rule 31
	'::'           reduce using rule 31
	varid          reduce using rule 31
	conid          reduce using rule 31
	op             reduce using rule 31
	opcon          reduce using rule 31
	symid          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	','            reduce using rule 31
	'`'            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	integer        reduce using rule 31
	char           reduce using rule 31
	double         reduce using rule 31
	string         reduce using rule 31
	%eof           reduce using rule 31


State 90

	CommaSeparated__Exp__ -> ',' . Exp                  (rule 74)
	CommaSeparated__Exp__ -> ',' . Exp CommaSeparated__Exp__    (rule 75)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 110
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 91

	AppLeft -> '[' NoneOrManySeparated__Exp__ ']' .     (rule 46)

	if             reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	let            reduce using rule 46
	lambda         reduce using rule 46
	'::'           reduce using rule 46
	varid          reduce using rule 46
	conid          reduce using rule 46
	op             reduce using rule 46
	opcon          reduce using rule 46
	symid          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	'`'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	integer        reduce using rule 46
	char           reduce using rule 46
	double         reduce using rule 46
	string         reduce using rule 46
	%eof           reduce using rule 46


State 92

	NoneOrManySeparated__Exp__ -> Exp ',' . NoneOrManySeparated__Exp__    (rule 88)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	']'            reduce using rule 86
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 49
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 109

State 93

	TyArr -> Type . '->' Type                           (rule 65)
	TyArr -> Type '->' Type .                           (rule 65)

	'->'           shift, and enter state 48
			(reduce using rule 65)

	'|'            reduce using rule 65
	varid          reduce using rule 65
	conid          reduce using rule 65
	opcon          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	'`'            reduce using rule 65
	'}'            reduce using rule 65
	';'            reduce using rule 65
	unit           reduce using rule 65
	%eof           reduce using rule 65


State 94

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 67)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 83)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 90)

	'->'           reduce using rule 82
			(reduce using rule 62)

	'|'            reduce using rule 82
	varid          shift, and enter state 15
			(reduce using rule 82)

	conid          shift, and enter state 16
			(reduce using rule 82)

	opcon          reduce using rule 82
	'('            shift, and enter state 32
			(reduce using rule 82)

	')'            reduce using rule 82
	','            reduce using rule 82
	'`'            reduce using rule 82
	'}'            reduce using rule 82
	';'            reduce using rule 82
	unit           shift, and enter state 33
			(reduce using rule 82)

	%eof           reduce using rule 82

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 94
	NoneOrMany__TyAppLeft__goto state 108
	OneOrMany__TyAppLeft__goto state 47

State 95

	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 90)

	'->'           reduce using rule 90
	'|'            reduce using rule 90
	varid          reduce using rule 90
	conid          reduce using rule 90
	opcon          reduce using rule 90
	'('            reduce using rule 90
	')'            reduce using rule 90
	','            reduce using rule 90
	'`'            reduce using rule 90
	'}'            reduce using rule 90
	';'            reduce using rule 90
	unit           reduce using rule 90
	%eof           reduce using rule 90


State 96

	UpIdent -> '(' opcon ')' .                          (rule 21)

	'->'           reduce using rule 21
	'='            reduce using rule 21
	'|'            reduce using rule 21
	varid          reduce using rule 21
	conid          reduce using rule 21
	opcon          reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	'`'            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21
	unit           reduce using rule 21
	where          reduce using rule 21
	%eof           reduce using rule 21


State 97

	TyAppLeft -> '(' TyAppLeft ')' .                    (rule 73)

	'->'           reduce using rule 73
	'|'            reduce using rule 73
	varid          reduce using rule 73
	conid          reduce using rule 73
	opcon          reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	'`'            reduce using rule 73
	'}'            reduce using rule 73
	';'            reduce using rule 73
	unit           reduce using rule 73
	%eof           reduce using rule 73


State 98

	TyAppLeft -> '(' TyApp ')' .                        (rule 72)

	'->'           reduce using rule 72
	'|'            reduce using rule 72
	varid          reduce using rule 72
	conid          reduce using rule 72
	opcon          reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	'`'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72
	unit           reduce using rule 72
	%eof           reduce using rule 72


State 99

	TyTuple -> '(' Type CommaSeparated__Type__ . ')'    (rule 66)

	')'            shift, and enter state 107


State 100

	Type -> '(' Type ')' .                              (rule 64)

	'->'           reduce using rule 64
	'|'            reduce using rule 64
	varid          reduce using rule 64
	conid          reduce using rule 64
	opcon          reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	'`'            reduce using rule 64
	'}'            reduce using rule 64
	';'            reduce using rule 64
	unit           reduce using rule 64
	%eof           reduce using rule 64


State 101

	CommaSeparated__Type__ -> ',' . Type                (rule 76)
	CommaSeparated__Type__ -> ',' . Type CommaSeparated__Type__    (rule 77)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 106
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 31

State 102

	LowIdent -> '(' Op ')' .                            (rule 19)

	if             reduce using rule 19
	then           reduce using rule 19
	else           reduce using rule 19
	let            reduce using rule 19
	lambda         reduce using rule 19
	'->'           reduce using rule 19
	'='            reduce using rule 19
	'|'            reduce using rule 19
	'::'           reduce using rule 19
	varid          reduce using rule 19
	conid          reduce using rule 19
	op             reduce using rule 19
	opcon          reduce using rule 19
	symid          reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	','            reduce using rule 19
	'`'            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19
	unit           reduce using rule 19
	integer        reduce using rule 19
	char           reduce using rule 19
	double         reduce using rule 19
	string         reduce using rule 19
	%eof           reduce using rule 19


State 103

	Module -> module UpIdent where . Layout__Declaration__    (rule 4)

	'{'            shift, and enter state 105

	Layout__Declaration__goto state 104

State 104

	Module -> module UpIdent where Layout__Declaration__ .    (rule 4)

	%eof           reduce using rule 4


State 105

	Layout__Declaration__ -> '{' . LayoutInside__Declaration__    (rule 79)

	data           shift, and enter state 142
	type           shift, and enter state 143
	varid          shift, and enter state 15
	'('            shift, and enter state 80

	Declaration    goto state 134
	Data           goto state 135
	TypeSynonym    goto state 136
	LowIdent       goto state 137
	Var            goto state 77
	Binding        goto state 138
	Fun            goto state 139
	Annotation     goto state 140
	LayoutInside__Declaration__goto state 141

State 106

	TyArr -> Type . '->' Type                           (rule 65)
	CommaSeparated__Type__ -> ',' Type .                (rule 76)
	CommaSeparated__Type__ -> ',' Type . CommaSeparated__Type__    (rule 77)

	'->'           shift, and enter state 48
	')'            reduce using rule 76
	','            shift, and enter state 101

	CommaSeparated__Type__goto state 133

State 107

	TyTuple -> '(' Type CommaSeparated__Type__ ')' .    (rule 66)

	'->'           reduce using rule 66
	'|'            reduce using rule 66
	varid          reduce using rule 66
	conid          reduce using rule 66
	opcon          reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	'`'            reduce using rule 66
	'}'            reduce using rule 66
	';'            reduce using rule 66
	unit           reduce using rule 66
	%eof           reduce using rule 66


State 108

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 83)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 90)

	'->'           reduce using rule 90
			(reduce using rule 83)

	'|'            reduce using rule 83
	varid          reduce using rule 83
	conid          reduce using rule 83
	opcon          reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	','            reduce using rule 83
	'`'            reduce using rule 83
	'}'            reduce using rule 83
	';'            reduce using rule 83
	unit           reduce using rule 83
	%eof           reduce using rule 83


State 109

	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__ .    (rule 88)

	']'            reduce using rule 88


State 110

	CommaSeparated__Exp__ -> ',' Exp .                  (rule 74)
	CommaSeparated__Exp__ -> ',' Exp . CommaSeparated__Exp__    (rule 75)

	')'            reduce using rule 74
	','            shift, and enter state 90

	CommaSeparated__Exp__goto state 132

State 111

	AppLeft -> '(' Exp '::' Type . ')'                  (rule 48)
	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 48
	')'            shift, and enter state 131


State 112

	AppLeft -> '(' Exp CommaSeparated__Exp__ ')' .      (rule 45)

	if             reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	let            reduce using rule 45
	lambda         reduce using rule 45
	'::'           reduce using rule 45
	varid          reduce using rule 45
	conid          reduce using rule 45
	op             reduce using rule 45
	opcon          reduce using rule 45
	symid          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'`'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	integer        reduce using rule 45
	char           reduce using rule 45
	double         reduce using rule 45
	string         reduce using rule 45
	%eof           reduce using rule 45


State 113

	AppLeft -> lambda Params '->' Exp .                 (rule 41)

	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	let            reduce using rule 41
	lambda         reduce using rule 41
	'::'           reduce using rule 41
	varid          reduce using rule 41
	conid          reduce using rule 41
	op             reduce using rule 41
	opcon          reduce using rule 41
	symid          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	'`'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	integer        reduce using rule 41
	char           reduce using rule 41
	double         reduce using rule 41
	string         reduce using rule 41
	%eof           reduce using rule 41


State 114

	AppLeft -> let Layout__Binding__ in Exp .           (rule 44)

	if             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	let            reduce using rule 44
	lambda         reduce using rule 44
	'::'           reduce using rule 44
	varid          reduce using rule 44
	conid          reduce using rule 44
	op             reduce using rule 44
	opcon          reduce using rule 44
	symid          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	'`'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	integer        reduce using rule 44
	char           reduce using rule 44
	double         reduce using rule 44
	string         reduce using rule 44
	%eof           reduce using rule 44


State 115

	LayoutInside__Binding__ -> Binding '}' .            (rule 91)

	in             reduce using rule 91


State 116

	LayoutInside__Binding__ -> Binding ';' . LayoutInside__Binding__    (rule 92)

	varid          shift, and enter state 15
	'('            shift, and enter state 80

	LowIdent       goto state 76
	Var            goto state 77
	Binding        goto state 78
	LayoutInside__Binding__goto state 130

State 117

	Binding -> Var Op . Params '=' Exp                  (rule 51)

	'='            reduce using rule 84
	varid          shift, and enter state 15

	Params         goto state 129
	Var            goto state 56
	NoneOrMany__Var__goto state 57

State 118

	Binding -> Var '`' . Var '`' Params '=' Exp         (rule 52)

	varid          shift, and enter state 15

	Var            goto state 128

State 119

	Binding -> LowIdent Params . '=' Exp                (rule 50)

	'='            shift, and enter state 127


State 120

	AppLeft -> if Exp then Exp . else Exp               (rule 43)

	else           shift, and enter state 126


State 121

	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 96)

	if             reduce using rule 96
	then           reduce using rule 96
	else           reduce using rule 96
	let            reduce using rule 96
	lambda         reduce using rule 96
	'::'           reduce using rule 96
	varid          reduce using rule 96
	conid          reduce using rule 96
	op             reduce using rule 96
	opcon          reduce using rule 96
	symid          reduce using rule 96
	'('            reduce using rule 96
	')'            reduce using rule 96
	'['            reduce using rule 96
	']'            reduce using rule 96
	','            reduce using rule 96
	'`'            reduce using rule 96
	'}'            reduce using rule 96
	';'            reduce using rule 96
	integer        reduce using rule 96
	char           reduce using rule 96
	double         reduce using rule 96
	string         reduce using rule 96
	%eof           reduce using rule 96


State 122

	Application -> AppLeft '`' Con '`' . OneOrMany__AppRight__    (rule 34)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 67
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 62
	AppRight       goto state 63
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 125

State 123

	Application -> AppLeft '`' Var '`' . OneOrMany__AppRight__    (rule 33)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 67
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 62
	AppRight       goto state 63
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 124

State 124

	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__ .    (rule 33)

	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	let            reduce using rule 33
	lambda         reduce using rule 33
	'::'           reduce using rule 33
	varid          reduce using rule 33
	conid          reduce using rule 33
	op             reduce using rule 33
	opcon          reduce using rule 33
	symid          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	','            reduce using rule 33
	'`'            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	integer        reduce using rule 33
	char           reduce using rule 33
	double         reduce using rule 33
	string         reduce using rule 33
	%eof           reduce using rule 33


State 125

	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__ .    (rule 34)

	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	let            reduce using rule 34
	lambda         reduce using rule 34
	'::'           reduce using rule 34
	varid          reduce using rule 34
	conid          reduce using rule 34
	op             reduce using rule 34
	opcon          reduce using rule 34
	symid          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	'`'            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	integer        reduce using rule 34
	char           reduce using rule 34
	double         reduce using rule 34
	string         reduce using rule 34
	%eof           reduce using rule 34


State 126

	AppLeft -> if Exp then Exp else . Exp               (rule 43)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 153
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 127

	Binding -> LowIdent Params '=' . Exp                (rule 50)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 152
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 128

	Binding -> Var '`' Var . '`' Params '=' Exp         (rule 52)

	'`'            shift, and enter state 151


State 129

	Binding -> Var Op Params . '=' Exp                  (rule 51)

	'='            shift, and enter state 150


State 130

	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__ .    (rule 92)

	in             reduce using rule 92


State 131

	AppLeft -> '(' Exp '::' Type ')' .                  (rule 48)

	if             reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	let            reduce using rule 48
	lambda         reduce using rule 48
	'::'           reduce using rule 48
	varid          reduce using rule 48
	conid          reduce using rule 48
	op             reduce using rule 48
	opcon          reduce using rule 48
	symid          reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	'`'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	integer        reduce using rule 48
	char           reduce using rule 48
	double         reduce using rule 48
	string         reduce using rule 48
	%eof           reduce using rule 48


State 132

	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__ .    (rule 75)

	')'            reduce using rule 75


State 133

	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__ .    (rule 77)

	')'            reduce using rule 77


State 134

	LayoutInside__Declaration__ -> Declaration . '}'    (rule 93)
	LayoutInside__Declaration__ -> Declaration . ';' LayoutInside__Declaration__    (rule 94)

	'}'            shift, and enter state 148
	';'            shift, and enter state 149


State 135

	Declaration -> Data .                               (rule 6)

	'}'            reduce using rule 6
	';'            reduce using rule 6


State 136

	Declaration -> TypeSynonym .                        (rule 7)

	'}'            reduce using rule 7
	';'            reduce using rule 7


State 137

	Binding -> LowIdent . Params '=' Exp                (rule 50)
	Annotation -> LowIdent . '::' Type                  (rule 61)

	'='            reduce using rule 84
	'::'           shift, and enter state 147
	varid          shift, and enter state 15

	Params         goto state 119
	Var            goto state 56
	NoneOrMany__Var__goto state 57

State 138

	Fun -> Binding .                                    (rule 53)

	'}'            reduce using rule 53
	';'            reduce using rule 53


State 139

	Declaration -> Fun .                                (rule 5)

	'}'            reduce using rule 5
	';'            reduce using rule 5


State 140

	Fun -> Annotation . ';' Binding                     (rule 54)

	';'            shift, and enter state 146


State 141

	Layout__Declaration__ -> '{' LayoutInside__Declaration__ .    (rule 79)

	%eof           reduce using rule 79


State 142

	Data -> data . UpIdent Params Constructors          (rule 8)

	conid          shift, and enter state 16
	'('            shift, and enter state 38
	unit           shift, and enter state 33

	UpIdent        goto state 145
	Con            goto state 26

State 143

	TypeSynonym -> type . Con NoneOrMany__Var__ '=' Type    (rule 16)

	conid          shift, and enter state 16

	Con            goto state 144

State 144

	TypeSynonym -> type Con . NoneOrMany__Var__ '=' Type    (rule 16)

	'='            reduce using rule 84
	varid          shift, and enter state 15

	Var            goto state 56
	NoneOrMany__Var__goto state 160

State 145

	Data -> data UpIdent . Params Constructors          (rule 8)

	'='            reduce using rule 84
	varid          shift, and enter state 15
	'}'            reduce using rule 84
	';'            reduce using rule 84

	Params         goto state 159
	Var            goto state 56
	NoneOrMany__Var__goto state 57

State 146

	Fun -> Annotation ';' . Binding                     (rule 54)

	varid          shift, and enter state 15
	'('            shift, and enter state 80

	LowIdent       goto state 76
	Var            goto state 77
	Binding        goto state 158

State 147

	Annotation -> LowIdent '::' . Type                  (rule 61)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 157
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 31

State 148

	LayoutInside__Declaration__ -> Declaration '}' .    (rule 93)

	%eof           reduce using rule 93


State 149

	LayoutInside__Declaration__ -> Declaration ';' . LayoutInside__Declaration__    (rule 94)

	data           shift, and enter state 142
	type           shift, and enter state 143
	varid          shift, and enter state 15
	'('            shift, and enter state 80

	Declaration    goto state 134
	Data           goto state 135
	TypeSynonym    goto state 136
	LowIdent       goto state 137
	Var            goto state 77
	Binding        goto state 138
	Fun            goto state 139
	Annotation     goto state 140
	LayoutInside__Declaration__goto state 156

State 150

	Binding -> Var Op Params '=' . Exp                  (rule 51)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 155
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 151

	Binding -> Var '`' Var '`' . Params '=' Exp         (rule 52)

	'='            reduce using rule 84
	varid          shift, and enter state 15

	Params         goto state 154
	Var            goto state 56
	NoneOrMany__Var__goto state 57

State 152

	Binding -> LowIdent Params '=' Exp .                (rule 50)

	'}'            reduce using rule 50
	';'            reduce using rule 50


State 153

	AppLeft -> if Exp then Exp else Exp .               (rule 43)

	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	let            reduce using rule 43
	lambda         reduce using rule 43
	'::'           reduce using rule 43
	varid          reduce using rule 43
	conid          reduce using rule 43
	op             reduce using rule 43
	opcon          reduce using rule 43
	symid          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'`'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	integer        reduce using rule 43
	char           reduce using rule 43
	double         reduce using rule 43
	string         reduce using rule 43
	%eof           reduce using rule 43


State 154

	Binding -> Var '`' Var '`' Params . '=' Exp         (rule 52)

	'='            shift, and enter state 164


State 155

	Binding -> Var Op Params '=' Exp .                  (rule 51)

	'}'            reduce using rule 51
	';'            reduce using rule 51


State 156

	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__ .    (rule 94)

	%eof           reduce using rule 94


State 157

	Annotation -> LowIdent '::' Type .                  (rule 61)
	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 48
	';'            reduce using rule 61


State 158

	Fun -> Annotation ';' Binding .                     (rule 54)

	'}'            reduce using rule 54
	';'            reduce using rule 54


State 159

	Data -> data UpIdent Params . Constructors          (rule 8)

	'='            shift, and enter state 163
	'}'            reduce using rule 9
	';'            reduce using rule 9

	Constructors   goto state 162

State 160

	TypeSynonym -> type Con NoneOrMany__Var__ . '=' Type    (rule 16)

	'='            shift, and enter state 161


State 161

	TypeSynonym -> type Con NoneOrMany__Var__ '=' . Type    (rule 16)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 169
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 31

State 162

	Data -> data UpIdent Params Constructors .          (rule 8)

	'}'            reduce using rule 8
	';'            reduce using rule 8


State 163

	Constructors -> '=' . Constr NoneOrMany__ConstrOther__    (rule 10)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	Constr         goto state 166
	LowIdent       goto state 24
	UpIdent        goto state 167
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 168

State 164

	Binding -> Var '`' Var '`' Params '=' . Exp         (rule 52)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	symid          shift, and enter state 17
	'('            shift, and enter state 18
	'['            shift, and enter state 19
	integer        shift, and enter state 20
	char           shift, and enter state 21
	double         shift, and enter state 22
	string         shift, and enter state 23

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 165
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 165

	Binding -> Var '`' Var '`' Params '=' Exp .         (rule 52)

	'}'            reduce using rule 52
	';'            reduce using rule 52


State 166

	Constructors -> '=' Constr . NoneOrMany__ConstrOther__    (rule 10)

	'|'            shift, and enter state 178
	'}'            reduce using rule 80
	';'            reduce using rule 80

	ConstrOther    goto state 176
	NoneOrMany__ConstrOther__goto state 177

State 167

	Constr -> UpIdent . NoneOrMany__TyAppLeft__         (rule 13)
	TyAppLeft -> UpIdent .                              (rule 69)

	'->'           reduce using rule 69
	'|'            reduce using rule 82
	varid          shift, and enter state 15
			(reduce using rule 69)

	conid          shift, and enter state 16
			(reduce using rule 69)

	opcon          reduce using rule 69
	'('            shift, and enter state 32
			(reduce using rule 69)

	'`'            reduce using rule 69
	'}'            reduce using rule 82
	';'            reduce using rule 82
	unit           shift, and enter state 33
			(reduce using rule 69)


	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 174
	NoneOrMany__TyAppLeft__goto state 175

State 168

	Constr -> TyAppLeft . ConName OneOrMany__TyAppLeft__    (rule 14)
	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 67)

	'->'           reduce using rule 62
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	opcon          shift, and enter state 172
	'('            shift, and enter state 32
	'`'            shift, and enter state 173
	unit           shift, and enter state 33

	ConName        goto state 170
	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	OpCon          goto state 171
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 46
	OneOrMany__TyAppLeft__goto state 47

State 169

	TypeSynonym -> type Con NoneOrMany__Var__ '=' Type .    (rule 16)
	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 48
	'}'            reduce using rule 16
	';'            reduce using rule 16


State 170

	Constr -> TyAppLeft ConName . OneOrMany__TyAppLeft__    (rule 14)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 46
	OneOrMany__TyAppLeft__goto state 183

State 171

	ConName -> OpCon .                                  (rule 11)

	varid          reduce using rule 11
	conid          reduce using rule 11
	'('            reduce using rule 11
	unit           reduce using rule 11


State 172

	OpCon -> opcon .                                    (rule 26)

	varid          reduce using rule 26
	conid          reduce using rule 26
	'('            reduce using rule 26
	unit           reduce using rule 26


State 173

	ConName -> '`' . Con '`'                            (rule 12)

	conid          shift, and enter state 16

	Con            goto state 182

State 174

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 67)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 83)

	'->'           reduce using rule 62
	'|'            reduce using rule 82
	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	'}'            reduce using rule 82
	';'            reduce using rule 82
	unit           shift, and enter state 33

	LowIdent       goto state 24
	UpIdent        goto state 25
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 94
	NoneOrMany__TyAppLeft__goto state 181
	OneOrMany__TyAppLeft__goto state 47

State 175

	Constr -> UpIdent NoneOrMany__TyAppLeft__ .         (rule 13)

	'|'            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13


State 176

	NoneOrMany__ConstrOther__ -> ConstrOther . NoneOrMany__ConstrOther__    (rule 81)

	'|'            shift, and enter state 178
	'}'            reduce using rule 80
	';'            reduce using rule 80

	ConstrOther    goto state 176
	NoneOrMany__ConstrOther__goto state 180

State 177

	Constructors -> '=' Constr NoneOrMany__ConstrOther__ .    (rule 10)

	'}'            reduce using rule 10
	';'            reduce using rule 10


State 178

	ConstrOther -> '|' . Constr                         (rule 15)

	varid          shift, and enter state 15
	conid          shift, and enter state 16
	'('            shift, and enter state 32
	unit           shift, and enter state 33

	Constr         goto state 179
	LowIdent       goto state 24
	UpIdent        goto state 167
	Var            goto state 4
	Con            goto state 26
	Type           goto state 45
	TyArr          goto state 28
	TyTuple        goto state 29
	TyApp          goto state 30
	TyAppLeft      goto state 168

State 179

	ConstrOther -> '|' Constr .                         (rule 15)

	'|'            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15


State 180

	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__ .    (rule 81)

	'}'            reduce using rule 81
	';'            reduce using rule 81


State 181

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 83)

	'|'            reduce using rule 83
	'}'            reduce using rule 83
	';'            reduce using rule 83


State 182

	ConName -> '`' Con . '`'                            (rule 12)

	'`'            shift, and enter state 184


State 183

	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__ .    (rule 14)

	'|'            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14


State 184

	ConName -> '`' Con '`' .                            (rule 12)

	varid          reduce using rule 12
	conid          reduce using rule 12
	'('            reduce using rule 12
	unit           reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 97
Number of terminals: 44
Number of non-terminals: 47
Number of states: 185
