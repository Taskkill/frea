-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Compiler/Parser/Parser.y
-----------------------------------------------------------------------------

state 8 contains 17 shift/reduce conflicts.
state 33 contains 4 shift/reduce conflicts.
state 51 contains 1 shift/reduce conflicts.
state 52 contains 1 shift/reduce conflicts.
state 56 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 57 contains 4 shift/reduce conflicts.
state 63 contains 1 shift/reduce conflicts.
state 64 contains 1 shift/reduce conflicts.
state 76 contains 14 shift/reduce conflicts.
state 85 contains 14 shift/reduce conflicts.
state 105 contains 1 shift/reduce conflicts.
state 106 contains 4 shift/reduce conflicts.
state 163 contains 4 shift/reduce conflicts.

terminal match is unused
terminal with is unused
terminal type is unused
terminal '_' is unused
terminal the is unused
terminal claim is unused
terminal define is unused
terminal elim is unused
terminal assume is unused
terminal rec is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserMain -> Program                       (0)
	%start_parserType -> Type                          (1)
	Program -> Exp                                     (2)
	Program -> Declarations                            (3)
	Declarations -> Layout__Declaration__              (4)
	Declaration -> Decl                                (5)
	Declaration -> Data                                (6)
	Data -> data UpIdent Params Constructors           (7)
	Constructors ->                                    (8)
	Constructors -> '=' Constr NoneOrMany__ConstrOther__   (9)
	ConName -> OpCon                                   (10)
	ConName -> '`' Con '`'                             (11)
	Constr -> UpIdent NoneOrMany__TyAppRight__         (12)
	Constr -> Type ConName OneOrMany__Type__           (13)
	ConstrOther -> '|' Constr                          (14)
	Params -> NoneOrMany__Var__                        (15)
	LowIdent -> Var                                    (16)
	LowIdent -> '(' Op ')'                             (17)
	UpIdent -> Con                                     (18)
	UpIdent -> '(' opcon ')'                           (19)
	UpIdent -> unit                                    (20)
	Var -> varid                                       (21)
	Con -> conid                                       (22)
	Op -> op                                           (23)
	OpCon -> opcon                                     (24)
	Oper -> op                                         (25)
	Oper -> opcon                                      (26)
	Exp -> AppLeft                                     (27)
	Exp -> Application                                 (28)
	Exp -> '(' Exp ')'                                 (29)
	Application -> AppLeft OneOrMany__AppRight__       (30)
	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__   (31)
	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__   (32)
	Application -> AppLeft Oper OneOrMany__AppRight__   (33)
	AppLeft -> LowIdent                                (34)
	AppLeft -> Con                                     (35)
	AppLeft -> '(' opcon ')'                           (36)
	AppLeft -> symid                                   (37)
	AppLeft -> Lit                                     (38)
	AppLeft -> lambda Params '->' Exp                  (39)
	AppLeft -> '(' AppLeft ')'                         (40)
	AppLeft -> fix Exp                                 (41)
	AppLeft -> if Exp then Exp else Exp                (42)
	AppLeft -> let Layout__Binding__ in Exp            (43)
	AppLeft -> letrec LowIdent Params '=' Exp in Exp   (44)
	AppLeft -> '(' Exp CommaSeparated__Exp__ ')'       (45)
	AppLeft -> '[' NoneOrManySeparated__Exp__ ']'      (46)
	AppLeft -> '(' Application ')'                     (47)
	AppRight -> AppLeft                                (48)
	Binding -> LowIdent Params '=' Exp                 (49)
	Binding -> Var Op Params '=' Exp                   (50)
	Binding -> Var '`' Var '`' Params '=' Exp          (51)
	GlobalBinding -> LowIdent Params '=' Exp           (52)
	GlobalBinding -> Var Op Params '=' Exp             (53)
	GlobalBinding -> Var '`' Var '`' Params '=' Exp    (54)
	Decl -> GlobalBinding                              (55)
	Lit -> Integer                                     (56)
	Lit -> Double                                      (57)
	Lit -> char                                        (58)
	Lit -> string                                      (59)
	Integer -> integer                                 (60)
	Double -> double                                   (61)
	Type -> TyAppLeft                                  (62)
	Type -> TyApp                                      (63)
	Type -> '(' Type ')'                               (64)
	TyArr -> Type '->' Type                            (65)
	TyTuple -> '(' Type CommaSeparated__Type__ ')'     (66)
	TyApp -> TyAppLeft OneOrMany__TyAppRight__         (67)
	TyAppLeft -> LowIdent                              (68)
	TyAppLeft -> UpIdent                               (69)
	TyAppLeft -> TyArr                                 (70)
	TyAppLeft -> TyTuple                               (71)
	TyAppLeft -> '(' TyApp ')'                         (72)
	TyAppLeft -> '(' TyAppLeft ')'                     (73)
	TyAppRight -> TyAppLeft                            (74)
	CommaSeparated__Exp__ -> ',' Exp                   (75)
	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__   (76)
	CommaSeparated__Type__ -> ',' Type                 (77)
	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__   (78)
	Layout__Binding__ -> '{' LayoutInside__Binding__   (79)
	Layout__Declaration__ -> '{' LayoutInside__Declaration__   (80)
	NoneOrMany__ConstrOther__ ->                       (81)
	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__   (82)
	NoneOrMany__TyAppRight__ ->                        (83)
	NoneOrMany__TyAppRight__ -> TyAppRight NoneOrMany__TyAppRight__   (84)
	NoneOrMany__Var__ ->                               (85)
	NoneOrMany__Var__ -> Var NoneOrMany__Var__         (86)
	NoneOrManySeparated__Exp__ ->                      (87)
	NoneOrManySeparated__Exp__ -> Exp                  (88)
	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__   (89)
	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (90)
	OneOrMany__TyAppRight__ -> TyAppRight NoneOrMany__TyAppRight__   (91)
	OneOrMany__Type__ -> Type NoneOrMany__Type__       (92)
	LayoutInside__Binding__ -> Binding '}'             (93)
	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__   (94)
	LayoutInside__Declaration__ -> Declaration '}'     (95)
	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__   (96)
	NoneOrMany__AppRight__ ->                          (97)
	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (98)
	NoneOrMany__Type__ ->                              (99)
	NoneOrMany__Type__ -> Type NoneOrMany__Type__      (100)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	match          { TokMatch }
	with           { TokWith }
	data           { TokData }
	if             { TokIf }
	then           { TokThen }
	else           { TokElse }
	let            { TokLet }
	in             { TokIn }
	type           { TokType }
	'_'            { TokHole }
	the            { TokThe }
	claim          { TokClaim }
	define         { TokDefine }
	lambda         { TokLambda }
	fix            { TokFix }
	letrec         { TokLetrec }
	'->'           { TokOperator "->" }
	'='            { TokOperator "=" }
	'|'            { TokOperator "|" }
	varid          { TokVarLower $$ }
	conid          { TokVarUpper $$ }
	op             { TokOperator $$ }
	opcon          { TokOpConstr $$ }
	symid          { TokNativeSym $$ }
	elim           { TokEliminator $$ }
	'('            { TokLeftParen }
	')'            { TokRightParen }
	'['            { TokLeftBracket }
	']'            { TokRightBracket }
	','            { TokComma }
	'`'            { TokBackTick }
	'{'            { TokLeftBrace }
	'}'            { TokRightBrace }
	';'            { TokSemicolon }
	unit           { TokVarUpper "()" }
	integer        { TokInt $$ }
	char           { TokChar $$ }
	double         { TokDouble $$ }
	string         { TokString $$ }
	assume         { TokAssume }
	rec            { TokRec }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserMain rule  0
	%start_parserType rule  1
	Program         rules 2, 3
	Declarations    rule  4
	Declaration     rules 5, 6
	Data            rule  7
	Constructors    rules 8, 9
	ConName         rules 10, 11
	Constr          rules 12, 13
	ConstrOther     rule  14
	Params          rule  15
	LowIdent        rules 16, 17
	UpIdent         rules 18, 19, 20
	Var             rule  21
	Con             rule  22
	Op              rule  23
	OpCon           rule  24
	Oper            rules 25, 26
	Exp             rules 27, 28, 29
	Application     rules 30, 31, 32, 33
	AppLeft         rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47
	AppRight        rule  48
	Binding         rules 49, 50, 51
	GlobalBinding   rules 52, 53, 54
	Decl            rule  55
	Lit             rules 56, 57, 58, 59
	Integer         rule  60
	Double          rule  61
	Type            rules 62, 63, 64
	TyArr           rule  65
	TyTuple         rule  66
	TyApp           rule  67
	TyAppLeft       rules 68, 69, 70, 71, 72, 73
	TyAppRight      rule  74
	CommaSeparated__Exp__ rules 75, 76
	CommaSeparated__Type__ rules 77, 78
	Layout__Binding__ rule  79
	Layout__Declaration__ rule  80
	NoneOrMany__ConstrOther__ rules 81, 82
	NoneOrMany__TyAppRight__ rules 83, 84
	NoneOrMany__Var__ rules 85, 86
	NoneOrManySeparated__Exp__ rules 87, 88, 89
	OneOrMany__AppRight__ rule  90
	OneOrMany__TyAppRight__ rule  91
	OneOrMany__Type__ rule  92
	LayoutInside__Binding__ rules 93, 94
	LayoutInside__Declaration__ rules 95, 96
	NoneOrMany__AppRight__ rules 97, 98
	NoneOrMany__Type__ rules 99, 100

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parserMain -> . Program                      (rule 0)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	'{'            shift, and enter state 39
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	Program        goto state 36
	Declarations   goto state 37
	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	Layout__Declaration__goto state 38

State 1

	%start_parserType -> . Type                         (rule 1)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 29
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 2

	Program -> . Exp                                    (rule 2)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 3

	AppLeft -> LowIdent .                               (rule 34)

	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	let            reduce using rule 34
	in             reduce using rule 34
	lambda         reduce using rule 34
	fix            reduce using rule 34
	letrec         reduce using rule 34
	varid          reduce using rule 34
	conid          reduce using rule 34
	op             reduce using rule 34
	opcon          reduce using rule 34
	symid          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	'`'            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	integer        reduce using rule 34
	char           reduce using rule 34
	double         reduce using rule 34
	string         reduce using rule 34
	%eof           reduce using rule 34


State 4

	LowIdent -> Var .                                   (rule 16)

	if             reduce using rule 16
	then           reduce using rule 16
	else           reduce using rule 16
	let            reduce using rule 16
	in             reduce using rule 16
	lambda         reduce using rule 16
	fix            reduce using rule 16
	letrec         reduce using rule 16
	'->'           reduce using rule 16
	'='            reduce using rule 16
	'|'            reduce using rule 16
	varid          reduce using rule 16
	conid          reduce using rule 16
	op             reduce using rule 16
	opcon          reduce using rule 16
	symid          reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	','            reduce using rule 16
	'`'            reduce using rule 16
	'}'            reduce using rule 16
	';'            reduce using rule 16
	unit           reduce using rule 16
	integer        reduce using rule 16
	char           reduce using rule 16
	double         reduce using rule 16
	string         reduce using rule 16
	%eof           reduce using rule 16


State 5

	AppLeft -> Con .                                    (rule 35)

	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	let            reduce using rule 35
	in             reduce using rule 35
	lambda         reduce using rule 35
	fix            reduce using rule 35
	letrec         reduce using rule 35
	varid          reduce using rule 35
	conid          reduce using rule 35
	op             reduce using rule 35
	opcon          reduce using rule 35
	symid          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	'`'            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	integer        reduce using rule 35
	char           reduce using rule 35
	double         reduce using rule 35
	string         reduce using rule 35
	%eof           reduce using rule 35


State 6

	Program -> Exp .                                    (rule 2)

	%eof           reduce using rule 2


State 7

	Exp -> Application .                                (rule 28)

	if             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	let            reduce using rule 28
	in             reduce using rule 28
	lambda         reduce using rule 28
	fix            reduce using rule 28
	letrec         reduce using rule 28
	varid          reduce using rule 28
	conid          reduce using rule 28
	op             reduce using rule 28
	opcon          reduce using rule 28
	symid          reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	','            reduce using rule 28
	'`'            reduce using rule 28
	'}'            reduce using rule 28
	';'            reduce using rule 28
	integer        reduce using rule 28
	char           reduce using rule 28
	double         reduce using rule 28
	string         reduce using rule 28
	%eof           reduce using rule 28


State 8

	Exp -> AppLeft .                                    (rule 27)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 30)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 31)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 32)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 33)

	if             shift, and enter state 12
			(reduce using rule 27)

	then           reduce using rule 27
	else           reduce using rule 27
	let            shift, and enter state 13
			(reduce using rule 27)

	in             reduce using rule 27
	lambda         shift, and enter state 14
			(reduce using rule 27)

	fix            shift, and enter state 15
			(reduce using rule 27)

	letrec         shift, and enter state 16
			(reduce using rule 27)

	varid          shift, and enter state 17
			(reduce using rule 27)

	conid          shift, and enter state 18
			(reduce using rule 27)

	op             shift, and enter state 78
			(reduce using rule 27)

	opcon          shift, and enter state 79
			(reduce using rule 27)

	symid          shift, and enter state 19
			(reduce using rule 27)

	'('            shift, and enter state 80
			(reduce using rule 27)

	')'            reduce using rule 27
	'['            shift, and enter state 21
			(reduce using rule 27)

	']'            reduce using rule 27
	','            reduce using rule 27
	'`'            shift, and enter state 81
			(reduce using rule 27)

	'}'            reduce using rule 27
	';'            reduce using rule 27
	integer        shift, and enter state 22
			(reduce using rule 27)

	char           shift, and enter state 23
			(reduce using rule 27)

	double         shift, and enter state 24
			(reduce using rule 27)

	string         shift, and enter state 25
			(reduce using rule 27)

	%eof           reduce using rule 27

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 74
	AppLeft        goto state 75
	AppRight       goto state 76
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 77

State 9

	AppLeft -> Lit .                                    (rule 38)

	if             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	let            reduce using rule 38
	in             reduce using rule 38
	lambda         reduce using rule 38
	fix            reduce using rule 38
	letrec         reduce using rule 38
	varid          reduce using rule 38
	conid          reduce using rule 38
	op             reduce using rule 38
	opcon          reduce using rule 38
	symid          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	'`'            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38
	integer        reduce using rule 38
	char           reduce using rule 38
	double         reduce using rule 38
	string         reduce using rule 38
	%eof           reduce using rule 38


State 10

	Lit -> Integer .                                    (rule 56)

	if             reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	let            reduce using rule 56
	in             reduce using rule 56
	lambda         reduce using rule 56
	fix            reduce using rule 56
	letrec         reduce using rule 56
	varid          reduce using rule 56
	conid          reduce using rule 56
	op             reduce using rule 56
	opcon          reduce using rule 56
	symid          reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	'`'            reduce using rule 56
	'}'            reduce using rule 56
	';'            reduce using rule 56
	integer        reduce using rule 56
	char           reduce using rule 56
	double         reduce using rule 56
	string         reduce using rule 56
	%eof           reduce using rule 56


State 11

	Lit -> Double .                                     (rule 57)

	if             reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	let            reduce using rule 57
	in             reduce using rule 57
	lambda         reduce using rule 57
	fix            reduce using rule 57
	letrec         reduce using rule 57
	varid          reduce using rule 57
	conid          reduce using rule 57
	op             reduce using rule 57
	opcon          reduce using rule 57
	symid          reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	','            reduce using rule 57
	'`'            reduce using rule 57
	'}'            reduce using rule 57
	';'            reduce using rule 57
	integer        reduce using rule 57
	char           reduce using rule 57
	double         reduce using rule 57
	string         reduce using rule 57
	%eof           reduce using rule 57


State 12

	AppLeft -> if . Exp then Exp else Exp               (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 73
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 13

	AppLeft -> let . Layout__Binding__ in Exp           (rule 43)

	'{'            shift, and enter state 72

	Layout__Binding__goto state 71

State 14

	AppLeft -> lambda . Params '->' Exp                 (rule 39)

	'->'           reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 68
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 15

	AppLeft -> fix . Exp                                (rule 41)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 67
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 16

	AppLeft -> letrec . LowIdent Params '=' Exp in Exp    (rule 44)

	varid          shift, and enter state 17
	'('            shift, and enter state 48

	LowIdent       goto state 66
	Var            goto state 4

State 17

	Var -> varid .                                      (rule 21)

	if             reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	let            reduce using rule 21
	in             reduce using rule 21
	lambda         reduce using rule 21
	fix            reduce using rule 21
	letrec         reduce using rule 21
	'->'           reduce using rule 21
	'='            reduce using rule 21
	'|'            reduce using rule 21
	varid          reduce using rule 21
	conid          reduce using rule 21
	op             reduce using rule 21
	opcon          reduce using rule 21
	symid          reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	','            reduce using rule 21
	'`'            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21
	unit           reduce using rule 21
	integer        reduce using rule 21
	char           reduce using rule 21
	double         reduce using rule 21
	string         reduce using rule 21
	%eof           reduce using rule 21


State 18

	Con -> conid .                                      (rule 22)

	if             reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	let            reduce using rule 22
	in             reduce using rule 22
	lambda         reduce using rule 22
	fix            reduce using rule 22
	letrec         reduce using rule 22
	'->'           reduce using rule 22
	'='            reduce using rule 22
	'|'            reduce using rule 22
	varid          reduce using rule 22
	conid          reduce using rule 22
	op             reduce using rule 22
	opcon          reduce using rule 22
	symid          reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	','            reduce using rule 22
	'`'            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22
	unit           reduce using rule 22
	integer        reduce using rule 22
	char           reduce using rule 22
	double         reduce using rule 22
	string         reduce using rule 22
	%eof           reduce using rule 22


State 19

	AppLeft -> symid .                                  (rule 37)

	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	let            reduce using rule 37
	in             reduce using rule 37
	lambda         reduce using rule 37
	fix            reduce using rule 37
	letrec         reduce using rule 37
	varid          reduce using rule 37
	conid          reduce using rule 37
	op             reduce using rule 37
	opcon          reduce using rule 37
	symid          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37
	'`'            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37
	integer        reduce using rule 37
	char           reduce using rule 37
	double         reduce using rule 37
	string         reduce using rule 37
	%eof           reduce using rule 37


State 20

	LowIdent -> '(' . Op ')'                            (rule 17)
	Exp -> '(' . Exp ')'                                (rule 29)
	AppLeft -> '(' . opcon ')'                          (rule 36)
	AppLeft -> '(' . AppLeft ')'                        (rule 40)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' . Application ')'                    (rule 47)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 53
	opcon          shift, and enter state 65
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 49
	Exp            goto state 62
	Application    goto state 63
	AppLeft        goto state 64
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 21

	AppLeft -> '[' . NoneOrManySeparated__Exp__ ']'     (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 87
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 60
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 61

State 22

	Integer -> integer .                                (rule 60)

	if             reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	let            reduce using rule 60
	in             reduce using rule 60
	lambda         reduce using rule 60
	fix            reduce using rule 60
	letrec         reduce using rule 60
	varid          reduce using rule 60
	conid          reduce using rule 60
	op             reduce using rule 60
	opcon          reduce using rule 60
	symid          reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	','            reduce using rule 60
	'`'            reduce using rule 60
	'}'            reduce using rule 60
	';'            reduce using rule 60
	integer        reduce using rule 60
	char           reduce using rule 60
	double         reduce using rule 60
	string         reduce using rule 60
	%eof           reduce using rule 60


State 23

	Lit -> char .                                       (rule 58)

	if             reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	let            reduce using rule 58
	in             reduce using rule 58
	lambda         reduce using rule 58
	fix            reduce using rule 58
	letrec         reduce using rule 58
	varid          reduce using rule 58
	conid          reduce using rule 58
	op             reduce using rule 58
	opcon          reduce using rule 58
	symid          reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	','            reduce using rule 58
	'`'            reduce using rule 58
	'}'            reduce using rule 58
	';'            reduce using rule 58
	integer        reduce using rule 58
	char           reduce using rule 58
	double         reduce using rule 58
	string         reduce using rule 58
	%eof           reduce using rule 58


State 24

	Double -> double .                                  (rule 61)

	if             reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	let            reduce using rule 61
	in             reduce using rule 61
	lambda         reduce using rule 61
	fix            reduce using rule 61
	letrec         reduce using rule 61
	varid          reduce using rule 61
	conid          reduce using rule 61
	op             reduce using rule 61
	opcon          reduce using rule 61
	symid          reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	','            reduce using rule 61
	'`'            reduce using rule 61
	'}'            reduce using rule 61
	';'            reduce using rule 61
	integer        reduce using rule 61
	char           reduce using rule 61
	double         reduce using rule 61
	string         reduce using rule 61
	%eof           reduce using rule 61


State 25

	Lit -> string .                                     (rule 59)

	if             reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	let            reduce using rule 59
	in             reduce using rule 59
	lambda         reduce using rule 59
	fix            reduce using rule 59
	letrec         reduce using rule 59
	varid          reduce using rule 59
	conid          reduce using rule 59
	op             reduce using rule 59
	opcon          reduce using rule 59
	symid          reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	','            reduce using rule 59
	'`'            reduce using rule 59
	'}'            reduce using rule 59
	';'            reduce using rule 59
	integer        reduce using rule 59
	char           reduce using rule 59
	double         reduce using rule 59
	string         reduce using rule 59
	%eof           reduce using rule 59


State 26

	TyAppLeft -> LowIdent .                             (rule 68)

	'->'           reduce using rule 68
	'|'            reduce using rule 68
	varid          reduce using rule 68
	conid          reduce using rule 68
	opcon          reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	','            reduce using rule 68
	'`'            reduce using rule 68
	'}'            reduce using rule 68
	';'            reduce using rule 68
	unit           reduce using rule 68
	%eof           reduce using rule 68


State 27

	TyAppLeft -> UpIdent .                              (rule 69)

	'->'           reduce using rule 69
	'|'            reduce using rule 69
	varid          reduce using rule 69
	conid          reduce using rule 69
	opcon          reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	','            reduce using rule 69
	'`'            reduce using rule 69
	'}'            reduce using rule 69
	';'            reduce using rule 69
	unit           reduce using rule 69
	%eof           reduce using rule 69


State 28

	UpIdent -> Con .                                    (rule 18)

	'->'           reduce using rule 18
	'='            reduce using rule 18
	'|'            reduce using rule 18
	varid          reduce using rule 18
	conid          reduce using rule 18
	opcon          reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18
	'`'            reduce using rule 18
	'}'            reduce using rule 18
	';'            reduce using rule 18
	unit           reduce using rule 18
	%eof           reduce using rule 18


State 29

	%start_parserType -> Type .                         (rule 1)
	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 59
	%eof           accept


State 30

	TyAppLeft -> TyArr .                                (rule 70)

	'->'           reduce using rule 70
	'|'            reduce using rule 70
	varid          reduce using rule 70
	conid          reduce using rule 70
	opcon          reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	'`'            reduce using rule 70
	'}'            reduce using rule 70
	';'            reduce using rule 70
	unit           reduce using rule 70
	%eof           reduce using rule 70


State 31

	TyAppLeft -> TyTuple .                              (rule 71)

	'->'           reduce using rule 71
	'|'            reduce using rule 71
	varid          reduce using rule 71
	conid          reduce using rule 71
	opcon          reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	'`'            reduce using rule 71
	'}'            reduce using rule 71
	';'            reduce using rule 71
	unit           reduce using rule 71
	%eof           reduce using rule 71


State 32

	Type -> TyApp .                                     (rule 63)

	'->'           reduce using rule 63
	'|'            reduce using rule 63
	varid          reduce using rule 63
	conid          reduce using rule 63
	opcon          reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	','            reduce using rule 63
	'`'            reduce using rule 63
	'}'            reduce using rule 63
	';'            reduce using rule 63
	unit           reduce using rule 63
	%eof           reduce using rule 63


State 33

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppRight__        (rule 67)

	'->'           reduce using rule 62
	'|'            reduce using rule 62
	varid          shift, and enter state 17
			(reduce using rule 62)

	conid          shift, and enter state 18
			(reduce using rule 62)

	opcon          reduce using rule 62
	'('            shift, and enter state 34
			(reduce using rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	'`'            reduce using rule 62
	'}'            reduce using rule 62
	';'            reduce using rule 62
	unit           shift, and enter state 35
			(reduce using rule 62)

	%eof           reduce using rule 62

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 55
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 56
	TyAppRight     goto state 57
	OneOrMany__TyAppRight__goto state 58

State 34

	LowIdent -> '(' . Op ')'                            (rule 17)
	UpIdent -> '(' . opcon ')'                          (rule 19)
	Type -> '(' . Type ')'                              (rule 64)
	TyTuple -> '(' . Type CommaSeparated__Type__ ')'    (rule 66)
	TyAppLeft -> '(' . TyApp ')'                        (rule 72)
	TyAppLeft -> '(' . TyAppLeft ')'                    (rule 73)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 53
	opcon          shift, and enter state 54
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Op             goto state 49
	Type           goto state 50
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 51
	TyAppLeft      goto state 52

State 35

	UpIdent -> unit .                                   (rule 20)

	'->'           reduce using rule 20
	'='            reduce using rule 20
	'|'            reduce using rule 20
	varid          reduce using rule 20
	conid          reduce using rule 20
	opcon          reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	'`'            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20
	unit           reduce using rule 20
	%eof           reduce using rule 20


State 36

	%start_parserMain -> Program .                      (rule 0)

	%eof           accept


State 37

	Program -> Declarations .                           (rule 3)

	%eof           reduce using rule 3


State 38

	Declarations -> Layout__Declaration__ .             (rule 4)

	%eof           reduce using rule 4


State 39

	Layout__Declaration__ -> '{' . LayoutInside__Declaration__    (rule 80)

	data           shift, and enter state 47
	varid          shift, and enter state 17
	'('            shift, and enter state 48

	Declaration    goto state 40
	Data           goto state 41
	LowIdent       goto state 42
	Var            goto state 43
	GlobalBinding  goto state 44
	Decl           goto state 45
	LayoutInside__Declaration__goto state 46

State 40

	LayoutInside__Declaration__ -> Declaration . '}'    (rule 95)
	LayoutInside__Declaration__ -> Declaration . ';' LayoutInside__Declaration__    (rule 96)

	'}'            shift, and enter state 120
	';'            shift, and enter state 121


State 41

	Declaration -> Data .                               (rule 6)

	'}'            reduce using rule 6
	';'            reduce using rule 6


State 42

	GlobalBinding -> LowIdent . Params '=' Exp          (rule 52)

	'='            reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 119
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 43

	LowIdent -> Var .                                   (rule 16)
	GlobalBinding -> Var . Op Params '=' Exp            (rule 53)
	GlobalBinding -> Var . '`' Var '`' Params '=' Exp    (rule 54)

	'='            reduce using rule 16
	varid          reduce using rule 16
	op             shift, and enter state 53
	'`'            shift, and enter state 118

	Op             goto state 117

State 44

	Decl -> GlobalBinding .                             (rule 55)

	'}'            reduce using rule 55
	';'            reduce using rule 55


State 45

	Declaration -> Decl .                               (rule 5)

	'}'            reduce using rule 5
	';'            reduce using rule 5


State 46

	Layout__Declaration__ -> '{' LayoutInside__Declaration__ .    (rule 80)

	%eof           reduce using rule 80


State 47

	Data -> data . UpIdent Params Constructors          (rule 7)

	conid          shift, and enter state 18
	'('            shift, and enter state 116
	unit           shift, and enter state 35

	UpIdent        goto state 115
	Con            goto state 28

State 48

	LowIdent -> '(' . Op ')'                            (rule 17)

	op             shift, and enter state 53

	Op             goto state 49

State 49

	LowIdent -> '(' Op . ')'                            (rule 17)

	')'            shift, and enter state 114


State 50

	Type -> '(' Type . ')'                              (rule 64)
	TyArr -> Type . '->' Type                           (rule 65)
	TyTuple -> '(' Type . CommaSeparated__Type__ ')'    (rule 66)

	'->'           shift, and enter state 59
	')'            shift, and enter state 112
	','            shift, and enter state 113

	CommaSeparated__Type__goto state 111

State 51

	Type -> TyApp .                                     (rule 63)
	TyAppLeft -> '(' TyApp . ')'                        (rule 72)

	'->'           reduce using rule 63
	')'            shift, and enter state 110
			(reduce using rule 63)

	','            reduce using rule 63


State 52

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppRight__        (rule 67)
	TyAppLeft -> '(' TyAppLeft . ')'                    (rule 73)

	'->'           reduce using rule 62
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	')'            shift, and enter state 109
			(reduce using rule 62)

	','            reduce using rule 62
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 55
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 56
	TyAppRight     goto state 57
	OneOrMany__TyAppRight__goto state 58

State 53

	Op -> op .                                          (rule 23)

	'='            reduce using rule 23
	varid          reduce using rule 23
	')'            reduce using rule 23


State 54

	UpIdent -> '(' opcon . ')'                          (rule 19)

	')'            shift, and enter state 108


State 55

	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 59


State 56

	Type -> TyAppLeft .                                 (rule 62)
	TyApp -> TyAppLeft . OneOrMany__TyAppRight__        (rule 67)
	TyAppRight -> TyAppLeft .                           (rule 74)

	'->'           reduce using rule 74
			(reduce using rule 62)

	'|'            reduce using rule 74
	varid          shift, and enter state 17
			(reduce using rule 74)

	conid          shift, and enter state 18
			(reduce using rule 74)

	opcon          reduce using rule 74
	'('            shift, and enter state 34
			(reduce using rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	'`'            reduce using rule 74
	'}'            reduce using rule 74
	';'            reduce using rule 74
	unit           shift, and enter state 35
			(reduce using rule 74)

	%eof           reduce using rule 74

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 55
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 56
	TyAppRight     goto state 57
	OneOrMany__TyAppRight__goto state 58

State 57

	OneOrMany__TyAppRight__ -> TyAppRight . NoneOrMany__TyAppRight__    (rule 91)

	'->'           reduce using rule 83
	'|'            reduce using rule 83
	varid          shift, and enter state 17
			(reduce using rule 83)

	conid          shift, and enter state 18
			(reduce using rule 83)

	opcon          reduce using rule 83
	'('            shift, and enter state 34
			(reduce using rule 83)

	')'            reduce using rule 83
	','            reduce using rule 83
	'`'            reduce using rule 83
	'}'            reduce using rule 83
	';'            reduce using rule 83
	unit           shift, and enter state 35
			(reduce using rule 83)

	%eof           reduce using rule 83

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 55
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 56
	TyAppRight     goto state 106
	NoneOrMany__TyAppRight__goto state 107

State 58

	TyApp -> TyAppLeft OneOrMany__TyAppRight__ .        (rule 67)

	'->'           reduce using rule 67
	'|'            reduce using rule 67
	varid          reduce using rule 67
	conid          reduce using rule 67
	opcon          reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	','            reduce using rule 67
	'`'            reduce using rule 67
	'}'            reduce using rule 67
	';'            reduce using rule 67
	unit           reduce using rule 67
	%eof           reduce using rule 67


State 59

	TyArr -> Type '->' . Type                           (rule 65)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 105
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 60

	NoneOrManySeparated__Exp__ -> Exp .                 (rule 88)
	NoneOrManySeparated__Exp__ -> Exp . ',' NoneOrManySeparated__Exp__    (rule 89)

	']'            reduce using rule 88
	','            shift, and enter state 104


State 61

	AppLeft -> '[' NoneOrManySeparated__Exp__ . ']'     (rule 46)

	']'            shift, and enter state 103


State 62

	Exp -> '(' Exp . ')'                                (rule 29)
	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 45)

	')'            shift, and enter state 101
	','            shift, and enter state 102

	CommaSeparated__Exp__goto state 100

State 63

	Exp -> Application .                                (rule 28)
	AppLeft -> '(' Application . ')'                    (rule 47)

	')'            shift, and enter state 99
			(reduce using rule 28)

	','            reduce using rule 28


State 64

	Exp -> AppLeft .                                    (rule 27)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 30)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 31)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 32)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 33)
	AppLeft -> '(' AppLeft . ')'                        (rule 40)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 78
	opcon          shift, and enter state 79
	symid          shift, and enter state 19
	'('            shift, and enter state 80
	')'            shift, and enter state 98
			(reduce using rule 27)

	'['            shift, and enter state 21
	','            reduce using rule 27
	'`'            shift, and enter state 81
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 74
	AppLeft        goto state 75
	AppRight       goto state 76
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 77

State 65

	AppLeft -> '(' opcon . ')'                          (rule 36)

	')'            shift, and enter state 97


State 66

	AppLeft -> letrec LowIdent . Params '=' Exp in Exp    (rule 44)

	'='            reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 96
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 67

	AppLeft -> fix Exp .                                (rule 41)

	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	let            reduce using rule 41
	in             reduce using rule 41
	lambda         reduce using rule 41
	fix            reduce using rule 41
	letrec         reduce using rule 41
	varid          reduce using rule 41
	conid          reduce using rule 41
	op             reduce using rule 41
	opcon          reduce using rule 41
	symid          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	'`'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	integer        reduce using rule 41
	char           reduce using rule 41
	double         reduce using rule 41
	string         reduce using rule 41
	%eof           reduce using rule 41


State 68

	AppLeft -> lambda Params . '->' Exp                 (rule 39)

	'->'           shift, and enter state 95


State 69

	NoneOrMany__Var__ -> Var . NoneOrMany__Var__        (rule 86)

	'->'           reduce using rule 85
	'='            reduce using rule 85
	varid          shift, and enter state 17
	'}'            reduce using rule 85
	';'            reduce using rule 85

	Var            goto state 69
	NoneOrMany__Var__goto state 94

State 70

	Params -> NoneOrMany__Var__ .                       (rule 15)

	'->'           reduce using rule 15
	'='            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15


State 71

	AppLeft -> let Layout__Binding__ . in Exp           (rule 43)

	in             shift, and enter state 93


State 72

	Layout__Binding__ -> '{' . LayoutInside__Binding__    (rule 79)

	varid          shift, and enter state 17
	'('            shift, and enter state 48

	LowIdent       goto state 89
	Var            goto state 90
	Binding        goto state 91
	LayoutInside__Binding__goto state 92

State 73

	AppLeft -> if Exp . then Exp else Exp               (rule 42)

	then           shift, and enter state 88


State 74

	Application -> AppLeft Oper . OneOrMany__AppRight__    (rule 33)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 80
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 75
	AppRight       goto state 76
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 87

State 75

	AppRight -> AppLeft .                               (rule 48)

	if             reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	let            reduce using rule 48
	in             reduce using rule 48
	lambda         reduce using rule 48
	fix            reduce using rule 48
	letrec         reduce using rule 48
	varid          reduce using rule 48
	conid          reduce using rule 48
	op             reduce using rule 48
	opcon          reduce using rule 48
	symid          reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	'`'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	integer        reduce using rule 48
	char           reduce using rule 48
	double         reduce using rule 48
	string         reduce using rule 48
	%eof           reduce using rule 48


State 76

	OneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 90)

	if             shift, and enter state 12
			(reduce using rule 97)

	then           reduce using rule 97
	else           reduce using rule 97
	let            shift, and enter state 13
			(reduce using rule 97)

	in             reduce using rule 97
	lambda         shift, and enter state 14
			(reduce using rule 97)

	fix            shift, and enter state 15
			(reduce using rule 97)

	letrec         shift, and enter state 16
			(reduce using rule 97)

	varid          shift, and enter state 17
			(reduce using rule 97)

	conid          shift, and enter state 18
			(reduce using rule 97)

	op             reduce using rule 97
	opcon          reduce using rule 97
	symid          shift, and enter state 19
			(reduce using rule 97)

	'('            shift, and enter state 80
			(reduce using rule 97)

	')'            reduce using rule 97
	'['            shift, and enter state 21
			(reduce using rule 97)

	']'            reduce using rule 97
	','            reduce using rule 97
	'`'            reduce using rule 97
	'}'            reduce using rule 97
	';'            reduce using rule 97
	integer        shift, and enter state 22
			(reduce using rule 97)

	char           shift, and enter state 23
			(reduce using rule 97)

	double         shift, and enter state 24
			(reduce using rule 97)

	string         shift, and enter state 25
			(reduce using rule 97)

	%eof           reduce using rule 97

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 75
	AppRight       goto state 85
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 86

State 77

	Application -> AppLeft OneOrMany__AppRight__ .      (rule 30)

	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	let            reduce using rule 30
	in             reduce using rule 30
	lambda         reduce using rule 30
	fix            reduce using rule 30
	letrec         reduce using rule 30
	varid          reduce using rule 30
	conid          reduce using rule 30
	op             reduce using rule 30
	opcon          reduce using rule 30
	symid          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	'`'            reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30
	integer        reduce using rule 30
	char           reduce using rule 30
	double         reduce using rule 30
	string         reduce using rule 30
	%eof           reduce using rule 30


State 78

	Oper -> op .                                        (rule 25)

	if             reduce using rule 25
	let            reduce using rule 25
	lambda         reduce using rule 25
	fix            reduce using rule 25
	letrec         reduce using rule 25
	varid          reduce using rule 25
	conid          reduce using rule 25
	symid          reduce using rule 25
	'('            reduce using rule 25
	'['            reduce using rule 25
	integer        reduce using rule 25
	char           reduce using rule 25
	double         reduce using rule 25
	string         reduce using rule 25


State 79

	Oper -> opcon .                                     (rule 26)

	if             reduce using rule 26
	let            reduce using rule 26
	lambda         reduce using rule 26
	fix            reduce using rule 26
	letrec         reduce using rule 26
	varid          reduce using rule 26
	conid          reduce using rule 26
	symid          reduce using rule 26
	'('            reduce using rule 26
	'['            reduce using rule 26
	integer        reduce using rule 26
	char           reduce using rule 26
	double         reduce using rule 26
	string         reduce using rule 26


State 80

	LowIdent -> '(' . Op ')'                            (rule 17)
	AppLeft -> '(' . opcon ')'                          (rule 36)
	AppLeft -> '(' . AppLeft ')'                        (rule 40)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 45)
	AppLeft -> '(' . Application ')'                    (rule 47)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 53
	opcon          shift, and enter state 65
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 49
	Exp            goto state 84
	Application    goto state 63
	AppLeft        goto state 64
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 81

	Application -> AppLeft '`' . Var '`' OneOrMany__AppRight__    (rule 31)
	Application -> AppLeft '`' . Con '`' OneOrMany__AppRight__    (rule 32)

	varid          shift, and enter state 17
	conid          shift, and enter state 18

	Var            goto state 82
	Con            goto state 83

State 82

	Application -> AppLeft '`' Var . '`' OneOrMany__AppRight__    (rule 31)

	'`'            shift, and enter state 144


State 83

	Application -> AppLeft '`' Con . '`' OneOrMany__AppRight__    (rule 32)

	'`'            shift, and enter state 143


State 84

	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 45)

	','            shift, and enter state 102

	CommaSeparated__Exp__goto state 100

State 85

	NoneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 98)

	if             shift, and enter state 12
			(reduce using rule 97)

	then           reduce using rule 97
	else           reduce using rule 97
	let            shift, and enter state 13
			(reduce using rule 97)

	in             reduce using rule 97
	lambda         shift, and enter state 14
			(reduce using rule 97)

	fix            shift, and enter state 15
			(reduce using rule 97)

	letrec         shift, and enter state 16
			(reduce using rule 97)

	varid          shift, and enter state 17
			(reduce using rule 97)

	conid          shift, and enter state 18
			(reduce using rule 97)

	op             reduce using rule 97
	opcon          reduce using rule 97
	symid          shift, and enter state 19
			(reduce using rule 97)

	'('            shift, and enter state 80
			(reduce using rule 97)

	')'            reduce using rule 97
	'['            shift, and enter state 21
			(reduce using rule 97)

	']'            reduce using rule 97
	','            reduce using rule 97
	'`'            reduce using rule 97
	'}'            reduce using rule 97
	';'            reduce using rule 97
	integer        shift, and enter state 22
			(reduce using rule 97)

	char           shift, and enter state 23
			(reduce using rule 97)

	double         shift, and enter state 24
			(reduce using rule 97)

	string         shift, and enter state 25
			(reduce using rule 97)

	%eof           reduce using rule 97

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 75
	AppRight       goto state 85
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 142

State 86

	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 90)

	if             reduce using rule 90
	then           reduce using rule 90
	else           reduce using rule 90
	let            reduce using rule 90
	in             reduce using rule 90
	lambda         reduce using rule 90
	fix            reduce using rule 90
	letrec         reduce using rule 90
	varid          reduce using rule 90
	conid          reduce using rule 90
	op             reduce using rule 90
	opcon          reduce using rule 90
	symid          reduce using rule 90
	'('            reduce using rule 90
	')'            reduce using rule 90
	'['            reduce using rule 90
	']'            reduce using rule 90
	','            reduce using rule 90
	'`'            reduce using rule 90
	'}'            reduce using rule 90
	';'            reduce using rule 90
	integer        reduce using rule 90
	char           reduce using rule 90
	double         reduce using rule 90
	string         reduce using rule 90
	%eof           reduce using rule 90


State 87

	Application -> AppLeft Oper OneOrMany__AppRight__ .    (rule 33)

	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	let            reduce using rule 33
	in             reduce using rule 33
	lambda         reduce using rule 33
	fix            reduce using rule 33
	letrec         reduce using rule 33
	varid          reduce using rule 33
	conid          reduce using rule 33
	op             reduce using rule 33
	opcon          reduce using rule 33
	symid          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	','            reduce using rule 33
	'`'            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	integer        reduce using rule 33
	char           reduce using rule 33
	double         reduce using rule 33
	string         reduce using rule 33
	%eof           reduce using rule 33


State 88

	AppLeft -> if Exp then . Exp else Exp               (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 141
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 89

	Binding -> LowIdent . Params '=' Exp                (rule 49)

	'='            reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 140
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 90

	LowIdent -> Var .                                   (rule 16)
	Binding -> Var . Op Params '=' Exp                  (rule 50)
	Binding -> Var . '`' Var '`' Params '=' Exp         (rule 51)

	'='            reduce using rule 16
	varid          reduce using rule 16
	op             shift, and enter state 53
	'`'            shift, and enter state 139

	Op             goto state 138

State 91

	LayoutInside__Binding__ -> Binding . '}'            (rule 93)
	LayoutInside__Binding__ -> Binding . ';' LayoutInside__Binding__    (rule 94)

	'}'            shift, and enter state 136
	';'            shift, and enter state 137


State 92

	Layout__Binding__ -> '{' LayoutInside__Binding__ .    (rule 79)

	in             reduce using rule 79


State 93

	AppLeft -> let Layout__Binding__ in . Exp           (rule 43)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 135
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 94

	NoneOrMany__Var__ -> Var NoneOrMany__Var__ .        (rule 86)

	'->'           reduce using rule 86
	'='            reduce using rule 86
	'}'            reduce using rule 86
	';'            reduce using rule 86


State 95

	AppLeft -> lambda Params '->' . Exp                 (rule 39)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 134
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 96

	AppLeft -> letrec LowIdent Params . '=' Exp in Exp    (rule 44)

	'='            shift, and enter state 133


State 97

	AppLeft -> '(' opcon ')' .                          (rule 36)

	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	let            reduce using rule 36
	in             reduce using rule 36
	lambda         reduce using rule 36
	fix            reduce using rule 36
	letrec         reduce using rule 36
	varid          reduce using rule 36
	conid          reduce using rule 36
	op             reduce using rule 36
	opcon          reduce using rule 36
	symid          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	','            reduce using rule 36
	'`'            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	integer        reduce using rule 36
	char           reduce using rule 36
	double         reduce using rule 36
	string         reduce using rule 36
	%eof           reduce using rule 36


State 98

	AppLeft -> '(' AppLeft ')' .                        (rule 40)

	if             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	let            reduce using rule 40
	in             reduce using rule 40
	lambda         reduce using rule 40
	fix            reduce using rule 40
	letrec         reduce using rule 40
	varid          reduce using rule 40
	conid          reduce using rule 40
	op             reduce using rule 40
	opcon          reduce using rule 40
	symid          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	'`'            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40
	integer        reduce using rule 40
	char           reduce using rule 40
	double         reduce using rule 40
	string         reduce using rule 40
	%eof           reduce using rule 40


State 99

	AppLeft -> '(' Application ')' .                    (rule 47)

	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	let            reduce using rule 47
	in             reduce using rule 47
	lambda         reduce using rule 47
	fix            reduce using rule 47
	letrec         reduce using rule 47
	varid          reduce using rule 47
	conid          reduce using rule 47
	op             reduce using rule 47
	opcon          reduce using rule 47
	symid          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	'`'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	integer        reduce using rule 47
	char           reduce using rule 47
	double         reduce using rule 47
	string         reduce using rule 47
	%eof           reduce using rule 47


State 100

	AppLeft -> '(' Exp CommaSeparated__Exp__ . ')'      (rule 45)

	')'            shift, and enter state 132


State 101

	Exp -> '(' Exp ')' .                                (rule 29)

	if             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	let            reduce using rule 29
	in             reduce using rule 29
	lambda         reduce using rule 29
	fix            reduce using rule 29
	letrec         reduce using rule 29
	varid          reduce using rule 29
	conid          reduce using rule 29
	op             reduce using rule 29
	opcon          reduce using rule 29
	symid          reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	','            reduce using rule 29
	'`'            reduce using rule 29
	'}'            reduce using rule 29
	';'            reduce using rule 29
	integer        reduce using rule 29
	char           reduce using rule 29
	double         reduce using rule 29
	string         reduce using rule 29
	%eof           reduce using rule 29


State 102

	CommaSeparated__Exp__ -> ',' . Exp                  (rule 75)
	CommaSeparated__Exp__ -> ',' . Exp CommaSeparated__Exp__    (rule 76)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 131
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 103

	AppLeft -> '[' NoneOrManySeparated__Exp__ ']' .     (rule 46)

	if             reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	let            reduce using rule 46
	in             reduce using rule 46
	lambda         reduce using rule 46
	fix            reduce using rule 46
	letrec         reduce using rule 46
	varid          reduce using rule 46
	conid          reduce using rule 46
	op             reduce using rule 46
	opcon          reduce using rule 46
	symid          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	'`'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	integer        reduce using rule 46
	char           reduce using rule 46
	double         reduce using rule 46
	string         reduce using rule 46
	%eof           reduce using rule 46


State 104

	NoneOrManySeparated__Exp__ -> Exp ',' . NoneOrManySeparated__Exp__    (rule 89)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 87
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 60
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 130

State 105

	TyArr -> Type . '->' Type                           (rule 65)
	TyArr -> Type '->' Type .                           (rule 65)

	'->'           shift, and enter state 59
			(reduce using rule 65)

	'|'            reduce using rule 65
	varid          reduce using rule 65
	conid          reduce using rule 65
	opcon          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	'`'            reduce using rule 65
	'}'            reduce using rule 65
	';'            reduce using rule 65
	unit           reduce using rule 65
	%eof           reduce using rule 65


State 106

	NoneOrMany__TyAppRight__ -> TyAppRight . NoneOrMany__TyAppRight__    (rule 84)

	'->'           reduce using rule 83
	'|'            reduce using rule 83
	varid          shift, and enter state 17
			(reduce using rule 83)

	conid          shift, and enter state 18
			(reduce using rule 83)

	opcon          reduce using rule 83
	'('            shift, and enter state 34
			(reduce using rule 83)

	')'            reduce using rule 83
	','            reduce using rule 83
	'`'            reduce using rule 83
	'}'            reduce using rule 83
	';'            reduce using rule 83
	unit           shift, and enter state 35
			(reduce using rule 83)

	%eof           reduce using rule 83

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 55
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 56
	TyAppRight     goto state 106
	NoneOrMany__TyAppRight__goto state 129

State 107

	OneOrMany__TyAppRight__ -> TyAppRight NoneOrMany__TyAppRight__ .    (rule 91)

	'->'           reduce using rule 91
	'|'            reduce using rule 91
	varid          reduce using rule 91
	conid          reduce using rule 91
	opcon          reduce using rule 91
	'('            reduce using rule 91
	')'            reduce using rule 91
	','            reduce using rule 91
	'`'            reduce using rule 91
	'}'            reduce using rule 91
	';'            reduce using rule 91
	unit           reduce using rule 91
	%eof           reduce using rule 91


State 108

	UpIdent -> '(' opcon ')' .                          (rule 19)

	'->'           reduce using rule 19
	'='            reduce using rule 19
	'|'            reduce using rule 19
	varid          reduce using rule 19
	conid          reduce using rule 19
	opcon          reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	'`'            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19
	unit           reduce using rule 19
	%eof           reduce using rule 19


State 109

	TyAppLeft -> '(' TyAppLeft ')' .                    (rule 73)

	'->'           reduce using rule 73
	'|'            reduce using rule 73
	varid          reduce using rule 73
	conid          reduce using rule 73
	opcon          reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	'`'            reduce using rule 73
	'}'            reduce using rule 73
	';'            reduce using rule 73
	unit           reduce using rule 73
	%eof           reduce using rule 73


State 110

	TyAppLeft -> '(' TyApp ')' .                        (rule 72)

	'->'           reduce using rule 72
	'|'            reduce using rule 72
	varid          reduce using rule 72
	conid          reduce using rule 72
	opcon          reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	'`'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72
	unit           reduce using rule 72
	%eof           reduce using rule 72


State 111

	TyTuple -> '(' Type CommaSeparated__Type__ . ')'    (rule 66)

	')'            shift, and enter state 128


State 112

	Type -> '(' Type ')' .                              (rule 64)

	'->'           reduce using rule 64
	'|'            reduce using rule 64
	varid          reduce using rule 64
	conid          reduce using rule 64
	opcon          reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	'`'            reduce using rule 64
	'}'            reduce using rule 64
	';'            reduce using rule 64
	unit           reduce using rule 64
	%eof           reduce using rule 64


State 113

	CommaSeparated__Type__ -> ',' . Type                (rule 77)
	CommaSeparated__Type__ -> ',' . Type CommaSeparated__Type__    (rule 78)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 127
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 114

	LowIdent -> '(' Op ')' .                            (rule 17)

	if             reduce using rule 17
	then           reduce using rule 17
	else           reduce using rule 17
	let            reduce using rule 17
	in             reduce using rule 17
	lambda         reduce using rule 17
	fix            reduce using rule 17
	letrec         reduce using rule 17
	'->'           reduce using rule 17
	'='            reduce using rule 17
	'|'            reduce using rule 17
	varid          reduce using rule 17
	conid          reduce using rule 17
	op             reduce using rule 17
	opcon          reduce using rule 17
	symid          reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'['            reduce using rule 17
	']'            reduce using rule 17
	','            reduce using rule 17
	'`'            reduce using rule 17
	'}'            reduce using rule 17
	';'            reduce using rule 17
	unit           reduce using rule 17
	integer        reduce using rule 17
	char           reduce using rule 17
	double         reduce using rule 17
	string         reduce using rule 17
	%eof           reduce using rule 17


State 115

	Data -> data UpIdent . Params Constructors          (rule 7)

	'='            reduce using rule 85
	varid          shift, and enter state 17
	'}'            reduce using rule 85
	';'            reduce using rule 85

	Params         goto state 126
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 116

	UpIdent -> '(' . opcon ')'                          (rule 19)

	opcon          shift, and enter state 54


State 117

	GlobalBinding -> Var Op . Params '=' Exp            (rule 53)

	'='            reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 125
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 118

	GlobalBinding -> Var '`' . Var '`' Params '=' Exp    (rule 54)

	varid          shift, and enter state 17

	Var            goto state 124

State 119

	GlobalBinding -> LowIdent Params . '=' Exp          (rule 52)

	'='            shift, and enter state 123


State 120

	LayoutInside__Declaration__ -> Declaration '}' .    (rule 95)

	%eof           reduce using rule 95


State 121

	LayoutInside__Declaration__ -> Declaration ';' . LayoutInside__Declaration__    (rule 96)

	data           shift, and enter state 47
	varid          shift, and enter state 17
	'('            shift, and enter state 48

	Declaration    goto state 40
	Data           goto state 41
	LowIdent       goto state 42
	Var            goto state 43
	GlobalBinding  goto state 44
	Decl           goto state 45
	LayoutInside__Declaration__goto state 122

State 122

	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__ .    (rule 96)

	%eof           reduce using rule 96


State 123

	GlobalBinding -> LowIdent Params '=' . Exp          (rule 52)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 159
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 124

	GlobalBinding -> Var '`' Var . '`' Params '=' Exp    (rule 54)

	'`'            shift, and enter state 158


State 125

	GlobalBinding -> Var Op Params . '=' Exp            (rule 53)

	'='            shift, and enter state 157


State 126

	Data -> data UpIdent Params . Constructors          (rule 7)

	'='            shift, and enter state 156
	'}'            reduce using rule 8
	';'            reduce using rule 8

	Constructors   goto state 155

State 127

	TyArr -> Type . '->' Type                           (rule 65)
	CommaSeparated__Type__ -> ',' Type .                (rule 77)
	CommaSeparated__Type__ -> ',' Type . CommaSeparated__Type__    (rule 78)

	'->'           shift, and enter state 59
	')'            reduce using rule 77
	','            shift, and enter state 113

	CommaSeparated__Type__goto state 154

State 128

	TyTuple -> '(' Type CommaSeparated__Type__ ')' .    (rule 66)

	'->'           reduce using rule 66
	'|'            reduce using rule 66
	varid          reduce using rule 66
	conid          reduce using rule 66
	opcon          reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	'`'            reduce using rule 66
	'}'            reduce using rule 66
	';'            reduce using rule 66
	unit           reduce using rule 66
	%eof           reduce using rule 66


State 129

	NoneOrMany__TyAppRight__ -> TyAppRight NoneOrMany__TyAppRight__ .    (rule 84)

	'->'           reduce using rule 84
	'|'            reduce using rule 84
	varid          reduce using rule 84
	conid          reduce using rule 84
	opcon          reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	','            reduce using rule 84
	'`'            reduce using rule 84
	'}'            reduce using rule 84
	';'            reduce using rule 84
	unit           reduce using rule 84
	%eof           reduce using rule 84


State 130

	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__ .    (rule 89)

	']'            reduce using rule 89


State 131

	CommaSeparated__Exp__ -> ',' Exp .                  (rule 75)
	CommaSeparated__Exp__ -> ',' Exp . CommaSeparated__Exp__    (rule 76)

	')'            reduce using rule 75
	','            shift, and enter state 102

	CommaSeparated__Exp__goto state 153

State 132

	AppLeft -> '(' Exp CommaSeparated__Exp__ ')' .      (rule 45)

	if             reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	let            reduce using rule 45
	in             reduce using rule 45
	lambda         reduce using rule 45
	fix            reduce using rule 45
	letrec         reduce using rule 45
	varid          reduce using rule 45
	conid          reduce using rule 45
	op             reduce using rule 45
	opcon          reduce using rule 45
	symid          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'`'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	integer        reduce using rule 45
	char           reduce using rule 45
	double         reduce using rule 45
	string         reduce using rule 45
	%eof           reduce using rule 45


State 133

	AppLeft -> letrec LowIdent Params '=' . Exp in Exp    (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 152
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 134

	AppLeft -> lambda Params '->' Exp .                 (rule 39)

	if             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	let            reduce using rule 39
	in             reduce using rule 39
	lambda         reduce using rule 39
	fix            reduce using rule 39
	letrec         reduce using rule 39
	varid          reduce using rule 39
	conid          reduce using rule 39
	op             reduce using rule 39
	opcon          reduce using rule 39
	symid          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	'`'            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39
	integer        reduce using rule 39
	char           reduce using rule 39
	double         reduce using rule 39
	string         reduce using rule 39
	%eof           reduce using rule 39


State 135

	AppLeft -> let Layout__Binding__ in Exp .           (rule 43)

	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	let            reduce using rule 43
	in             reduce using rule 43
	lambda         reduce using rule 43
	fix            reduce using rule 43
	letrec         reduce using rule 43
	varid          reduce using rule 43
	conid          reduce using rule 43
	op             reduce using rule 43
	opcon          reduce using rule 43
	symid          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'`'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	integer        reduce using rule 43
	char           reduce using rule 43
	double         reduce using rule 43
	string         reduce using rule 43
	%eof           reduce using rule 43


State 136

	LayoutInside__Binding__ -> Binding '}' .            (rule 93)

	in             reduce using rule 93


State 137

	LayoutInside__Binding__ -> Binding ';' . LayoutInside__Binding__    (rule 94)

	varid          shift, and enter state 17
	'('            shift, and enter state 48

	LowIdent       goto state 89
	Var            goto state 90
	Binding        goto state 91
	LayoutInside__Binding__goto state 151

State 138

	Binding -> Var Op . Params '=' Exp                  (rule 50)

	'='            reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 150
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 139

	Binding -> Var '`' . Var '`' Params '=' Exp         (rule 51)

	varid          shift, and enter state 17

	Var            goto state 149

State 140

	Binding -> LowIdent Params . '=' Exp                (rule 49)

	'='            shift, and enter state 148


State 141

	AppLeft -> if Exp then Exp . else Exp               (rule 42)

	else           shift, and enter state 147


State 142

	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 98)

	if             reduce using rule 98
	then           reduce using rule 98
	else           reduce using rule 98
	let            reduce using rule 98
	in             reduce using rule 98
	lambda         reduce using rule 98
	fix            reduce using rule 98
	letrec         reduce using rule 98
	varid          reduce using rule 98
	conid          reduce using rule 98
	op             reduce using rule 98
	opcon          reduce using rule 98
	symid          reduce using rule 98
	'('            reduce using rule 98
	')'            reduce using rule 98
	'['            reduce using rule 98
	']'            reduce using rule 98
	','            reduce using rule 98
	'`'            reduce using rule 98
	'}'            reduce using rule 98
	';'            reduce using rule 98
	integer        reduce using rule 98
	char           reduce using rule 98
	double         reduce using rule 98
	string         reduce using rule 98
	%eof           reduce using rule 98


State 143

	Application -> AppLeft '`' Con '`' . OneOrMany__AppRight__    (rule 32)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 80
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 75
	AppRight       goto state 76
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 146

State 144

	Application -> AppLeft '`' Var '`' . OneOrMany__AppRight__    (rule 31)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 80
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 75
	AppRight       goto state 76
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 145

State 145

	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__ .    (rule 31)

	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	let            reduce using rule 31
	in             reduce using rule 31
	lambda         reduce using rule 31
	fix            reduce using rule 31
	letrec         reduce using rule 31
	varid          reduce using rule 31
	conid          reduce using rule 31
	op             reduce using rule 31
	opcon          reduce using rule 31
	symid          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	','            reduce using rule 31
	'`'            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	integer        reduce using rule 31
	char           reduce using rule 31
	double         reduce using rule 31
	string         reduce using rule 31
	%eof           reduce using rule 31


State 146

	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__ .    (rule 32)

	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	let            reduce using rule 32
	in             reduce using rule 32
	lambda         reduce using rule 32
	fix            reduce using rule 32
	letrec         reduce using rule 32
	varid          reduce using rule 32
	conid          reduce using rule 32
	op             reduce using rule 32
	opcon          reduce using rule 32
	symid          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	','            reduce using rule 32
	'`'            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	integer        reduce using rule 32
	char           reduce using rule 32
	double         reduce using rule 32
	string         reduce using rule 32
	%eof           reduce using rule 32


State 147

	AppLeft -> if Exp then Exp else . Exp               (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 169
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 148

	Binding -> LowIdent Params '=' . Exp                (rule 49)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 168
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 149

	Binding -> Var '`' Var . '`' Params '=' Exp         (rule 51)

	'`'            shift, and enter state 167


State 150

	Binding -> Var Op Params . '=' Exp                  (rule 50)

	'='            shift, and enter state 166


State 151

	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__ .    (rule 94)

	in             reduce using rule 94


State 152

	AppLeft -> letrec LowIdent Params '=' Exp . in Exp    (rule 44)

	in             shift, and enter state 165


State 153

	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__ .    (rule 76)

	')'            reduce using rule 76


State 154

	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__ .    (rule 78)

	')'            reduce using rule 78


State 155

	Data -> data UpIdent Params Constructors .          (rule 7)

	'}'            reduce using rule 7
	';'            reduce using rule 7


State 156

	Constructors -> '=' . Constr NoneOrMany__ConstrOther__    (rule 9)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 162
	LowIdent       goto state 26
	UpIdent        goto state 163
	Var            goto state 4
	Con            goto state 28
	Type           goto state 164
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 157

	GlobalBinding -> Var Op Params '=' . Exp            (rule 53)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 161
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 158

	GlobalBinding -> Var '`' Var '`' . Params '=' Exp    (rule 54)

	'='            reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 160
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 159

	GlobalBinding -> LowIdent Params '=' Exp .          (rule 52)

	'}'            reduce using rule 52
	';'            reduce using rule 52


State 160

	GlobalBinding -> Var '`' Var '`' Params . '=' Exp    (rule 54)

	'='            shift, and enter state 181


State 161

	GlobalBinding -> Var Op Params '=' Exp .            (rule 53)

	'}'            reduce using rule 53
	';'            reduce using rule 53


State 162

	Constructors -> '=' Constr . NoneOrMany__ConstrOther__    (rule 9)

	'|'            shift, and enter state 180
	'}'            reduce using rule 81
	';'            reduce using rule 81

	ConstrOther    goto state 178
	NoneOrMany__ConstrOther__goto state 179

State 163

	Constr -> UpIdent . NoneOrMany__TyAppRight__        (rule 12)
	TyAppLeft -> UpIdent .                              (rule 69)

	'->'           reduce using rule 69
	'|'            reduce using rule 83
	varid          shift, and enter state 17
			(reduce using rule 69)

	conid          shift, and enter state 18
			(reduce using rule 69)

	opcon          reduce using rule 69
	'('            shift, and enter state 34
			(reduce using rule 69)

	'`'            reduce using rule 69
	'}'            reduce using rule 83
	';'            reduce using rule 83
	unit           shift, and enter state 35
			(reduce using rule 69)


	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 55
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 56
	TyAppRight     goto state 106
	NoneOrMany__TyAppRight__goto state 177

State 164

	Constr -> Type . ConName OneOrMany__Type__          (rule 13)
	TyArr -> Type . '->' Type                           (rule 65)

	'->'           shift, and enter state 59
	opcon          shift, and enter state 175
	'`'            shift, and enter state 176

	ConName        goto state 173
	OpCon          goto state 174

State 165

	AppLeft -> letrec LowIdent Params '=' Exp in . Exp    (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 172
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 166

	Binding -> Var Op Params '=' . Exp                  (rule 50)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 171
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 167

	Binding -> Var '`' Var '`' . Params '=' Exp         (rule 51)

	'='            reduce using rule 85
	varid          shift, and enter state 17

	Params         goto state 170
	Var            goto state 69
	NoneOrMany__Var__goto state 70

State 168

	Binding -> LowIdent Params '=' Exp .                (rule 49)

	'}'            reduce using rule 49
	';'            reduce using rule 49


State 169

	AppLeft -> if Exp then Exp else Exp .               (rule 42)

	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	let            reduce using rule 42
	in             reduce using rule 42
	lambda         reduce using rule 42
	fix            reduce using rule 42
	letrec         reduce using rule 42
	varid          reduce using rule 42
	conid          reduce using rule 42
	op             reduce using rule 42
	opcon          reduce using rule 42
	symid          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'`'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	integer        reduce using rule 42
	char           reduce using rule 42
	double         reduce using rule 42
	string         reduce using rule 42
	%eof           reduce using rule 42


State 170

	Binding -> Var '`' Var '`' Params . '=' Exp         (rule 51)

	'='            shift, and enter state 188


State 171

	Binding -> Var Op Params '=' Exp .                  (rule 50)

	'}'            reduce using rule 50
	';'            reduce using rule 50


State 172

	AppLeft -> letrec LowIdent Params '=' Exp in Exp .    (rule 44)

	if             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	let            reduce using rule 44
	in             reduce using rule 44
	lambda         reduce using rule 44
	fix            reduce using rule 44
	letrec         reduce using rule 44
	varid          reduce using rule 44
	conid          reduce using rule 44
	op             reduce using rule 44
	opcon          reduce using rule 44
	symid          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	'`'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	integer        reduce using rule 44
	char           reduce using rule 44
	double         reduce using rule 44
	string         reduce using rule 44
	%eof           reduce using rule 44


State 173

	Constr -> Type ConName . OneOrMany__Type__          (rule 13)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 186
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33
	OneOrMany__Type__goto state 187

State 174

	ConName -> OpCon .                                  (rule 10)

	varid          reduce using rule 10
	conid          reduce using rule 10
	'('            reduce using rule 10
	unit           reduce using rule 10


State 175

	OpCon -> opcon .                                    (rule 24)

	varid          reduce using rule 24
	conid          reduce using rule 24
	'('            reduce using rule 24
	unit           reduce using rule 24


State 176

	ConName -> '`' . Con '`'                            (rule 11)

	conid          shift, and enter state 18

	Con            goto state 185

State 177

	Constr -> UpIdent NoneOrMany__TyAppRight__ .        (rule 12)

	'|'            reduce using rule 12
	'}'            reduce using rule 12
	';'            reduce using rule 12


State 178

	NoneOrMany__ConstrOther__ -> ConstrOther . NoneOrMany__ConstrOther__    (rule 82)

	'|'            shift, and enter state 180
	'}'            reduce using rule 81
	';'            reduce using rule 81

	ConstrOther    goto state 178
	NoneOrMany__ConstrOther__goto state 184

State 179

	Constructors -> '=' Constr NoneOrMany__ConstrOther__ .    (rule 9)

	'}'            reduce using rule 9
	';'            reduce using rule 9


State 180

	ConstrOther -> '|' . Constr                         (rule 14)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 183
	LowIdent       goto state 26
	UpIdent        goto state 163
	Var            goto state 4
	Con            goto state 28
	Type           goto state 164
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 181

	GlobalBinding -> Var '`' Var '`' Params '=' . Exp    (rule 54)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 182
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 182

	GlobalBinding -> Var '`' Var '`' Params '=' Exp .    (rule 54)

	'}'            reduce using rule 54
	';'            reduce using rule 54


State 183

	ConstrOther -> '|' Constr .                         (rule 14)

	'|'            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14


State 184

	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__ .    (rule 82)

	'}'            reduce using rule 82
	';'            reduce using rule 82


State 185

	ConName -> '`' Con . '`'                            (rule 11)

	'`'            shift, and enter state 192


State 186

	TyArr -> Type . '->' Type                           (rule 65)
	OneOrMany__Type__ -> Type . NoneOrMany__Type__      (rule 92)

	'->'           shift, and enter state 59
	'|'            reduce using rule 99
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	'}'            reduce using rule 99
	';'            reduce using rule 99
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 190
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33
	NoneOrMany__Type__goto state 191

State 187

	Constr -> Type ConName OneOrMany__Type__ .          (rule 13)

	'|'            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13


State 188

	Binding -> Var '`' Var '`' Params '=' . Exp         (rule 51)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 189
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 189

	Binding -> Var '`' Var '`' Params '=' Exp .         (rule 51)

	'}'            reduce using rule 51
	';'            reduce using rule 51


State 190

	TyArr -> Type . '->' Type                           (rule 65)
	NoneOrMany__Type__ -> Type . NoneOrMany__Type__     (rule 100)

	'->'           shift, and enter state 59
	'|'            reduce using rule 99
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	'}'            reduce using rule 99
	';'            reduce using rule 99
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 190
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33
	NoneOrMany__Type__goto state 193

State 191

	OneOrMany__Type__ -> Type NoneOrMany__Type__ .      (rule 92)

	'|'            reduce using rule 92
	'}'            reduce using rule 92
	';'            reduce using rule 92


State 192

	ConName -> '`' Con '`' .                            (rule 11)

	varid          reduce using rule 11
	conid          reduce using rule 11
	'('            reduce using rule 11
	unit           reduce using rule 11


State 193

	NoneOrMany__Type__ -> Type NoneOrMany__Type__ .     (rule 100)

	'|'            reduce using rule 100
	'}'            reduce using rule 100
	';'            reduce using rule 100


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 101
Number of terminals: 41
Number of non-terminals: 49
Number of states: 194
