-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Compiler/Parser/Parser.y
-----------------------------------------------------------------------------

state 8 contains 17 shift/reduce conflicts.
state 33 contains 4 shift/reduce conflicts.
state 43 contains 1 shift/reduce conflicts.
state 44 contains 1 shift/reduce conflicts.
state 48 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 54 contains 1 shift/reduce conflicts.
state 55 contains 1 shift/reduce conflicts.
state 68 contains 14 shift/reduce conflicts.
state 77 contains 14 shift/reduce conflicts.
state 99 contains 1 shift/reduce conflicts.
state 100 contains 4 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 114 contains 1 reduce/reduce conflicts.
state 204 contains 4 shift/reduce conflicts.

terminal match is unused
terminal with is unused
terminal '_' is unused
terminal the is unused
terminal claim is unused
terminal define is unused
terminal elim is unused
terminal assume is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parserMain -> Program                       (0)
	%start_parserType -> Type                          (1)
	Program -> Exp                                     (2)
	Program -> Module                                  (3)
	Module -> module UpIdent where Layout__Declaration__   (4)
	Declaration -> Fun                                 (5)
	Declaration -> Data                                (6)
	Declaration -> TypeSynonym                         (7)
	Data -> data UpIdent Params Constructors           (8)
	Constructors ->                                    (9)
	Constructors -> '=' Constr NoneOrMany__ConstrOther__   (10)
	ConName -> OpCon                                   (11)
	ConName -> '`' Con '`'                             (12)
	Constr -> UpIdent NoneOrMany__TyAppLeft__          (13)
	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__   (14)
	ConstrOther -> '|' Constr                          (15)
	TypeSynonym -> type Con NoneOrMany__Var__ '=' Type   (16)
	Params -> NoneOrMany__Var__                        (17)
	LowIdent -> Var                                    (18)
	LowIdent -> '(' Op ')'                             (19)
	UpIdent -> Con                                     (20)
	UpIdent -> '(' opcon ')'                           (21)
	UpIdent -> unit                                    (22)
	Var -> varid                                       (23)
	Con -> conid                                       (24)
	Op -> op                                           (25)
	OpCon -> opcon                                     (26)
	Oper -> op                                         (27)
	Oper -> opcon                                      (28)
	Exp -> AppLeft                                     (29)
	Exp -> Application                                 (30)
	Exp -> '(' Exp ')'                                 (31)
	Application -> AppLeft OneOrMany__AppRight__       (32)
	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__   (33)
	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__   (34)
	Application -> AppLeft Oper OneOrMany__AppRight__   (35)
	AppLeft -> LowIdent                                (36)
	AppLeft -> Con                                     (37)
	AppLeft -> '(' opcon ')'                           (38)
	AppLeft -> symid                                   (39)
	AppLeft -> Lit                                     (40)
	AppLeft -> lambda Params '->' Exp                  (41)
	AppLeft -> '(' AppLeft ')'                         (42)
	AppLeft -> fix Exp                                 (43)
	AppLeft -> if Exp then Exp else Exp                (44)
	AppLeft -> let Layout__Binding__ in Exp            (45)
	AppLeft -> letrec LowIdent Params '=' Exp in Exp   (46)
	AppLeft -> '(' Exp CommaSeparated__Exp__ ')'       (47)
	AppLeft -> '[' NoneOrManySeparated__Exp__ ']'      (48)
	AppLeft -> '(' Application ')'                     (49)
	AppLeft -> '(' Exp '::' Type ')'                   (50)
	AppRight -> AppLeft                                (51)
	Binding -> LowIdent Params '=' Exp                 (52)
	Binding -> Var Op Params '=' Exp                   (53)
	Binding -> Var '`' Var '`' Params '=' Exp          (54)
	Binding -> rec LowIdent Params '=' Exp             (55)
	Binding -> rec Var Op Params '=' Exp               (56)
	Binding -> rec Var '`' Var '`' Params '=' Exp      (57)
	GlobalBinding -> LowIdent Params '=' Exp           (58)
	GlobalBinding -> Var Op Params '=' Exp             (59)
	GlobalBinding -> Var '`' Var '`' Params '=' Exp    (60)
	Fun -> GlobalBinding                               (61)
	Fun -> Annotation ';' GlobalBinding                (62)
	Lit -> Integer                                     (63)
	Lit -> Double                                      (64)
	Lit -> char                                        (65)
	Lit -> string                                      (66)
	Integer -> integer                                 (67)
	Double -> double                                   (68)
	Annotation -> LowIdent '::' Type                   (69)
	Type -> TyAppLeft                                  (70)
	Type -> TyApp                                      (71)
	Type -> '(' Type ')'                               (72)
	TyArr -> Type '->' Type                            (73)
	TyTuple -> '(' Type CommaSeparated__Type__ ')'     (74)
	TyApp -> TyAppLeft OneOrMany__TyAppLeft__          (75)
	TyAppLeft -> LowIdent                              (76)
	TyAppLeft -> UpIdent                               (77)
	TyAppLeft -> TyArr                                 (78)
	TyAppLeft -> TyTuple                               (79)
	TyAppLeft -> '(' TyApp ')'                         (80)
	TyAppLeft -> '(' TyAppLeft ')'                     (81)
	CommaSeparated__Exp__ -> ',' Exp                   (82)
	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__   (83)
	CommaSeparated__Type__ -> ',' Type                 (84)
	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__   (85)
	Layout__Binding__ -> '{' LayoutInside__Binding__   (86)
	Layout__Declaration__ -> '{' LayoutInside__Declaration__   (87)
	NoneOrMany__ConstrOther__ ->                       (88)
	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__   (89)
	NoneOrMany__TyAppLeft__ ->                         (90)
	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (91)
	NoneOrMany__Var__ ->                               (92)
	NoneOrMany__Var__ -> Var NoneOrMany__Var__         (93)
	NoneOrManySeparated__Exp__ ->                      (94)
	NoneOrManySeparated__Exp__ -> Exp                  (95)
	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__   (96)
	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (97)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__   (98)
	LayoutInside__Binding__ -> Binding '}'             (99)
	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__   (100)
	LayoutInside__Declaration__ -> Declaration '}'     (101)
	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__   (102)
	NoneOrMany__AppRight__ ->                          (103)
	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__   (104)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	match          { TokMatch }
	with           { TokWith }
	data           { TokData }
	if             { TokIf }
	then           { TokThen }
	else           { TokElse }
	let            { TokLet }
	in             { TokIn }
	type           { TokType }
	'_'            { TokHole }
	the            { TokThe }
	claim          { TokClaim }
	define         { TokDefine }
	lambda         { TokLambda }
	fix            { TokFix }
	letrec         { TokLetrec }
	'->'           { TokOperator "->" }
	'='            { TokOperator "=" }
	'|'            { TokOperator "|" }
	'::'           { TokHasType }
	varid          { TokVarLower $$ }
	conid          { TokVarUpper $$ }
	op             { TokOperator $$ }
	opcon          { TokOpConstr $$ }
	symid          { TokNativeSym $$ }
	elim           { TokEliminator $$ }
	'('            { TokLeftParen }
	')'            { TokRightParen }
	'['            { TokLeftBracket }
	']'            { TokRightBracket }
	','            { TokComma }
	'`'            { TokBackTick }
	'{'            { TokLeftBrace }
	'}'            { TokRightBrace }
	';'            { TokSemicolon }
	unit           { TokVarUpper "()" }
	integer        { TokInt $$ }
	char           { TokChar $$ }
	double         { TokDouble $$ }
	string         { TokString $$ }
	assume         { TokAssume }
	rec            { TokRec }
	module         { TokModule }
	where          { TokWhere }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parserMain rule  0
	%start_parserType rule  1
	Program         rules 2, 3
	Module          rule  4
	Declaration     rules 5, 6, 7
	Data            rule  8
	Constructors    rules 9, 10
	ConName         rules 11, 12
	Constr          rules 13, 14
	ConstrOther     rule  15
	TypeSynonym     rule  16
	Params          rule  17
	LowIdent        rules 18, 19
	UpIdent         rules 20, 21, 22
	Var             rule  23
	Con             rule  24
	Op              rule  25
	OpCon           rule  26
	Oper            rules 27, 28
	Exp             rules 29, 30, 31
	Application     rules 32, 33, 34, 35
	AppLeft         rules 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50
	AppRight        rule  51
	Binding         rules 52, 53, 54, 55, 56, 57
	GlobalBinding   rules 58, 59, 60
	Fun             rules 61, 62
	Lit             rules 63, 64, 65, 66
	Integer         rule  67
	Double          rule  68
	Annotation      rule  69
	Type            rules 70, 71, 72
	TyArr           rule  73
	TyTuple         rule  74
	TyApp           rule  75
	TyAppLeft       rules 76, 77, 78, 79, 80, 81
	CommaSeparated__Exp__ rules 82, 83
	CommaSeparated__Type__ rules 84, 85
	Layout__Binding__ rule  86
	Layout__Declaration__ rule  87
	NoneOrMany__ConstrOther__ rules 88, 89
	NoneOrMany__TyAppLeft__ rules 90, 91
	NoneOrMany__Var__ rules 92, 93
	NoneOrManySeparated__Exp__ rules 94, 95, 96
	OneOrMany__AppRight__ rule  97
	OneOrMany__TyAppLeft__ rule  98
	LayoutInside__Binding__ rules 99, 100
	LayoutInside__Declaration__ rules 101, 102
	NoneOrMany__AppRight__ rules 103, 104

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parserMain -> . Program                      (rule 0)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25
	module         shift, and enter state 38

	Program        goto state 36
	Module         goto state 37
	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 1

	%start_parserType -> . Type                         (rule 1)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 29
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 2

	Program -> . Exp                                    (rule 2)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 6
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 3

	AppLeft -> LowIdent .                               (rule 36)

	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	let            reduce using rule 36
	in             reduce using rule 36
	lambda         reduce using rule 36
	fix            reduce using rule 36
	letrec         reduce using rule 36
	'::'           reduce using rule 36
	varid          reduce using rule 36
	conid          reduce using rule 36
	op             reduce using rule 36
	opcon          reduce using rule 36
	symid          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	','            reduce using rule 36
	'`'            reduce using rule 36
	'}'            reduce using rule 36
	';'            reduce using rule 36
	integer        reduce using rule 36
	char           reduce using rule 36
	double         reduce using rule 36
	string         reduce using rule 36
	%eof           reduce using rule 36


State 4

	LowIdent -> Var .                                   (rule 18)

	if             reduce using rule 18
	then           reduce using rule 18
	else           reduce using rule 18
	let            reduce using rule 18
	in             reduce using rule 18
	lambda         reduce using rule 18
	fix            reduce using rule 18
	letrec         reduce using rule 18
	'->'           reduce using rule 18
	'='            reduce using rule 18
	'|'            reduce using rule 18
	'::'           reduce using rule 18
	varid          reduce using rule 18
	conid          reduce using rule 18
	op             reduce using rule 18
	opcon          reduce using rule 18
	symid          reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'['            reduce using rule 18
	']'            reduce using rule 18
	','            reduce using rule 18
	'`'            reduce using rule 18
	'}'            reduce using rule 18
	';'            reduce using rule 18
	unit           reduce using rule 18
	integer        reduce using rule 18
	char           reduce using rule 18
	double         reduce using rule 18
	string         reduce using rule 18
	%eof           reduce using rule 18


State 5

	AppLeft -> Con .                                    (rule 37)

	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	let            reduce using rule 37
	in             reduce using rule 37
	lambda         reduce using rule 37
	fix            reduce using rule 37
	letrec         reduce using rule 37
	'::'           reduce using rule 37
	varid          reduce using rule 37
	conid          reduce using rule 37
	op             reduce using rule 37
	opcon          reduce using rule 37
	symid          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37
	'`'            reduce using rule 37
	'}'            reduce using rule 37
	';'            reduce using rule 37
	integer        reduce using rule 37
	char           reduce using rule 37
	double         reduce using rule 37
	string         reduce using rule 37
	%eof           reduce using rule 37


State 6

	Program -> Exp .                                    (rule 2)

	%eof           reduce using rule 2


State 7

	Exp -> Application .                                (rule 30)

	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	let            reduce using rule 30
	in             reduce using rule 30
	lambda         reduce using rule 30
	fix            reduce using rule 30
	letrec         reduce using rule 30
	'::'           reduce using rule 30
	varid          reduce using rule 30
	conid          reduce using rule 30
	op             reduce using rule 30
	opcon          reduce using rule 30
	symid          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	'`'            reduce using rule 30
	'}'            reduce using rule 30
	';'            reduce using rule 30
	integer        reduce using rule 30
	char           reduce using rule 30
	double         reduce using rule 30
	string         reduce using rule 30
	%eof           reduce using rule 30


State 8

	Exp -> AppLeft .                                    (rule 29)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 32)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 33)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 34)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 35)

	if             shift, and enter state 12
			(reduce using rule 29)

	then           reduce using rule 29
	else           reduce using rule 29
	let            shift, and enter state 13
			(reduce using rule 29)

	in             reduce using rule 29
	lambda         shift, and enter state 14
			(reduce using rule 29)

	fix            shift, and enter state 15
			(reduce using rule 29)

	letrec         shift, and enter state 16
			(reduce using rule 29)

	'::'           reduce using rule 29
	varid          shift, and enter state 17
			(reduce using rule 29)

	conid          shift, and enter state 18
			(reduce using rule 29)

	op             shift, and enter state 70
			(reduce using rule 29)

	opcon          shift, and enter state 71
			(reduce using rule 29)

	symid          shift, and enter state 19
			(reduce using rule 29)

	'('            shift, and enter state 72
			(reduce using rule 29)

	')'            reduce using rule 29
	'['            shift, and enter state 21
			(reduce using rule 29)

	']'            reduce using rule 29
	','            reduce using rule 29
	'`'            shift, and enter state 73
			(reduce using rule 29)

	'}'            reduce using rule 29
	';'            reduce using rule 29
	integer        shift, and enter state 22
			(reduce using rule 29)

	char           shift, and enter state 23
			(reduce using rule 29)

	double         shift, and enter state 24
			(reduce using rule 29)

	string         shift, and enter state 25
			(reduce using rule 29)

	%eof           reduce using rule 29

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 66
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 69

State 9

	AppLeft -> Lit .                                    (rule 40)

	if             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	let            reduce using rule 40
	in             reduce using rule 40
	lambda         reduce using rule 40
	fix            reduce using rule 40
	letrec         reduce using rule 40
	'::'           reduce using rule 40
	varid          reduce using rule 40
	conid          reduce using rule 40
	op             reduce using rule 40
	opcon          reduce using rule 40
	symid          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	'`'            reduce using rule 40
	'}'            reduce using rule 40
	';'            reduce using rule 40
	integer        reduce using rule 40
	char           reduce using rule 40
	double         reduce using rule 40
	string         reduce using rule 40
	%eof           reduce using rule 40


State 10

	Lit -> Integer .                                    (rule 63)

	if             reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	let            reduce using rule 63
	in             reduce using rule 63
	lambda         reduce using rule 63
	fix            reduce using rule 63
	letrec         reduce using rule 63
	'::'           reduce using rule 63
	varid          reduce using rule 63
	conid          reduce using rule 63
	op             reduce using rule 63
	opcon          reduce using rule 63
	symid          reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	','            reduce using rule 63
	'`'            reduce using rule 63
	'}'            reduce using rule 63
	';'            reduce using rule 63
	integer        reduce using rule 63
	char           reduce using rule 63
	double         reduce using rule 63
	string         reduce using rule 63
	%eof           reduce using rule 63


State 11

	Lit -> Double .                                     (rule 64)

	if             reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	let            reduce using rule 64
	in             reduce using rule 64
	lambda         reduce using rule 64
	fix            reduce using rule 64
	letrec         reduce using rule 64
	'::'           reduce using rule 64
	varid          reduce using rule 64
	conid          reduce using rule 64
	op             reduce using rule 64
	opcon          reduce using rule 64
	symid          reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	','            reduce using rule 64
	'`'            reduce using rule 64
	'}'            reduce using rule 64
	';'            reduce using rule 64
	integer        reduce using rule 64
	char           reduce using rule 64
	double         reduce using rule 64
	string         reduce using rule 64
	%eof           reduce using rule 64


State 12

	AppLeft -> if . Exp then Exp else Exp               (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 65
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 13

	AppLeft -> let . Layout__Binding__ in Exp           (rule 45)

	'{'            shift, and enter state 64

	Layout__Binding__goto state 63

State 14

	AppLeft -> lambda . Params '->' Exp                 (rule 41)

	'->'           reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 60
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 15

	AppLeft -> fix . Exp                                (rule 43)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 59
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 16

	AppLeft -> letrec . LowIdent Params '=' Exp in Exp    (rule 46)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 57
	Var            goto state 4

State 17

	Var -> varid .                                      (rule 23)

	if             reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	let            reduce using rule 23
	in             reduce using rule 23
	lambda         reduce using rule 23
	fix            reduce using rule 23
	letrec         reduce using rule 23
	'->'           reduce using rule 23
	'='            reduce using rule 23
	'|'            reduce using rule 23
	'::'           reduce using rule 23
	varid          reduce using rule 23
	conid          reduce using rule 23
	op             reduce using rule 23
	opcon          reduce using rule 23
	symid          reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	','            reduce using rule 23
	'`'            reduce using rule 23
	'}'            reduce using rule 23
	';'            reduce using rule 23
	unit           reduce using rule 23
	integer        reduce using rule 23
	char           reduce using rule 23
	double         reduce using rule 23
	string         reduce using rule 23
	%eof           reduce using rule 23


State 18

	Con -> conid .                                      (rule 24)

	if             reduce using rule 24
	then           reduce using rule 24
	else           reduce using rule 24
	let            reduce using rule 24
	in             reduce using rule 24
	lambda         reduce using rule 24
	fix            reduce using rule 24
	letrec         reduce using rule 24
	'->'           reduce using rule 24
	'='            reduce using rule 24
	'|'            reduce using rule 24
	'::'           reduce using rule 24
	varid          reduce using rule 24
	conid          reduce using rule 24
	op             reduce using rule 24
	opcon          reduce using rule 24
	symid          reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	','            reduce using rule 24
	'`'            reduce using rule 24
	'}'            reduce using rule 24
	';'            reduce using rule 24
	unit           reduce using rule 24
	integer        reduce using rule 24
	char           reduce using rule 24
	double         reduce using rule 24
	string         reduce using rule 24
	where          reduce using rule 24
	%eof           reduce using rule 24


State 19

	AppLeft -> symid .                                  (rule 39)

	if             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	let            reduce using rule 39
	in             reduce using rule 39
	lambda         reduce using rule 39
	fix            reduce using rule 39
	letrec         reduce using rule 39
	'::'           reduce using rule 39
	varid          reduce using rule 39
	conid          reduce using rule 39
	op             reduce using rule 39
	opcon          reduce using rule 39
	symid          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	'`'            reduce using rule 39
	'}'            reduce using rule 39
	';'            reduce using rule 39
	integer        reduce using rule 39
	char           reduce using rule 39
	double         reduce using rule 39
	string         reduce using rule 39
	%eof           reduce using rule 39


State 20

	LowIdent -> '(' . Op ')'                            (rule 19)
	Exp -> '(' . Exp ')'                                (rule 31)
	AppLeft -> '(' . opcon ')'                          (rule 38)
	AppLeft -> '(' . AppLeft ')'                        (rule 42)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 47)
	AppLeft -> '(' . Application ')'                    (rule 49)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 50)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 56
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 41
	Exp            goto state 53
	Application    goto state 54
	AppLeft        goto state 55
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 21

	AppLeft -> '[' . NoneOrManySeparated__Exp__ ']'     (rule 48)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 94
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 51
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 52

State 22

	Integer -> integer .                                (rule 67)

	if             reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	let            reduce using rule 67
	in             reduce using rule 67
	lambda         reduce using rule 67
	fix            reduce using rule 67
	letrec         reduce using rule 67
	'::'           reduce using rule 67
	varid          reduce using rule 67
	conid          reduce using rule 67
	op             reduce using rule 67
	opcon          reduce using rule 67
	symid          reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	','            reduce using rule 67
	'`'            reduce using rule 67
	'}'            reduce using rule 67
	';'            reduce using rule 67
	integer        reduce using rule 67
	char           reduce using rule 67
	double         reduce using rule 67
	string         reduce using rule 67
	%eof           reduce using rule 67


State 23

	Lit -> char .                                       (rule 65)

	if             reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	let            reduce using rule 65
	in             reduce using rule 65
	lambda         reduce using rule 65
	fix            reduce using rule 65
	letrec         reduce using rule 65
	'::'           reduce using rule 65
	varid          reduce using rule 65
	conid          reduce using rule 65
	op             reduce using rule 65
	opcon          reduce using rule 65
	symid          reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	','            reduce using rule 65
	'`'            reduce using rule 65
	'}'            reduce using rule 65
	';'            reduce using rule 65
	integer        reduce using rule 65
	char           reduce using rule 65
	double         reduce using rule 65
	string         reduce using rule 65
	%eof           reduce using rule 65


State 24

	Double -> double .                                  (rule 68)

	if             reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	let            reduce using rule 68
	in             reduce using rule 68
	lambda         reduce using rule 68
	fix            reduce using rule 68
	letrec         reduce using rule 68
	'::'           reduce using rule 68
	varid          reduce using rule 68
	conid          reduce using rule 68
	op             reduce using rule 68
	opcon          reduce using rule 68
	symid          reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	','            reduce using rule 68
	'`'            reduce using rule 68
	'}'            reduce using rule 68
	';'            reduce using rule 68
	integer        reduce using rule 68
	char           reduce using rule 68
	double         reduce using rule 68
	string         reduce using rule 68
	%eof           reduce using rule 68


State 25

	Lit -> string .                                     (rule 66)

	if             reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	let            reduce using rule 66
	in             reduce using rule 66
	lambda         reduce using rule 66
	fix            reduce using rule 66
	letrec         reduce using rule 66
	'::'           reduce using rule 66
	varid          reduce using rule 66
	conid          reduce using rule 66
	op             reduce using rule 66
	opcon          reduce using rule 66
	symid          reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	','            reduce using rule 66
	'`'            reduce using rule 66
	'}'            reduce using rule 66
	';'            reduce using rule 66
	integer        reduce using rule 66
	char           reduce using rule 66
	double         reduce using rule 66
	string         reduce using rule 66
	%eof           reduce using rule 66


State 26

	TyAppLeft -> LowIdent .                             (rule 76)

	'->'           reduce using rule 76
	'|'            reduce using rule 76
	varid          reduce using rule 76
	conid          reduce using rule 76
	opcon          reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	','            reduce using rule 76
	'`'            reduce using rule 76
	'}'            reduce using rule 76
	';'            reduce using rule 76
	unit           reduce using rule 76
	%eof           reduce using rule 76


State 27

	TyAppLeft -> UpIdent .                              (rule 77)

	'->'           reduce using rule 77
	'|'            reduce using rule 77
	varid          reduce using rule 77
	conid          reduce using rule 77
	opcon          reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	','            reduce using rule 77
	'`'            reduce using rule 77
	'}'            reduce using rule 77
	';'            reduce using rule 77
	unit           reduce using rule 77
	%eof           reduce using rule 77


State 28

	UpIdent -> Con .                                    (rule 20)

	'->'           reduce using rule 20
	'='            reduce using rule 20
	'|'            reduce using rule 20
	varid          reduce using rule 20
	conid          reduce using rule 20
	opcon          reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	'`'            reduce using rule 20
	'}'            reduce using rule 20
	';'            reduce using rule 20
	unit           reduce using rule 20
	where          reduce using rule 20
	%eof           reduce using rule 20


State 29

	%start_parserType -> Type .                         (rule 1)
	TyArr -> Type . '->' Type                           (rule 73)

	'->'           shift, and enter state 50
	%eof           accept


State 30

	TyAppLeft -> TyArr .                                (rule 78)

	'->'           reduce using rule 78
	'|'            reduce using rule 78
	varid          reduce using rule 78
	conid          reduce using rule 78
	opcon          reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	','            reduce using rule 78
	'`'            reduce using rule 78
	'}'            reduce using rule 78
	';'            reduce using rule 78
	unit           reduce using rule 78
	%eof           reduce using rule 78


State 31

	TyAppLeft -> TyTuple .                              (rule 79)

	'->'           reduce using rule 79
	'|'            reduce using rule 79
	varid          reduce using rule 79
	conid          reduce using rule 79
	opcon          reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	'`'            reduce using rule 79
	'}'            reduce using rule 79
	';'            reduce using rule 79
	unit           reduce using rule 79
	%eof           reduce using rule 79


State 32

	Type -> TyApp .                                     (rule 71)

	'->'           reduce using rule 71
	'|'            reduce using rule 71
	varid          reduce using rule 71
	conid          reduce using rule 71
	opcon          reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	'`'            reduce using rule 71
	'}'            reduce using rule 71
	';'            reduce using rule 71
	unit           reduce using rule 71
	%eof           reduce using rule 71


State 33

	Type -> TyAppLeft .                                 (rule 70)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 75)

	'->'           reduce using rule 70
	'|'            reduce using rule 70
	varid          shift, and enter state 17
			(reduce using rule 70)

	conid          shift, and enter state 18
			(reduce using rule 70)

	opcon          reduce using rule 70
	'('            shift, and enter state 34
			(reduce using rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	'`'            reduce using rule 70
	'}'            reduce using rule 70
	';'            reduce using rule 70
	unit           shift, and enter state 35
			(reduce using rule 70)

	%eof           reduce using rule 70

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 34

	LowIdent -> '(' . Op ')'                            (rule 19)
	UpIdent -> '(' . opcon ')'                          (rule 21)
	Type -> '(' . Type ')'                              (rule 72)
	TyTuple -> '(' . Type CommaSeparated__Type__ ')'    (rule 74)
	TyAppLeft -> '(' . TyApp ')'                        (rule 80)
	TyAppLeft -> '(' . TyAppLeft ')'                    (rule 81)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 46
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Op             goto state 41
	Type           goto state 42
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 43
	TyAppLeft      goto state 44

State 35

	UpIdent -> unit .                                   (rule 22)

	'->'           reduce using rule 22
	'='            reduce using rule 22
	'|'            reduce using rule 22
	varid          reduce using rule 22
	conid          reduce using rule 22
	opcon          reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22
	'`'            reduce using rule 22
	'}'            reduce using rule 22
	';'            reduce using rule 22
	unit           reduce using rule 22
	where          reduce using rule 22
	%eof           reduce using rule 22


State 36

	%start_parserMain -> Program .                      (rule 0)

	%eof           accept


State 37

	Program -> Module .                                 (rule 3)

	%eof           reduce using rule 3


State 38

	Module -> module . UpIdent where Layout__Declaration__    (rule 4)

	conid          shift, and enter state 18
	'('            shift, and enter state 40
	unit           shift, and enter state 35

	UpIdent        goto state 39
	Con            goto state 28

State 39

	Module -> module UpIdent . where Layout__Declaration__    (rule 4)

	where          shift, and enter state 109


State 40

	UpIdent -> '(' . opcon ')'                          (rule 21)

	opcon          shift, and enter state 46


State 41

	LowIdent -> '(' Op . ')'                            (rule 19)

	')'            shift, and enter state 108


State 42

	Type -> '(' Type . ')'                              (rule 72)
	TyArr -> Type . '->' Type                           (rule 73)
	TyTuple -> '(' Type . CommaSeparated__Type__ ')'    (rule 74)

	'->'           shift, and enter state 50
	')'            shift, and enter state 106
	','            shift, and enter state 107

	CommaSeparated__Type__goto state 105

State 43

	Type -> TyApp .                                     (rule 71)
	TyAppLeft -> '(' TyApp . ')'                        (rule 80)

	'->'           reduce using rule 71
	')'            shift, and enter state 104
			(reduce using rule 71)

	','            reduce using rule 71


State 44

	Type -> TyAppLeft .                                 (rule 70)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 75)
	TyAppLeft -> '(' TyAppLeft . ')'                    (rule 81)

	'->'           reduce using rule 70
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	')'            shift, and enter state 103
			(reduce using rule 70)

	','            reduce using rule 70
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 45

	Op -> op .                                          (rule 25)

	'='            reduce using rule 25
	varid          reduce using rule 25
	')'            reduce using rule 25


State 46

	UpIdent -> '(' opcon . ')'                          (rule 21)

	')'            shift, and enter state 102


State 47

	TyArr -> Type . '->' Type                           (rule 73)

	'->'           shift, and enter state 50


State 48

	Type -> TyAppLeft .                                 (rule 70)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 75)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 98)

	'->'           reduce using rule 90
			(reduce using rule 70)

	'|'            reduce using rule 90
	varid          shift, and enter state 17
			(reduce using rule 90)

	conid          shift, and enter state 18
			(reduce using rule 90)

	opcon          reduce using rule 90
	'('            shift, and enter state 34
			(reduce using rule 90)

	')'            reduce using rule 90
	','            reduce using rule 90
	'`'            reduce using rule 90
	'}'            reduce using rule 90
	';'            reduce using rule 90
	unit           shift, and enter state 35
			(reduce using rule 90)

	%eof           reduce using rule 90

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 101
	OneOrMany__TyAppLeft__goto state 49

State 49

	TyApp -> TyAppLeft OneOrMany__TyAppLeft__ .         (rule 75)

	'->'           reduce using rule 75
	'|'            reduce using rule 75
	varid          reduce using rule 75
	conid          reduce using rule 75
	opcon          reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	','            reduce using rule 75
	'`'            reduce using rule 75
	'}'            reduce using rule 75
	';'            reduce using rule 75
	unit           reduce using rule 75
	%eof           reduce using rule 75


State 50

	TyArr -> Type '->' . Type                           (rule 73)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 99
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 51

	NoneOrManySeparated__Exp__ -> Exp .                 (rule 95)
	NoneOrManySeparated__Exp__ -> Exp . ',' NoneOrManySeparated__Exp__    (rule 96)

	']'            reduce using rule 95
	','            shift, and enter state 98


State 52

	AppLeft -> '[' NoneOrManySeparated__Exp__ . ']'     (rule 48)

	']'            shift, and enter state 97


State 53

	Exp -> '(' Exp . ')'                                (rule 31)
	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 47)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 50)

	'::'           shift, and enter state 94
	')'            shift, and enter state 95
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 93

State 54

	Exp -> Application .                                (rule 30)
	AppLeft -> '(' Application . ')'                    (rule 49)

	'::'           reduce using rule 30
	')'            shift, and enter state 92
			(reduce using rule 30)

	','            reduce using rule 30


State 55

	Exp -> AppLeft .                                    (rule 29)
	Application -> AppLeft . OneOrMany__AppRight__      (rule 32)
	Application -> AppLeft . '`' Var '`' OneOrMany__AppRight__    (rule 33)
	Application -> AppLeft . '`' Con '`' OneOrMany__AppRight__    (rule 34)
	Application -> AppLeft . Oper OneOrMany__AppRight__    (rule 35)
	AppLeft -> '(' AppLeft . ')'                        (rule 42)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	'::'           reduce using rule 29
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 70
	opcon          shift, and enter state 71
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	')'            shift, and enter state 91
			(reduce using rule 29)

	'['            shift, and enter state 21
	','            reduce using rule 29
	'`'            shift, and enter state 73
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Oper           goto state 66
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 69

State 56

	AppLeft -> '(' opcon . ')'                          (rule 38)

	')'            shift, and enter state 90


State 57

	AppLeft -> letrec LowIdent . Params '=' Exp in Exp    (rule 46)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 89
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 58

	LowIdent -> '(' . Op ')'                            (rule 19)

	op             shift, and enter state 45

	Op             goto state 41

State 59

	AppLeft -> fix Exp .                                (rule 43)

	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	let            reduce using rule 43
	in             reduce using rule 43
	lambda         reduce using rule 43
	fix            reduce using rule 43
	letrec         reduce using rule 43
	'::'           reduce using rule 43
	varid          reduce using rule 43
	conid          reduce using rule 43
	op             reduce using rule 43
	opcon          reduce using rule 43
	symid          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'`'            reduce using rule 43
	'}'            reduce using rule 43
	';'            reduce using rule 43
	integer        reduce using rule 43
	char           reduce using rule 43
	double         reduce using rule 43
	string         reduce using rule 43
	%eof           reduce using rule 43


State 60

	AppLeft -> lambda Params . '->' Exp                 (rule 41)

	'->'           shift, and enter state 88


State 61

	NoneOrMany__Var__ -> Var . NoneOrMany__Var__        (rule 93)

	'->'           reduce using rule 92
	'='            reduce using rule 92
	varid          shift, and enter state 17
	'}'            reduce using rule 92
	';'            reduce using rule 92

	Var            goto state 61
	NoneOrMany__Var__goto state 87

State 62

	Params -> NoneOrMany__Var__ .                       (rule 17)

	'->'           reduce using rule 17
	'='            reduce using rule 17
	'}'            reduce using rule 17
	';'            reduce using rule 17


State 63

	AppLeft -> let Layout__Binding__ . in Exp           (rule 45)

	in             shift, and enter state 86


State 64

	Layout__Binding__ -> '{' . LayoutInside__Binding__    (rule 86)

	varid          shift, and enter state 17
	'('            shift, and enter state 58
	rec            shift, and enter state 85

	LowIdent       goto state 81
	Var            goto state 82
	Binding        goto state 83
	LayoutInside__Binding__goto state 84

State 65

	AppLeft -> if Exp . then Exp else Exp               (rule 44)

	then           shift, and enter state 80


State 66

	Application -> AppLeft Oper . OneOrMany__AppRight__    (rule 35)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 79

State 67

	AppRight -> AppLeft .                               (rule 51)

	if             reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	let            reduce using rule 51
	in             reduce using rule 51
	lambda         reduce using rule 51
	fix            reduce using rule 51
	letrec         reduce using rule 51
	'::'           reduce using rule 51
	varid          reduce using rule 51
	conid          reduce using rule 51
	op             reduce using rule 51
	opcon          reduce using rule 51
	symid          reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	','            reduce using rule 51
	'`'            reduce using rule 51
	'}'            reduce using rule 51
	';'            reduce using rule 51
	integer        reduce using rule 51
	char           reduce using rule 51
	double         reduce using rule 51
	string         reduce using rule 51
	%eof           reduce using rule 51


State 68

	OneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 97)

	if             shift, and enter state 12
			(reduce using rule 103)

	then           reduce using rule 103
	else           reduce using rule 103
	let            shift, and enter state 13
			(reduce using rule 103)

	in             reduce using rule 103
	lambda         shift, and enter state 14
			(reduce using rule 103)

	fix            shift, and enter state 15
			(reduce using rule 103)

	letrec         shift, and enter state 16
			(reduce using rule 103)

	'::'           reduce using rule 103
	varid          shift, and enter state 17
			(reduce using rule 103)

	conid          shift, and enter state 18
			(reduce using rule 103)

	op             reduce using rule 103
	opcon          reduce using rule 103
	symid          shift, and enter state 19
			(reduce using rule 103)

	'('            shift, and enter state 72
			(reduce using rule 103)

	')'            reduce using rule 103
	'['            shift, and enter state 21
			(reduce using rule 103)

	']'            reduce using rule 103
	','            reduce using rule 103
	'`'            reduce using rule 103
	'}'            reduce using rule 103
	';'            reduce using rule 103
	integer        shift, and enter state 22
			(reduce using rule 103)

	char           shift, and enter state 23
			(reduce using rule 103)

	double         shift, and enter state 24
			(reduce using rule 103)

	string         shift, and enter state 25
			(reduce using rule 103)

	%eof           reduce using rule 103

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 77
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 78

State 69

	Application -> AppLeft OneOrMany__AppRight__ .      (rule 32)

	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	let            reduce using rule 32
	in             reduce using rule 32
	lambda         reduce using rule 32
	fix            reduce using rule 32
	letrec         reduce using rule 32
	'::'           reduce using rule 32
	varid          reduce using rule 32
	conid          reduce using rule 32
	op             reduce using rule 32
	opcon          reduce using rule 32
	symid          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	','            reduce using rule 32
	'`'            reduce using rule 32
	'}'            reduce using rule 32
	';'            reduce using rule 32
	integer        reduce using rule 32
	char           reduce using rule 32
	double         reduce using rule 32
	string         reduce using rule 32
	%eof           reduce using rule 32


State 70

	Oper -> op .                                        (rule 27)

	if             reduce using rule 27
	let            reduce using rule 27
	lambda         reduce using rule 27
	fix            reduce using rule 27
	letrec         reduce using rule 27
	varid          reduce using rule 27
	conid          reduce using rule 27
	symid          reduce using rule 27
	'('            reduce using rule 27
	'['            reduce using rule 27
	integer        reduce using rule 27
	char           reduce using rule 27
	double         reduce using rule 27
	string         reduce using rule 27


State 71

	Oper -> opcon .                                     (rule 28)

	if             reduce using rule 28
	let            reduce using rule 28
	lambda         reduce using rule 28
	fix            reduce using rule 28
	letrec         reduce using rule 28
	varid          reduce using rule 28
	conid          reduce using rule 28
	symid          reduce using rule 28
	'('            reduce using rule 28
	'['            reduce using rule 28
	integer        reduce using rule 28
	char           reduce using rule 28
	double         reduce using rule 28
	string         reduce using rule 28


State 72

	LowIdent -> '(' . Op ')'                            (rule 19)
	AppLeft -> '(' . opcon ')'                          (rule 38)
	AppLeft -> '(' . AppLeft ')'                        (rule 42)
	AppLeft -> '(' . Exp CommaSeparated__Exp__ ')'      (rule 47)
	AppLeft -> '(' . Application ')'                    (rule 49)
	AppLeft -> '(' . Exp '::' Type ')'                  (rule 50)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	op             shift, and enter state 45
	opcon          shift, and enter state 56
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Op             goto state 41
	Exp            goto state 76
	Application    goto state 54
	AppLeft        goto state 55
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 73

	Application -> AppLeft '`' . Var '`' OneOrMany__AppRight__    (rule 33)
	Application -> AppLeft '`' . Con '`' OneOrMany__AppRight__    (rule 34)

	varid          shift, and enter state 17
	conid          shift, and enter state 18

	Var            goto state 74
	Con            goto state 75

State 74

	Application -> AppLeft '`' Var . '`' OneOrMany__AppRight__    (rule 33)

	'`'            shift, and enter state 132


State 75

	Application -> AppLeft '`' Con . '`' OneOrMany__AppRight__    (rule 34)

	'`'            shift, and enter state 131


State 76

	AppLeft -> '(' Exp . CommaSeparated__Exp__ ')'      (rule 47)
	AppLeft -> '(' Exp . '::' Type ')'                  (rule 50)

	'::'           shift, and enter state 94
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 93

State 77

	NoneOrMany__AppRight__ -> AppRight . NoneOrMany__AppRight__    (rule 104)

	if             shift, and enter state 12
			(reduce using rule 103)

	then           reduce using rule 103
	else           reduce using rule 103
	let            shift, and enter state 13
			(reduce using rule 103)

	in             reduce using rule 103
	lambda         shift, and enter state 14
			(reduce using rule 103)

	fix            shift, and enter state 15
			(reduce using rule 103)

	letrec         shift, and enter state 16
			(reduce using rule 103)

	'::'           reduce using rule 103
	varid          shift, and enter state 17
			(reduce using rule 103)

	conid          shift, and enter state 18
			(reduce using rule 103)

	op             reduce using rule 103
	opcon          reduce using rule 103
	symid          shift, and enter state 19
			(reduce using rule 103)

	'('            shift, and enter state 72
			(reduce using rule 103)

	')'            reduce using rule 103
	'['            shift, and enter state 21
			(reduce using rule 103)

	']'            reduce using rule 103
	','            reduce using rule 103
	'`'            reduce using rule 103
	'}'            reduce using rule 103
	';'            reduce using rule 103
	integer        shift, and enter state 22
			(reduce using rule 103)

	char           shift, and enter state 23
			(reduce using rule 103)

	double         shift, and enter state 24
			(reduce using rule 103)

	string         shift, and enter state 25
			(reduce using rule 103)

	%eof           reduce using rule 103

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 77
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrMany__AppRight__goto state 130

State 78

	OneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 97)

	if             reduce using rule 97
	then           reduce using rule 97
	else           reduce using rule 97
	let            reduce using rule 97
	in             reduce using rule 97
	lambda         reduce using rule 97
	fix            reduce using rule 97
	letrec         reduce using rule 97
	'::'           reduce using rule 97
	varid          reduce using rule 97
	conid          reduce using rule 97
	op             reduce using rule 97
	opcon          reduce using rule 97
	symid          reduce using rule 97
	'('            reduce using rule 97
	')'            reduce using rule 97
	'['            reduce using rule 97
	']'            reduce using rule 97
	','            reduce using rule 97
	'`'            reduce using rule 97
	'}'            reduce using rule 97
	';'            reduce using rule 97
	integer        reduce using rule 97
	char           reduce using rule 97
	double         reduce using rule 97
	string         reduce using rule 97
	%eof           reduce using rule 97


State 79

	Application -> AppLeft Oper OneOrMany__AppRight__ .    (rule 35)

	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	let            reduce using rule 35
	in             reduce using rule 35
	lambda         reduce using rule 35
	fix            reduce using rule 35
	letrec         reduce using rule 35
	'::'           reduce using rule 35
	varid          reduce using rule 35
	conid          reduce using rule 35
	op             reduce using rule 35
	opcon          reduce using rule 35
	symid          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	'`'            reduce using rule 35
	'}'            reduce using rule 35
	';'            reduce using rule 35
	integer        reduce using rule 35
	char           reduce using rule 35
	double         reduce using rule 35
	string         reduce using rule 35
	%eof           reduce using rule 35


State 80

	AppLeft -> if Exp then . Exp else Exp               (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 129
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 81

	Binding -> LowIdent . Params '=' Exp                (rule 52)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 128
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 82

	LowIdent -> Var .                                   (rule 18)
	Binding -> Var . Op Params '=' Exp                  (rule 53)
	Binding -> Var . '`' Var '`' Params '=' Exp         (rule 54)

	'='            reduce using rule 18
	varid          reduce using rule 18
	op             shift, and enter state 45
	'`'            shift, and enter state 127

	Op             goto state 126

State 83

	LayoutInside__Binding__ -> Binding . '}'            (rule 99)
	LayoutInside__Binding__ -> Binding . ';' LayoutInside__Binding__    (rule 100)

	'}'            shift, and enter state 124
	';'            shift, and enter state 125


State 84

	Layout__Binding__ -> '{' LayoutInside__Binding__ .    (rule 86)

	in             reduce using rule 86


State 85

	Binding -> rec . LowIdent Params '=' Exp            (rule 55)
	Binding -> rec . Var Op Params '=' Exp              (rule 56)
	Binding -> rec . Var '`' Var '`' Params '=' Exp     (rule 57)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 122
	Var            goto state 123

State 86

	AppLeft -> let Layout__Binding__ in . Exp           (rule 45)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 121
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 87

	NoneOrMany__Var__ -> Var NoneOrMany__Var__ .        (rule 93)

	'->'           reduce using rule 93
	'='            reduce using rule 93
	'}'            reduce using rule 93
	';'            reduce using rule 93


State 88

	AppLeft -> lambda Params '->' . Exp                 (rule 41)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 120
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 89

	AppLeft -> letrec LowIdent Params . '=' Exp in Exp    (rule 46)

	'='            shift, and enter state 119


State 90

	AppLeft -> '(' opcon ')' .                          (rule 38)

	if             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	let            reduce using rule 38
	in             reduce using rule 38
	lambda         reduce using rule 38
	fix            reduce using rule 38
	letrec         reduce using rule 38
	'::'           reduce using rule 38
	varid          reduce using rule 38
	conid          reduce using rule 38
	op             reduce using rule 38
	opcon          reduce using rule 38
	symid          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	'`'            reduce using rule 38
	'}'            reduce using rule 38
	';'            reduce using rule 38
	integer        reduce using rule 38
	char           reduce using rule 38
	double         reduce using rule 38
	string         reduce using rule 38
	%eof           reduce using rule 38


State 91

	AppLeft -> '(' AppLeft ')' .                        (rule 42)

	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	let            reduce using rule 42
	in             reduce using rule 42
	lambda         reduce using rule 42
	fix            reduce using rule 42
	letrec         reduce using rule 42
	'::'           reduce using rule 42
	varid          reduce using rule 42
	conid          reduce using rule 42
	op             reduce using rule 42
	opcon          reduce using rule 42
	symid          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'`'            reduce using rule 42
	'}'            reduce using rule 42
	';'            reduce using rule 42
	integer        reduce using rule 42
	char           reduce using rule 42
	double         reduce using rule 42
	string         reduce using rule 42
	%eof           reduce using rule 42


State 92

	AppLeft -> '(' Application ')' .                    (rule 49)

	if             reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	let            reduce using rule 49
	in             reduce using rule 49
	lambda         reduce using rule 49
	fix            reduce using rule 49
	letrec         reduce using rule 49
	'::'           reduce using rule 49
	varid          reduce using rule 49
	conid          reduce using rule 49
	op             reduce using rule 49
	opcon          reduce using rule 49
	symid          reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	'`'            reduce using rule 49
	'}'            reduce using rule 49
	';'            reduce using rule 49
	integer        reduce using rule 49
	char           reduce using rule 49
	double         reduce using rule 49
	string         reduce using rule 49
	%eof           reduce using rule 49


State 93

	AppLeft -> '(' Exp CommaSeparated__Exp__ . ')'      (rule 47)

	')'            shift, and enter state 118


State 94

	AppLeft -> '(' Exp '::' . Type ')'                  (rule 50)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 117
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 95

	Exp -> '(' Exp ')' .                                (rule 31)

	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	let            reduce using rule 31
	in             reduce using rule 31
	lambda         reduce using rule 31
	fix            reduce using rule 31
	letrec         reduce using rule 31
	'::'           reduce using rule 31
	varid          reduce using rule 31
	conid          reduce using rule 31
	op             reduce using rule 31
	opcon          reduce using rule 31
	symid          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	','            reduce using rule 31
	'`'            reduce using rule 31
	'}'            reduce using rule 31
	';'            reduce using rule 31
	integer        reduce using rule 31
	char           reduce using rule 31
	double         reduce using rule 31
	string         reduce using rule 31
	%eof           reduce using rule 31


State 96

	CommaSeparated__Exp__ -> ',' . Exp                  (rule 82)
	CommaSeparated__Exp__ -> ',' . Exp CommaSeparated__Exp__    (rule 83)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 116
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 97

	AppLeft -> '[' NoneOrManySeparated__Exp__ ']' .     (rule 48)

	if             reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	let            reduce using rule 48
	in             reduce using rule 48
	lambda         reduce using rule 48
	fix            reduce using rule 48
	letrec         reduce using rule 48
	'::'           reduce using rule 48
	varid          reduce using rule 48
	conid          reduce using rule 48
	op             reduce using rule 48
	opcon          reduce using rule 48
	symid          reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	'`'            reduce using rule 48
	'}'            reduce using rule 48
	';'            reduce using rule 48
	integer        reduce using rule 48
	char           reduce using rule 48
	double         reduce using rule 48
	string         reduce using rule 48
	%eof           reduce using rule 48


State 98

	NoneOrManySeparated__Exp__ -> Exp ',' . NoneOrManySeparated__Exp__    (rule 96)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	']'            reduce using rule 94
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 51
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	NoneOrManySeparated__Exp__goto state 115

State 99

	TyArr -> Type . '->' Type                           (rule 73)
	TyArr -> Type '->' Type .                           (rule 73)

	'->'           shift, and enter state 50
			(reduce using rule 73)

	'|'            reduce using rule 73
	varid          reduce using rule 73
	conid          reduce using rule 73
	opcon          reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	'`'            reduce using rule 73
	'}'            reduce using rule 73
	';'            reduce using rule 73
	unit           reduce using rule 73
	%eof           reduce using rule 73


State 100

	Type -> TyAppLeft .                                 (rule 70)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 75)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 91)
	OneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 98)

	'->'           reduce using rule 90
			(reduce using rule 70)

	'|'            reduce using rule 90
	varid          shift, and enter state 17
			(reduce using rule 90)

	conid          shift, and enter state 18
			(reduce using rule 90)

	opcon          reduce using rule 90
	'('            shift, and enter state 34
			(reduce using rule 90)

	')'            reduce using rule 90
	','            reduce using rule 90
	'`'            reduce using rule 90
	'}'            reduce using rule 90
	';'            reduce using rule 90
	unit           shift, and enter state 35
			(reduce using rule 90)

	%eof           reduce using rule 90

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 114
	OneOrMany__TyAppLeft__goto state 49

State 101

	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 98)

	'->'           reduce using rule 98
	'|'            reduce using rule 98
	varid          reduce using rule 98
	conid          reduce using rule 98
	opcon          reduce using rule 98
	'('            reduce using rule 98
	')'            reduce using rule 98
	','            reduce using rule 98
	'`'            reduce using rule 98
	'}'            reduce using rule 98
	';'            reduce using rule 98
	unit           reduce using rule 98
	%eof           reduce using rule 98


State 102

	UpIdent -> '(' opcon ')' .                          (rule 21)

	'->'           reduce using rule 21
	'='            reduce using rule 21
	'|'            reduce using rule 21
	varid          reduce using rule 21
	conid          reduce using rule 21
	opcon          reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	'`'            reduce using rule 21
	'}'            reduce using rule 21
	';'            reduce using rule 21
	unit           reduce using rule 21
	where          reduce using rule 21
	%eof           reduce using rule 21


State 103

	TyAppLeft -> '(' TyAppLeft ')' .                    (rule 81)

	'->'           reduce using rule 81
	'|'            reduce using rule 81
	varid          reduce using rule 81
	conid          reduce using rule 81
	opcon          reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	','            reduce using rule 81
	'`'            reduce using rule 81
	'}'            reduce using rule 81
	';'            reduce using rule 81
	unit           reduce using rule 81
	%eof           reduce using rule 81


State 104

	TyAppLeft -> '(' TyApp ')' .                        (rule 80)

	'->'           reduce using rule 80
	'|'            reduce using rule 80
	varid          reduce using rule 80
	conid          reduce using rule 80
	opcon          reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	','            reduce using rule 80
	'`'            reduce using rule 80
	'}'            reduce using rule 80
	';'            reduce using rule 80
	unit           reduce using rule 80
	%eof           reduce using rule 80


State 105

	TyTuple -> '(' Type CommaSeparated__Type__ . ')'    (rule 74)

	')'            shift, and enter state 113


State 106

	Type -> '(' Type ')' .                              (rule 72)

	'->'           reduce using rule 72
	'|'            reduce using rule 72
	varid          reduce using rule 72
	conid          reduce using rule 72
	opcon          reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	'`'            reduce using rule 72
	'}'            reduce using rule 72
	';'            reduce using rule 72
	unit           reduce using rule 72
	%eof           reduce using rule 72


State 107

	CommaSeparated__Type__ -> ',' . Type                (rule 84)
	CommaSeparated__Type__ -> ',' . Type CommaSeparated__Type__    (rule 85)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 112
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 108

	LowIdent -> '(' Op ')' .                            (rule 19)

	if             reduce using rule 19
	then           reduce using rule 19
	else           reduce using rule 19
	let            reduce using rule 19
	in             reduce using rule 19
	lambda         reduce using rule 19
	fix            reduce using rule 19
	letrec         reduce using rule 19
	'->'           reduce using rule 19
	'='            reduce using rule 19
	'|'            reduce using rule 19
	'::'           reduce using rule 19
	varid          reduce using rule 19
	conid          reduce using rule 19
	op             reduce using rule 19
	opcon          reduce using rule 19
	symid          reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	','            reduce using rule 19
	'`'            reduce using rule 19
	'}'            reduce using rule 19
	';'            reduce using rule 19
	unit           reduce using rule 19
	integer        reduce using rule 19
	char           reduce using rule 19
	double         reduce using rule 19
	string         reduce using rule 19
	%eof           reduce using rule 19


State 109

	Module -> module UpIdent where . Layout__Declaration__    (rule 4)

	'{'            shift, and enter state 111

	Layout__Declaration__goto state 110

State 110

	Module -> module UpIdent where Layout__Declaration__ .    (rule 4)

	%eof           reduce using rule 4


State 111

	Layout__Declaration__ -> '{' . LayoutInside__Declaration__    (rule 87)

	data           shift, and enter state 156
	type           shift, and enter state 157
	varid          shift, and enter state 17
	'('            shift, and enter state 58

	Declaration    goto state 147
	Data           goto state 148
	TypeSynonym    goto state 149
	LowIdent       goto state 150
	Var            goto state 151
	GlobalBinding  goto state 152
	Fun            goto state 153
	Annotation     goto state 154
	LayoutInside__Declaration__goto state 155

State 112

	TyArr -> Type . '->' Type                           (rule 73)
	CommaSeparated__Type__ -> ',' Type .                (rule 84)
	CommaSeparated__Type__ -> ',' Type . CommaSeparated__Type__    (rule 85)

	'->'           shift, and enter state 50
	')'            reduce using rule 84
	','            shift, and enter state 107

	CommaSeparated__Type__goto state 146

State 113

	TyTuple -> '(' Type CommaSeparated__Type__ ')' .    (rule 74)

	'->'           reduce using rule 74
	'|'            reduce using rule 74
	varid          reduce using rule 74
	conid          reduce using rule 74
	opcon          reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	','            reduce using rule 74
	'`'            reduce using rule 74
	'}'            reduce using rule 74
	';'            reduce using rule 74
	unit           reduce using rule 74
	%eof           reduce using rule 74


State 114

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 91)
	OneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 98)

	'->'           reduce using rule 98
			(reduce using rule 91)

	'|'            reduce using rule 91
	varid          reduce using rule 91
	conid          reduce using rule 91
	opcon          reduce using rule 91
	'('            reduce using rule 91
	')'            reduce using rule 91
	','            reduce using rule 91
	'`'            reduce using rule 91
	'}'            reduce using rule 91
	';'            reduce using rule 91
	unit           reduce using rule 91
	%eof           reduce using rule 91


State 115

	NoneOrManySeparated__Exp__ -> Exp ',' NoneOrManySeparated__Exp__ .    (rule 96)

	']'            reduce using rule 96


State 116

	CommaSeparated__Exp__ -> ',' Exp .                  (rule 82)
	CommaSeparated__Exp__ -> ',' Exp . CommaSeparated__Exp__    (rule 83)

	')'            reduce using rule 82
	','            shift, and enter state 96

	CommaSeparated__Exp__goto state 145

State 117

	AppLeft -> '(' Exp '::' Type . ')'                  (rule 50)
	TyArr -> Type . '->' Type                           (rule 73)

	'->'           shift, and enter state 50
	')'            shift, and enter state 144


State 118

	AppLeft -> '(' Exp CommaSeparated__Exp__ ')' .      (rule 47)

	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	let            reduce using rule 47
	in             reduce using rule 47
	lambda         reduce using rule 47
	fix            reduce using rule 47
	letrec         reduce using rule 47
	'::'           reduce using rule 47
	varid          reduce using rule 47
	conid          reduce using rule 47
	op             reduce using rule 47
	opcon          reduce using rule 47
	symid          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	'`'            reduce using rule 47
	'}'            reduce using rule 47
	';'            reduce using rule 47
	integer        reduce using rule 47
	char           reduce using rule 47
	double         reduce using rule 47
	string         reduce using rule 47
	%eof           reduce using rule 47


State 119

	AppLeft -> letrec LowIdent Params '=' . Exp in Exp    (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 143
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 120

	AppLeft -> lambda Params '->' Exp .                 (rule 41)

	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	let            reduce using rule 41
	in             reduce using rule 41
	lambda         reduce using rule 41
	fix            reduce using rule 41
	letrec         reduce using rule 41
	'::'           reduce using rule 41
	varid          reduce using rule 41
	conid          reduce using rule 41
	op             reduce using rule 41
	opcon          reduce using rule 41
	symid          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	'`'            reduce using rule 41
	'}'            reduce using rule 41
	';'            reduce using rule 41
	integer        reduce using rule 41
	char           reduce using rule 41
	double         reduce using rule 41
	string         reduce using rule 41
	%eof           reduce using rule 41


State 121

	AppLeft -> let Layout__Binding__ in Exp .           (rule 45)

	if             reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	let            reduce using rule 45
	in             reduce using rule 45
	lambda         reduce using rule 45
	fix            reduce using rule 45
	letrec         reduce using rule 45
	'::'           reduce using rule 45
	varid          reduce using rule 45
	conid          reduce using rule 45
	op             reduce using rule 45
	opcon          reduce using rule 45
	symid          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'`'            reduce using rule 45
	'}'            reduce using rule 45
	';'            reduce using rule 45
	integer        reduce using rule 45
	char           reduce using rule 45
	double         reduce using rule 45
	string         reduce using rule 45
	%eof           reduce using rule 45


State 122

	Binding -> rec LowIdent . Params '=' Exp            (rule 55)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 142
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 123

	LowIdent -> Var .                                   (rule 18)
	Binding -> rec Var . Op Params '=' Exp              (rule 56)
	Binding -> rec Var . '`' Var '`' Params '=' Exp     (rule 57)

	'='            reduce using rule 18
	varid          reduce using rule 18
	op             shift, and enter state 45
	'`'            shift, and enter state 141

	Op             goto state 140

State 124

	LayoutInside__Binding__ -> Binding '}' .            (rule 99)

	in             reduce using rule 99


State 125

	LayoutInside__Binding__ -> Binding ';' . LayoutInside__Binding__    (rule 100)

	varid          shift, and enter state 17
	'('            shift, and enter state 58
	rec            shift, and enter state 85

	LowIdent       goto state 81
	Var            goto state 82
	Binding        goto state 83
	LayoutInside__Binding__goto state 139

State 126

	Binding -> Var Op . Params '=' Exp                  (rule 53)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 138
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 127

	Binding -> Var '`' . Var '`' Params '=' Exp         (rule 54)

	varid          shift, and enter state 17

	Var            goto state 137

State 128

	Binding -> LowIdent Params . '=' Exp                (rule 52)

	'='            shift, and enter state 136


State 129

	AppLeft -> if Exp then Exp . else Exp               (rule 44)

	else           shift, and enter state 135


State 130

	NoneOrMany__AppRight__ -> AppRight NoneOrMany__AppRight__ .    (rule 104)

	if             reduce using rule 104
	then           reduce using rule 104
	else           reduce using rule 104
	let            reduce using rule 104
	in             reduce using rule 104
	lambda         reduce using rule 104
	fix            reduce using rule 104
	letrec         reduce using rule 104
	'::'           reduce using rule 104
	varid          reduce using rule 104
	conid          reduce using rule 104
	op             reduce using rule 104
	opcon          reduce using rule 104
	symid          reduce using rule 104
	'('            reduce using rule 104
	')'            reduce using rule 104
	'['            reduce using rule 104
	']'            reduce using rule 104
	','            reduce using rule 104
	'`'            reduce using rule 104
	'}'            reduce using rule 104
	';'            reduce using rule 104
	integer        reduce using rule 104
	char           reduce using rule 104
	double         reduce using rule 104
	string         reduce using rule 104
	%eof           reduce using rule 104


State 131

	Application -> AppLeft '`' Con '`' . OneOrMany__AppRight__    (rule 34)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 134

State 132

	Application -> AppLeft '`' Var '`' . OneOrMany__AppRight__    (rule 33)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 72
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	AppLeft        goto state 67
	AppRight       goto state 68
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11
	OneOrMany__AppRight__goto state 133

State 133

	Application -> AppLeft '`' Var '`' OneOrMany__AppRight__ .    (rule 33)

	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	let            reduce using rule 33
	in             reduce using rule 33
	lambda         reduce using rule 33
	fix            reduce using rule 33
	letrec         reduce using rule 33
	'::'           reduce using rule 33
	varid          reduce using rule 33
	conid          reduce using rule 33
	op             reduce using rule 33
	opcon          reduce using rule 33
	symid          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	','            reduce using rule 33
	'`'            reduce using rule 33
	'}'            reduce using rule 33
	';'            reduce using rule 33
	integer        reduce using rule 33
	char           reduce using rule 33
	double         reduce using rule 33
	string         reduce using rule 33
	%eof           reduce using rule 33


State 134

	Application -> AppLeft '`' Con '`' OneOrMany__AppRight__ .    (rule 34)

	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	let            reduce using rule 34
	in             reduce using rule 34
	lambda         reduce using rule 34
	fix            reduce using rule 34
	letrec         reduce using rule 34
	'::'           reduce using rule 34
	varid          reduce using rule 34
	conid          reduce using rule 34
	op             reduce using rule 34
	opcon          reduce using rule 34
	symid          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	'`'            reduce using rule 34
	'}'            reduce using rule 34
	';'            reduce using rule 34
	integer        reduce using rule 34
	char           reduce using rule 34
	double         reduce using rule 34
	string         reduce using rule 34
	%eof           reduce using rule 34


State 135

	AppLeft -> if Exp then Exp else . Exp               (rule 44)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 174
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 136

	Binding -> LowIdent Params '=' . Exp                (rule 52)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 173
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 137

	Binding -> Var '`' Var . '`' Params '=' Exp         (rule 54)

	'`'            shift, and enter state 172


State 138

	Binding -> Var Op Params . '=' Exp                  (rule 53)

	'='            shift, and enter state 171


State 139

	LayoutInside__Binding__ -> Binding ';' LayoutInside__Binding__ .    (rule 100)

	in             reduce using rule 100


State 140

	Binding -> rec Var Op . Params '=' Exp              (rule 56)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 170
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 141

	Binding -> rec Var '`' . Var '`' Params '=' Exp     (rule 57)

	varid          shift, and enter state 17

	Var            goto state 169

State 142

	Binding -> rec LowIdent Params . '=' Exp            (rule 55)

	'='            shift, and enter state 168


State 143

	AppLeft -> letrec LowIdent Params '=' Exp . in Exp    (rule 46)

	in             shift, and enter state 167


State 144

	AppLeft -> '(' Exp '::' Type ')' .                  (rule 50)

	if             reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	let            reduce using rule 50
	in             reduce using rule 50
	lambda         reduce using rule 50
	fix            reduce using rule 50
	letrec         reduce using rule 50
	'::'           reduce using rule 50
	varid          reduce using rule 50
	conid          reduce using rule 50
	op             reduce using rule 50
	opcon          reduce using rule 50
	symid          reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	','            reduce using rule 50
	'`'            reduce using rule 50
	'}'            reduce using rule 50
	';'            reduce using rule 50
	integer        reduce using rule 50
	char           reduce using rule 50
	double         reduce using rule 50
	string         reduce using rule 50
	%eof           reduce using rule 50


State 145

	CommaSeparated__Exp__ -> ',' Exp CommaSeparated__Exp__ .    (rule 83)

	')'            reduce using rule 83


State 146

	CommaSeparated__Type__ -> ',' Type CommaSeparated__Type__ .    (rule 85)

	')'            reduce using rule 85


State 147

	LayoutInside__Declaration__ -> Declaration . '}'    (rule 101)
	LayoutInside__Declaration__ -> Declaration . ';' LayoutInside__Declaration__    (rule 102)

	'}'            shift, and enter state 165
	';'            shift, and enter state 166


State 148

	Declaration -> Data .                               (rule 6)

	'}'            reduce using rule 6
	';'            reduce using rule 6


State 149

	Declaration -> TypeSynonym .                        (rule 7)

	'}'            reduce using rule 7
	';'            reduce using rule 7


State 150

	GlobalBinding -> LowIdent . Params '=' Exp          (rule 58)
	Annotation -> LowIdent . '::' Type                  (rule 69)

	'='            reduce using rule 92
	'::'           shift, and enter state 164
	varid          shift, and enter state 17

	Params         goto state 163
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 151

	LowIdent -> Var .                                   (rule 18)
	GlobalBinding -> Var . Op Params '=' Exp            (rule 59)
	GlobalBinding -> Var . '`' Var '`' Params '=' Exp    (rule 60)

	'='            reduce using rule 18
	'::'           reduce using rule 18
	varid          reduce using rule 18
	op             shift, and enter state 45
	'`'            shift, and enter state 162

	Op             goto state 161

State 152

	Fun -> GlobalBinding .                              (rule 61)

	'}'            reduce using rule 61
	';'            reduce using rule 61


State 153

	Declaration -> Fun .                                (rule 5)

	'}'            reduce using rule 5
	';'            reduce using rule 5


State 154

	Fun -> Annotation . ';' GlobalBinding               (rule 62)

	';'            shift, and enter state 160


State 155

	Layout__Declaration__ -> '{' LayoutInside__Declaration__ .    (rule 87)

	%eof           reduce using rule 87


State 156

	Data -> data . UpIdent Params Constructors          (rule 8)

	conid          shift, and enter state 18
	'('            shift, and enter state 40
	unit           shift, and enter state 35

	UpIdent        goto state 159
	Con            goto state 28

State 157

	TypeSynonym -> type . Con NoneOrMany__Var__ '=' Type    (rule 16)

	conid          shift, and enter state 18

	Con            goto state 158

State 158

	TypeSynonym -> type Con . NoneOrMany__Var__ '=' Type    (rule 16)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Var            goto state 61
	NoneOrMany__Var__goto state 189

State 159

	Data -> data UpIdent . Params Constructors          (rule 8)

	'='            reduce using rule 92
	varid          shift, and enter state 17
	'}'            reduce using rule 92
	';'            reduce using rule 92

	Params         goto state 188
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 160

	Fun -> Annotation ';' . GlobalBinding               (rule 62)

	varid          shift, and enter state 17
	'('            shift, and enter state 58

	LowIdent       goto state 186
	Var            goto state 151
	GlobalBinding  goto state 187

State 161

	GlobalBinding -> Var Op . Params '=' Exp            (rule 59)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 185
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 162

	GlobalBinding -> Var '`' . Var '`' Params '=' Exp    (rule 60)

	varid          shift, and enter state 17

	Var            goto state 184

State 163

	GlobalBinding -> LowIdent Params . '=' Exp          (rule 58)

	'='            shift, and enter state 183


State 164

	Annotation -> LowIdent '::' . Type                  (rule 69)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 182
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 165

	LayoutInside__Declaration__ -> Declaration '}' .    (rule 101)

	%eof           reduce using rule 101


State 166

	LayoutInside__Declaration__ -> Declaration ';' . LayoutInside__Declaration__    (rule 102)

	data           shift, and enter state 156
	type           shift, and enter state 157
	varid          shift, and enter state 17
	'('            shift, and enter state 58

	Declaration    goto state 147
	Data           goto state 148
	TypeSynonym    goto state 149
	LowIdent       goto state 150
	Var            goto state 151
	GlobalBinding  goto state 152
	Fun            goto state 153
	Annotation     goto state 154
	LayoutInside__Declaration__goto state 181

State 167

	AppLeft -> letrec LowIdent Params '=' Exp in . Exp    (rule 46)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 180
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 168

	Binding -> rec LowIdent Params '=' . Exp            (rule 55)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 179
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 169

	Binding -> rec Var '`' Var . '`' Params '=' Exp     (rule 57)

	'`'            shift, and enter state 178


State 170

	Binding -> rec Var Op Params . '=' Exp              (rule 56)

	'='            shift, and enter state 177


State 171

	Binding -> Var Op Params '=' . Exp                  (rule 53)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 176
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 172

	Binding -> Var '`' Var '`' . Params '=' Exp         (rule 54)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 175
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 173

	Binding -> LowIdent Params '=' Exp .                (rule 52)

	'}'            reduce using rule 52
	';'            reduce using rule 52


State 174

	AppLeft -> if Exp then Exp else Exp .               (rule 44)

	if             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	let            reduce using rule 44
	in             reduce using rule 44
	lambda         reduce using rule 44
	fix            reduce using rule 44
	letrec         reduce using rule 44
	'::'           reduce using rule 44
	varid          reduce using rule 44
	conid          reduce using rule 44
	op             reduce using rule 44
	opcon          reduce using rule 44
	symid          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	'`'            reduce using rule 44
	'}'            reduce using rule 44
	';'            reduce using rule 44
	integer        reduce using rule 44
	char           reduce using rule 44
	double         reduce using rule 44
	string         reduce using rule 44
	%eof           reduce using rule 44


State 175

	Binding -> Var '`' Var '`' Params . '=' Exp         (rule 54)

	'='            shift, and enter state 198


State 176

	Binding -> Var Op Params '=' Exp .                  (rule 53)

	'}'            reduce using rule 53
	';'            reduce using rule 53


State 177

	Binding -> rec Var Op Params '=' . Exp              (rule 56)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 197
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 178

	Binding -> rec Var '`' Var '`' . Params '=' Exp     (rule 57)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 196
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 179

	Binding -> rec LowIdent Params '=' Exp .            (rule 55)

	'}'            reduce using rule 55
	';'            reduce using rule 55


State 180

	AppLeft -> letrec LowIdent Params '=' Exp in Exp .    (rule 46)

	if             reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	let            reduce using rule 46
	in             reduce using rule 46
	lambda         reduce using rule 46
	fix            reduce using rule 46
	letrec         reduce using rule 46
	'::'           reduce using rule 46
	varid          reduce using rule 46
	conid          reduce using rule 46
	op             reduce using rule 46
	opcon          reduce using rule 46
	symid          reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	'`'            reduce using rule 46
	'}'            reduce using rule 46
	';'            reduce using rule 46
	integer        reduce using rule 46
	char           reduce using rule 46
	double         reduce using rule 46
	string         reduce using rule 46
	%eof           reduce using rule 46


State 181

	LayoutInside__Declaration__ -> Declaration ';' LayoutInside__Declaration__ .    (rule 102)

	%eof           reduce using rule 102


State 182

	Annotation -> LowIdent '::' Type .                  (rule 69)
	TyArr -> Type . '->' Type                           (rule 73)

	'->'           shift, and enter state 50
	';'            reduce using rule 69


State 183

	GlobalBinding -> LowIdent Params '=' . Exp          (rule 58)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 195
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 184

	GlobalBinding -> Var '`' Var . '`' Params '=' Exp    (rule 60)

	'`'            shift, and enter state 194


State 185

	GlobalBinding -> Var Op Params . '=' Exp            (rule 59)

	'='            shift, and enter state 193


State 186

	GlobalBinding -> LowIdent . Params '=' Exp          (rule 58)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 163
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 187

	Fun -> Annotation ';' GlobalBinding .               (rule 62)

	'}'            reduce using rule 62
	';'            reduce using rule 62


State 188

	Data -> data UpIdent Params . Constructors          (rule 8)

	'='            shift, and enter state 192
	'}'            reduce using rule 9
	';'            reduce using rule 9

	Constructors   goto state 191

State 189

	TypeSynonym -> type Con NoneOrMany__Var__ . '=' Type    (rule 16)

	'='            shift, and enter state 190


State 190

	TypeSynonym -> type Con NoneOrMany__Var__ '=' . Type    (rule 16)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 206
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 33

State 191

	Data -> data UpIdent Params Constructors .          (rule 8)

	'}'            reduce using rule 8
	';'            reduce using rule 8


State 192

	Constructors -> '=' . Constr NoneOrMany__ConstrOther__    (rule 10)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 203
	LowIdent       goto state 26
	UpIdent        goto state 204
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 205

State 193

	GlobalBinding -> Var Op Params '=' . Exp            (rule 59)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 202
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 194

	GlobalBinding -> Var '`' Var '`' . Params '=' Exp    (rule 60)

	'='            reduce using rule 92
	varid          shift, and enter state 17

	Params         goto state 201
	Var            goto state 61
	NoneOrMany__Var__goto state 62

State 195

	GlobalBinding -> LowIdent Params '=' Exp .          (rule 58)

	'}'            reduce using rule 58
	';'            reduce using rule 58


State 196

	Binding -> rec Var '`' Var '`' Params . '=' Exp     (rule 57)

	'='            shift, and enter state 200


State 197

	Binding -> rec Var Op Params '=' Exp .              (rule 56)

	'}'            reduce using rule 56
	';'            reduce using rule 56


State 198

	Binding -> Var '`' Var '`' Params '=' . Exp         (rule 54)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 199
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 199

	Binding -> Var '`' Var '`' Params '=' Exp .         (rule 54)

	'}'            reduce using rule 54
	';'            reduce using rule 54


State 200

	Binding -> rec Var '`' Var '`' Params '=' . Exp     (rule 57)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 217
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 201

	GlobalBinding -> Var '`' Var '`' Params . '=' Exp    (rule 60)

	'='            shift, and enter state 216


State 202

	GlobalBinding -> Var Op Params '=' Exp .            (rule 59)

	'}'            reduce using rule 59
	';'            reduce using rule 59


State 203

	Constructors -> '=' Constr . NoneOrMany__ConstrOther__    (rule 10)

	'|'            shift, and enter state 215
	'}'            reduce using rule 88
	';'            reduce using rule 88

	ConstrOther    goto state 213
	NoneOrMany__ConstrOther__goto state 214

State 204

	Constr -> UpIdent . NoneOrMany__TyAppLeft__         (rule 13)
	TyAppLeft -> UpIdent .                              (rule 77)

	'->'           reduce using rule 77
	'|'            reduce using rule 90
	varid          shift, and enter state 17
			(reduce using rule 77)

	conid          shift, and enter state 18
			(reduce using rule 77)

	opcon          reduce using rule 77
	'('            shift, and enter state 34
			(reduce using rule 77)

	'`'            reduce using rule 77
	'}'            reduce using rule 90
	';'            reduce using rule 90
	unit           shift, and enter state 35
			(reduce using rule 77)


	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 211
	NoneOrMany__TyAppLeft__goto state 212

State 205

	Constr -> TyAppLeft . ConName OneOrMany__TyAppLeft__    (rule 14)
	Type -> TyAppLeft .                                 (rule 70)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 75)

	'->'           reduce using rule 70
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	opcon          shift, and enter state 209
	'('            shift, and enter state 34
	'`'            shift, and enter state 210
	unit           shift, and enter state 35

	ConName        goto state 207
	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	OpCon          goto state 208
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 49

State 206

	TypeSynonym -> type Con NoneOrMany__Var__ '=' Type .    (rule 16)
	TyArr -> Type . '->' Type                           (rule 73)

	'->'           shift, and enter state 50
	'}'            reduce using rule 16
	';'            reduce using rule 16


State 207

	Constr -> TyAppLeft ConName . OneOrMany__TyAppLeft__    (rule 14)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 48
	OneOrMany__TyAppLeft__goto state 223

State 208

	ConName -> OpCon .                                  (rule 11)

	varid          reduce using rule 11
	conid          reduce using rule 11
	'('            reduce using rule 11
	unit           reduce using rule 11


State 209

	OpCon -> opcon .                                    (rule 26)

	varid          reduce using rule 26
	conid          reduce using rule 26
	'('            reduce using rule 26
	unit           reduce using rule 26


State 210

	ConName -> '`' . Con '`'                            (rule 12)

	conid          shift, and enter state 18

	Con            goto state 222

State 211

	Type -> TyAppLeft .                                 (rule 70)
	TyApp -> TyAppLeft . OneOrMany__TyAppLeft__         (rule 75)
	NoneOrMany__TyAppLeft__ -> TyAppLeft . NoneOrMany__TyAppLeft__    (rule 91)

	'->'           reduce using rule 70
	'|'            reduce using rule 90
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	'}'            reduce using rule 90
	';'            reduce using rule 90
	unit           shift, and enter state 35

	LowIdent       goto state 26
	UpIdent        goto state 27
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 100
	NoneOrMany__TyAppLeft__goto state 221
	OneOrMany__TyAppLeft__goto state 49

State 212

	Constr -> UpIdent NoneOrMany__TyAppLeft__ .         (rule 13)

	'|'            reduce using rule 13
	'}'            reduce using rule 13
	';'            reduce using rule 13


State 213

	NoneOrMany__ConstrOther__ -> ConstrOther . NoneOrMany__ConstrOther__    (rule 89)

	'|'            shift, and enter state 215
	'}'            reduce using rule 88
	';'            reduce using rule 88

	ConstrOther    goto state 213
	NoneOrMany__ConstrOther__goto state 220

State 214

	Constructors -> '=' Constr NoneOrMany__ConstrOther__ .    (rule 10)

	'}'            reduce using rule 10
	';'            reduce using rule 10


State 215

	ConstrOther -> '|' . Constr                         (rule 15)

	varid          shift, and enter state 17
	conid          shift, and enter state 18
	'('            shift, and enter state 34
	unit           shift, and enter state 35

	Constr         goto state 219
	LowIdent       goto state 26
	UpIdent        goto state 204
	Var            goto state 4
	Con            goto state 28
	Type           goto state 47
	TyArr          goto state 30
	TyTuple        goto state 31
	TyApp          goto state 32
	TyAppLeft      goto state 205

State 216

	GlobalBinding -> Var '`' Var '`' Params '=' . Exp    (rule 60)

	if             shift, and enter state 12
	let            shift, and enter state 13
	lambda         shift, and enter state 14
	fix            shift, and enter state 15
	letrec         shift, and enter state 16
	varid          shift, and enter state 17
	conid          shift, and enter state 18
	symid          shift, and enter state 19
	'('            shift, and enter state 20
	'['            shift, and enter state 21
	integer        shift, and enter state 22
	char           shift, and enter state 23
	double         shift, and enter state 24
	string         shift, and enter state 25

	LowIdent       goto state 3
	Var            goto state 4
	Con            goto state 5
	Exp            goto state 218
	Application    goto state 7
	AppLeft        goto state 8
	Lit            goto state 9
	Integer        goto state 10
	Double         goto state 11

State 217

	Binding -> rec Var '`' Var '`' Params '=' Exp .     (rule 57)

	'}'            reduce using rule 57
	';'            reduce using rule 57


State 218

	GlobalBinding -> Var '`' Var '`' Params '=' Exp .    (rule 60)

	'}'            reduce using rule 60
	';'            reduce using rule 60


State 219

	ConstrOther -> '|' Constr .                         (rule 15)

	'|'            reduce using rule 15
	'}'            reduce using rule 15
	';'            reduce using rule 15


State 220

	NoneOrMany__ConstrOther__ -> ConstrOther NoneOrMany__ConstrOther__ .    (rule 89)

	'}'            reduce using rule 89
	';'            reduce using rule 89


State 221

	NoneOrMany__TyAppLeft__ -> TyAppLeft NoneOrMany__TyAppLeft__ .    (rule 91)

	'|'            reduce using rule 91
	'}'            reduce using rule 91
	';'            reduce using rule 91


State 222

	ConName -> '`' Con . '`'                            (rule 12)

	'`'            shift, and enter state 224


State 223

	Constr -> TyAppLeft ConName OneOrMany__TyAppLeft__ .    (rule 14)

	'|'            reduce using rule 14
	'}'            reduce using rule 14
	';'            reduce using rule 14


State 224

	ConName -> '`' Con '`' .                            (rule 12)

	varid          reduce using rule 12
	conid          reduce using rule 12
	'('            reduce using rule 12
	unit           reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 105
Number of terminals: 44
Number of non-terminals: 48
Number of states: 225
